{"version":3,"file":"202.js?_cache=cca91c670b951e00d547","mappings":"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","sources":["webpack://selectdb-discover-app/./components/AppConfig/AppConfig.tsx","webpack://selectdb-discover-app/./components/testIds.ts"],"sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport { lastValueFrom } from 'rxjs';\nimport { css } from '@emotion/css';\nimport { AppPluginMeta, GrafanaTheme2, PluginConfigPageProps, PluginMeta } from '@grafana/data';\nimport { getBackendSrv } from '@grafana/runtime';\nimport { Button, Field, FieldSet, Input, SecretInput, useStyles2 } from '@grafana/ui';\nimport { testIds } from '../testIds';\n\ntype AppPluginSettings = {\n  apiUrl?: string;\n};\n\ntype State = {\n  // The URL to reach our custom API.\n  apiUrl: string;\n  // Tells us if the API key secret is set.\n  isApiKeySet: boolean;\n  // A secret key for our custom API.\n  apiKey: string;\n};\n\nexport interface AppConfigProps extends PluginConfigPageProps<AppPluginMeta<AppPluginSettings>> {}\n\nconst AppConfig = ({ plugin }: AppConfigProps) => {\n  const s = useStyles2(getStyles);\n  const { enabled, pinned, jsonData, secureJsonFields } = plugin.meta;\n  const [state, setState] = useState<State>({\n    apiUrl: jsonData?.apiUrl || '',\n    apiKey: '',\n    isApiKeySet: Boolean(secureJsonFields?.apiKey),\n  });\n\n  const isSubmitDisabled = Boolean(!state.apiUrl || (!state.isApiKeySet && !state.apiKey));\n\n  const onResetApiKey = () =>\n    setState({\n      ...state,\n      apiKey: '',\n      isApiKeySet: false,\n    });\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value.trim(),\n    });\n  };\n\n  const onSubmit = () => {\n    if (isSubmitDisabled) {\n      return;\n    }\n\n    updatePluginAndReload(plugin.meta.id, {\n      enabled,\n      pinned,\n      jsonData: {\n        apiUrl: state.apiUrl,\n      },\n      // This cannot be queried later by the frontend.\n      // We don't want to override it in case it was set previously and left untouched now.\n      secureJsonData: state.isApiKeySet\n        ? undefined\n        : {\n            apiKey: state.apiKey,\n          },\n    });\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <FieldSet label=\"API Settings\">\n        <Field label=\"API Key\" description=\"A secret key for authenticating to our custom API\">\n          <SecretInput\n            width={60}\n            id=\"config-api-key\"\n            data-testid={testIds.appConfig.apiKey}\n            name=\"apiKey\"\n            value={state.apiKey}\n            isConfigured={state.isApiKeySet}\n            placeholder={'Your secret API key'}\n            onChange={onChange}\n            onReset={onResetApiKey}\n          />\n        </Field>\n\n        <Field label=\"API Url\" description=\"\" className={s.marginTop}>\n          <Input\n            width={60}\n            name=\"apiUrl\"\n            id=\"config-api-url\"\n            data-testid={testIds.appConfig.apiUrl}\n            value={state.apiUrl}\n            placeholder={`E.g.: http://mywebsite.com/api/v1`}\n            onChange={onChange}\n          />\n        </Field>\n\n        <div className={s.marginTop}>\n          <Button type=\"submit\" data-testid={testIds.appConfig.submit} disabled={isSubmitDisabled}>\n            Save API settings\n          </Button>\n        </div>\n      </FieldSet>\n    </form>\n  );\n};\n\nexport default AppConfig;\n\nconst getStyles = (theme: GrafanaTheme2) => ({\n  colorWeak: css`\n    color: ${theme.colors.text.secondary};\n  `,\n  marginTop: css`\n    margin-top: ${theme.spacing(3)};\n  `,\n});\n\nconst updatePluginAndReload = async (pluginId: string, data: Partial<PluginMeta<AppPluginSettings>>) => {\n  try {\n    await updatePlugin(pluginId, data);\n\n    // Reloading the page as the changes made here wouldn't be propagated to the actual plugin otherwise.\n    // This is not ideal, however unfortunately currently there is no supported way for updating the plugin state.\n    window.location.reload();\n  } catch (e) {\n    console.error('Error while updating the plugin', e);\n  }\n};\n\nconst updatePlugin = async (pluginId: string, data: Partial<PluginMeta>) => {\n  const response = await getBackendSrv().fetch({\n    url: `/api/plugins/${pluginId}/settings`,\n    method: 'POST',\n    data,\n  });\n\n  return lastValueFrom(response);\n};\n","export const testIds = {\n  appConfig: {\n    apiKey: 'data-testid ac-api-key',\n    apiUrl: 'data-testid ac-api-url',\n    submit: 'data-testid ac-submit-form',\n  },\n  pageOne: {\n    container: 'data-testid pg-one-container',\n    navigateToFour: 'data-testid navigate-to-four',\n  },\n  pageTwo: {\n    container: 'data-testid pg-two-container',\n  },\n  pageThree: {\n    container: 'data-testid pg-three-container',\n  },\n  pageFour: {\n    container: 'data-testid pg-four-container',\n    navigateBack: 'data-testid navigate-back',\n  },\n};\n"],"names":["React","useState","lastValueFrom","css","getBackendSrv","Button","Field","FieldSet","Input","SecretInput","useStyles2","testIds","AppConfig","plugin","s","getStyles","enabled","pinned","jsonData","secureJsonFields","meta","state","setState","apiUrl","apiKey","isApiKeySet","Boolean","isSubmitDisabled","onResetApiKey","onChange","event","target","name","value","trim","onSubmit","updatePluginAndReload","id","secureJsonData","undefined","form","label","description","width","data-testid","appConfig","isConfigured","placeholder","onReset","className","marginTop","div","type","submit","disabled","theme","colorWeak","colors","text","secondary","spacing","pluginId","data","updatePlugin","window","location","reload","e","console","error","response","fetch","url","method","pageOne","container","navigateToFour","pageTwo","pageThree","pageFour","navigateBack"],"sourceRoot":""}