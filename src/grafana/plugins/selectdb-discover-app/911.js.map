{"version":3,"file":"911.js?_cache=da346721f0a49d38e2db","mappings":"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","sources":["webpack://selectdb-discover-app/./components/trace-detail/index.tsx","webpack://selectdb-discover-app/./constants.ts","webpack://selectdb-discover-app/./store/traces.ts","webpack://selectdb-discover-app/./components/traces/search-sidebar/index.tsx","webpack://selectdb-discover-app/./components/traces/traces-viewer/trace-item.tsx","webpack://selectdb-discover-app/./components/traces/traces-viewer/index.tsx","webpack://selectdb-discover-app/./components/traces/traces-header/discover-header.style.ts","webpack://selectdb-discover-app/./components/traces/traces-header/index.tsx","webpack://selectdb-discover-app/./pages/PageTrace.tsx","webpack://selectdb-discover-app/./components/App/App.tsx","webpack://selectdb-discover-app/./store/discover.ts","webpack://selectdb-discover-app/./utils/data.ts","webpack://selectdb-discover-app/./services/discover.ts","webpack://selectdb-discover-app/./types/type.ts","webpack://selectdb-discover-app/./services/metaservice.ts"],"sourcesContent":["import { LoadingState } from '@grafana/data';\nimport { PanelRenderer } from '@grafana/runtime';\nimport { Drawer } from '@grafana/ui';\nimport { useAtom, useAtomValue } from 'jotai';\nimport React, { useEffect } from 'react';\nimport { getTableDataTraceService } from 'services/discover';\nimport { currentTableAtom, currentCatalogAtom, currentDatabaseAtom, tableTracesDataAtom, selectedDatasourceAtom, selectedRowAtom } from 'store/discover';\nimport { formatTracesResData } from 'utils/data';\n\nexport default function TraceDetail(props: { onClose?: () => void; open: boolean; traceId?: string }) {\n    const currentTable = useAtomValue(currentTableAtom);\n    const currentCatalog = useAtomValue(currentCatalogAtom);\n    const currentDatabase = useAtomValue(currentDatabaseAtom);\n    const [traceData, setTraceData] = useAtom(tableTracesDataAtom);\n    const selectedRow = useAtomValue(selectedRowAtom);\n    const selectdbDS = useAtomValue(selectedDatasourceAtom);\n\n    const {open, traceId} = props;\n\n    const getTraceData = React.useCallback(() => {\n        let payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable || 'otel_traces',\n            cluster: '',\n            sort: 'DESC',\n            trace_id: traceId || '',\n        };\n\n        getTableDataTraceService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const formatedData = formatTracesResData(data);\n                    setTraceData(formatedData);\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }, [currentCatalog, currentDatabase, currentTable, selectdbDS, setTraceData, traceId]);\n\n    useEffect(() => {\n        if (traceId) {\n            getTraceData();\n        }\n    }, [selectedRow.trace_id, currentCatalog, currentDatabase, selectdbDS, setTraceData, getTraceData, traceId]);\n\n    return (\n        <>\n            {open && (\n                <Drawer\n                    title=\"Trace Panel\"\n                    onClose={() => {\n                        props?.onClose?.();\n                    }}\n                    size=\"lg\"\n                >\n                    {traceData ? (\n                        <PanelRenderer\n                            title=\"test\"\n                            width={200}\n                            height={300}\n                            pluginId=\"traces\"\n                            options={{}}\n                            data={{\n                                state: LoadingState.Done,\n                                series: [traceData],\n                                timeRange: {\n                                    from: new Date(Date.now() - 15 * 60 * 1000) as any, // 15 分钟前\n                                    to: new Date() as any,\n                                    raw: {\n                                        from: 'now-15m',\n                                        to: 'now',\n                                    },\n                                },\n                            }}\n                        />\n                    ) : null}\n                </Drawer>\n            )}\n        </>\n    );\n}\n","import { AutoInterval } from 'types/type';\nimport pluginJson from './plugin.json';\nimport { Dayjs } from 'dayjs';\nimport { groupBy } from 'lodash-es';\n\nexport const PLUGIN_BASE_URL = `/a/${pluginJson.id}`;\n\nexport enum ROUTES {\n  One = 'one',\n  Discover = 'discover',\n  Traces = 'traces',\n  Dashboard = 'dashboard',\n}\n\nexport const FORMAT_DATE = 'YYYY-MM-DD HH:mm:ss';\nexport enum IntervalEnum {\n    Auto = 'auto',\n    Day = 'day',\n    Week = 'week',\n    Month = 'month',\n    Year = 'year',\n    Hour = 'hour',\n    Minute = 'minute',\n    Second = 'second',\n}\n\nexport const DEFAULT_SERVICE = { value: 'all', label: 'ALL' };\nexport const DEFAULT_OPERATION = { value: 'all', label: 'ALL' };\n\nexport const AUTO_INTERVALS = [\n    {\n        current_date_range: 3,\n        current_type: 'year',\n        interval_unit: 'month',\n        interval_value: 1,\n    },\n    {\n        current_date_range: 1,\n        current_type: 'year',\n        interval_unit: 'week',\n        interval_value: 1,\n    },\n    {\n        current_date_range: 1,\n        current_type: 'month',\n        interval_unit: 'day',\n        interval_value: 1,\n    },\n    {\n        current_date_range: 1,\n        current_type: 'week',\n        interval_unit: 'hour',\n        interval_value: 12,\n    },\n    {\n        current_date_range: 4,\n        current_type: 'day',\n        interval_unit: 'hour',\n        interval_value: 3,\n    },\n    {\n        current_date_range: 1,\n        current_type: 'day',\n        interval_unit: 'hour',\n        interval_value: 1,\n    },\n    {\n        current_date_range: 16,\n        current_type: 'hour',\n        interval_unit: 'minute',\n        interval_value: 30,\n    },\n    {\n        current_date_range: 8,\n        current_type: 'hour',\n        interval_unit: 'minute',\n        interval_value: 10,\n    },\n    {\n        current_date_range: 2,\n        current_type: 'hour',\n        interval_unit: 'minute',\n        interval_value: 5,\n    },\n    {\n        current_date_range: 38,\n        current_type: 'minute',\n        interval_unit: 'minute',\n        interval_value: 1,\n    },\n    {\n        current_date_range: 13,\n        current_type: 'minute',\n        interval_unit: 'second',\n        interval_value: 30,\n    },\n    {\n        current_date_range: 6,\n        current_type: 'minute',\n        interval_unit: 'second',\n        interval_value: 10,\n    },\n    {\n        current_date_range: 4,\n        current_type: 'minute',\n        interval_unit: 'second',\n        interval_value: 5,\n    },\n    {\n        current_date_range: 1,\n        current_type: 'minute',\n        interval_unit: 'second',\n        interval_value: 1,\n    },\n];\n\nexport const CAN_SEARCH_FIELD_TYPE = ['STRING', 'ARRAY', 'NUMBER', 'VARIANT'];\nexport const ENABLE_SEARCH_FIELD_TYPE = ['DATETIME', 'TIMESTAMP', 'TIME'];\n\n\nexport function getAutoInterval(currentDate: [Dayjs, Dayjs]): AutoInterval {\n    const AUTO_INTERVALS_OBJ = groupBy(AUTO_INTERVALS, ({ current_type }) => current_type);\n    const [startDate, endDate] = currentDate;\n    const diffYear = endDate?.diff(startDate, 'year');\n    const diffMonth = endDate?.diff(startDate, 'month');\n    const diffWeek = endDate?.diff(startDate, 'week');\n    const diffDay = endDate?.diff(startDate, 'day');\n    const diffHour = endDate?.diff(startDate, 'hour');\n    const diffMinute = endDate?.diff(startDate, 'minute');\n\n    let intervalInfo: any = {};\n\n    if ((diffYear as number) >= 3) {\n        intervalInfo = AUTO_INTERVALS_OBJ['year'].find(item => {\n            return item.current_date_range === 3;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffYear as number) < 3 && (diffYear as number) >= 1) {\n        intervalInfo = AUTO_INTERVALS_OBJ['year'].find(item => {\n            return item.current_date_range === 1;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffMonth as number) >= 1) {\n        intervalInfo = AUTO_INTERVALS_OBJ['month'].find(item => {\n            return item.current_date_range === 1;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffWeek as number) >= 1) {\n        intervalInfo = AUTO_INTERVALS_OBJ['week'].find(item => {\n            return item.current_date_range === 1;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffDay as number) >= 4) {\n        intervalInfo = AUTO_INTERVALS_OBJ['day'].find(item => {\n            return item.current_date_range === 4;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffDay as number) >= 1 && (diffDay as number) < 4) {\n        intervalInfo = AUTO_INTERVALS_OBJ['day'].find(item => {\n            return item.current_date_range === 1;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffHour as number) >= 16) {\n        intervalInfo = AUTO_INTERVALS_OBJ['hour'].find(item => {\n            return item.current_date_range === 16;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffHour as number) >= 8) {\n        intervalInfo = AUTO_INTERVALS_OBJ['hour'].find(item => {\n            return item.current_date_range === 8;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffHour as number) >= 2) {\n        intervalInfo = AUTO_INTERVALS_OBJ['hour'].find(item => {\n            return item.current_date_range === 2;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffMinute as number) >= 38) {\n        intervalInfo = AUTO_INTERVALS_OBJ['minute'].find(item => {\n            return item.current_date_range === 38;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffMinute as number) >= 13) {\n        intervalInfo = AUTO_INTERVALS_OBJ['minute'].find(item => {\n            return item.current_date_range === 13;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffMinute as number) >= 6) {\n        intervalInfo = AUTO_INTERVALS_OBJ['minute'].find(item => {\n            return item.current_date_range === 6;\n        });\n        return intervalInfo as AutoInterval;\n    }\n\n    if ((diffMinute as number) >= 4) {\n        intervalInfo = AUTO_INTERVALS_OBJ['minute'].find(item => {\n            return item.current_date_range === 4;\n        });\n        return intervalInfo as AutoInterval;\n    }\n    if ((diffMinute as number) >= 1) {\n        intervalInfo = AUTO_INTERVALS_OBJ['minute'].find(item => {\n            return item.current_date_range === 1;\n        });\n        return intervalInfo as AutoInterval;\n    } else {\n        intervalInfo = AUTO_INTERVALS_OBJ['minute'].find(item => {\n            return item.current_date_range === 1;\n        });\n        return intervalInfo as AutoInterval;\n    }\n}\n\nexport function translationDateIntervalType(type: IntervalEnum): string {\n    if (type === 'auto') {return 'Auto';}\n    else if (type === 'second') {return 'Second';}\n    else if (type === 'minute') {return 'Minute';}\n    else if (type === 'hour') {return 'Hour';}\n    else if (type === 'day') {return 'Day';}\n    else if (type === 'week') {return 'Week';}\n    else if (type === 'month') {return 'Month';}\n\n    return 'Year';\n}\n\n","import { DEFAULT_OPERATION, DEFAULT_SERVICE } from '../constants';\nimport { atom } from 'jotai';\n\nexport const currentServiceAtom = atom<any>(DEFAULT_SERVICE);\nexport const currentOperationAtom = atom<any>(DEFAULT_OPERATION);\nexport const currentSortAtom = atom<any>('most-recent');\nexport const tagsAtom = atom<string>('');\nexport const tracesAtom = atom<any>([]);\nexport const tracesServicesAtom = atom<any>([]);\nexport const traceOperationsAtom = atom<any>([]);\nexport const minDurationAtom = atom<any>('');\nexport const maxDurationAtom = atom<any>('');\n","'use client';\n\nimport React, { useEffect } from 'react';\nimport { HelpCircle } from 'lucide-react';\nimport { Button, Field, Input, Select } from '@grafana/ui';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { currentOperationAtom, currentServiceAtom, maxDurationAtom, minDurationAtom, tagsAtom, traceOperationsAtom, tracesServicesAtom } from 'store/traces';\nimport { css } from '@emotion/css';\nimport { currentTimeFieldAtom } from 'store/discover';\n\nexport function SearchSidebar(props: {\n    onQuerying?: () => void;\n    onServiceChange?: (service: any) => void;\n    onOperationChange?: (operation: any) => void;\n    onTagsChange?: (tags: string) => void;\n    onMinDurationChange?: (minDuration: string) => void;\n    onMaxDurationChange?: (maxDuration: string) => void;\n    onLimitResultsChange?: (limit: number) => void;\n}) {\n    const tracesServices = useAtomValue(tracesServicesAtom);\n    const traceOperations = useAtomValue(traceOperationsAtom);\n    const [currentService, setCurrentService] = useAtom(currentServiceAtom);\n    const [currentOperation, setCurrentOperation] = useAtom(currentOperationAtom);\n    const [tags, setTags] = useAtom(tagsAtom);\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const [minDuration, setMinDuration] = useAtom(minDurationAtom);\n    const [maxDuration, setMaxDuration] = useAtom(maxDurationAtom);\n\n    useEffect(() => {\n        setCurrentService({ value: 'all', label: 'ALL' });\n    }, [currentTimeField, setCurrentService]);\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"space-y-4\">\n                <div>\n                    <Field label=\"Service\" style={{ marginLeft: 8 }}>\n                        <Select\n                            width={15}\n                            options={tracesServices}\n                            value={currentService}\n                            onChange={(selectedService: any) => {\n                                // Handle service change\n                                setCurrentService(selectedService);\n                                setCurrentOperation({ value: 'all', label: 'ALL' });\n                            }}\n                        ></Select>\n                    </Field>\n                </div>\n\n                <div>\n                    <Field label=\"Operation\" style={{ marginLeft: 8 }}>\n                        <Select\n                            width={15}\n                            options={traceOperations}\n                            value={currentOperation}\n                            onChange={(selectedOperation: any) => {\n                                setCurrentOperation(selectedOperation);\n                            }}\n                        ></Select>\n                    </Field>\n                </div>\n\n                <div>\n                    {/* <Label htmlFor=\"tags\" className=\"text-sm font-medium text-gray-700 flex items-center gap-1\">\n                        Tags <HelpCircle className=\"w-3 h-3 text-gray-400\" />\n                    </Label> */}\n                    <Field\n                        label={\n                            <span\n                                className={css`\n                                    display: flex;\n                                    align-items: center;\n                                    justify-content: space-between;\n                                `}\n                            >\n                                Tags\n                                <HelpCircle\n                                    className={css`\n                                        margin-left: 4px;\n                                    `}\n                                />\n                            </span>\n                        }\n                        style={{ marginLeft: 8 }}\n                    >\n                        <Input\n                            id=\"tags\"\n                            placeholder=\"http.status_code=200 error=true\"\n                            className=\"mt-1\"\n                            value={tags}\n                            onChange={e => {\n                                console.log((e.target as HTMLInputElement)?.value);\n                                setTags((e.target as HTMLInputElement)?.value);\n                            }}\n                        />\n                    </Field>\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                        <Field label=\"Min Duration\" style={{ marginLeft: 8 }}>\n                            <Input\n                                id=\"min-duration\"\n                                placeholder=\"e.g. 1.2s, 100ms, 500us\"\n                                className=\"mt-1\"\n                                value={minDuration}\n                                onChange={e => {\n                                    setMinDuration((e.target as HTMLInputElement)?.value);\n                                    props?.onMinDurationChange?.((e.target as HTMLInputElement)?.value);\n                                }}\n                            />\n                        </Field>\n                    </div>\n                    <div>\n                        <Field label=\"Max Duration\" style={{ marginLeft: 8 }}>\n                            <Input\n                                id=\"max-duration\"\n                                placeholder=\"e.g. 1.2s, 100ms, 500us\"\n                                className=\"mt-1\"\n                                value={maxDuration}\n                                onChange={e => {\n                                    setMaxDuration((e.target as HTMLInputElement)?.value);\n                                    props?.onMaxDurationChange?.((e.target as HTMLInputElement)?.value);\n                                }}\n                            />\n                        </Field>\n                    </div>\n                </div>\n\n                <Button\n                    onClick={() => {\n                        props?.onQuerying?.();\n                    }}\n                    style={{ marginLeft: 8 }}\n                >\n                    Find Traces\n                </Button>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useTheme2 } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\ninterface Trace {\n    trace_id: string;\n    operation: string;\n    trace_duration_ms: number;\n    root_span_duration_ms: number;\n    max_span_duration_ms: number;\n    root_service: string;\n    services: string;\n    time: string;\n    error_spans: number;\n    spans: number;\n    timeAgo: string;\n    progress: number;\n}\n\ninterface TraceItemProps {\n    trace: Trace;\n    onClick?: () => void;\n}\n\nexport const TraceItem: React.FC<TraceItemProps> = ({ trace, onClick }) => {\n    const theme = useTheme2();\n\n    return (\n        <div\n            onClick={onClick}\n            className={css`\n                display: flex;\n                align-items: center;\n                background: ${theme.colors.background.primary};\n                border: 1px solid ${theme.colors.border.weak};\n                border-radius: ${theme.shape.borderRadius()};\n                padding: ${theme.spacing(1.5)};\n                position: relative;\n                overflow: hidden;\n                box-shadow: ${theme.shadows.z1};\n            `}\n        >\n            {/* Progress bar background */}\n            <div\n                className={css`\n                    position: absolute;\n                    left: 0;\n                    top: 0;\n                    height: 100%;\n                    width: ${trace.progress}%;\n                    background: ${theme.colors.primary.main};\n                    opacity: 0.1;\n                `}\n            />\n\n            <div\n                className={css`\n                    flex: 1;\n                    display: grid;\n                    gap: ${theme.spacing(0.5)};\n                    z-index: 10;\n                `}\n            >\n                <div\n                    className={css`\n                        display: flex;\n                        justify-content: space-between;\n                        font-weight: ${theme.typography.fontWeightMedium};\n                        color: ${theme.colors.text.primary};\n                    `}\n                >\n                    <span>\n                        {trace.root_service}:{trace.operation}{' '}\n                        <span\n                            className={css`\n                                color: ${theme.colors.text.secondary};\n                            `}\n                        >\n                            {trace.trace_id}\n                        </span>\n                    </span>\n                    <span>{trace.trace_duration_ms} ms</span>\n                </div>\n\n                <div\n                    className={css`\n                        display: flex;\n                        justify-content: space-between;\n                        font-size: ${theme.typography.size.sm};\n                        color: ${theme.colors.text.secondary};\n                    `}\n                >\n                    <div\n                        className={css`\n                            display: flex;\n                            align-items: center;\n                            gap: ${theme.spacing(1)};\n                        `}\n                    >\n                        <span>{trace.spans} Spans</span>\n                        <div\n                            className={css`\n                                display: flex;\n                                gap: ${theme.spacing(0.5)};\n                            `}\n                        >\n                            {JSON.parse(trace.services).map((service: any, index: number) => (\n                                <span\n                                    key={index}\n                                    className={css`\n                                        padding: 2px 6px;\n                                        border-radius: 9999px;\n                                        font-size: ${theme.typography.size.xs};\n                                        color: ${theme.colors.text.secondary};\n                                    `}\n                                >\n                                    {service}\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                    <div\n                        className={css`\n                            text-align: right;\n                        `}\n                    >\n                        <div>{trace.time}</div>\n                        <div\n                            className={css`\n                                font-size: ${theme.typography.size.xs};\n                                color: ${theme.colors.text.disabled};\n                            `}\n                        >\n                            {trace.timeAgo}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Select, useTheme2, Pagination } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { TraceItem } from './trace-item';\nimport ReactECharts from 'echarts-for-react';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { pageAtom, pageSizeAtom } from 'store/discover';\nimport { currentSortAtom } from 'store/traces';\nimport TraceDetail from 'components/trace-detail';\n\nexport const TraceView: React.FC<any> = (props: { traces: any[]; onSortByChange: (sort: string) => void }) => {\n    const theme = useTheme2();\n    const [page, setPage] = useAtom(pageAtom);\n    const pageSize = useAtomValue(pageSizeAtom);\n    const total = props.traces[0]?.total || 0;\n    const traces = props.traces || [];\n    const [sort, setSort] = useAtom(currentSortAtom);\n    const [drawerOpen, setDrawerOpen] = React.useState(false);\n    const [traceId, setTraceId] = React.useState<string>('');\n\n    const getOption = () => {\n        return {\n            tooltip: {\n                trigger: 'item',\n                padding: 0,\n                borderWidth: 0,\n                backgroundColor: theme.isLight ? '#ffffff' : 'rgba(63, 63, 69, 0.64)',\n                onClick: (params: any) => {\n                    setTraceId(params.data.trace_id);\n                    setDrawerOpen(true);\n                },\n                formatter: function (params: any) {\n                    const html = `<div\n                                       style=\"\n                                          padding: 8px;\n                                          min-width: 120px;\n                                          border-radius: 6px;\n                                          backdrop-filter: blur(12px);\n                                          color: ${theme.isLight ? '#1F1F26' : '#EFEFF0'};\n                                        \">\n                                      <div style=\"padding-bottom: 4px; border-bottom: 1px solid ${theme.isLight ? '#DFDFE0' : '#3F3F45'};\">${[params.name]}</div>\n                                      <div style=\"padding-top:4px;display: flex;justify-content: space-between;\"><span>Durations：</span><span style=\"font-family:DIN Alternate;font-size:14;font-weight:500;\">${[\n                                          `${params.value} ms` || 'No Data',\n                                      ]}</span></div>\n                                      <div style=\"padding-top:4px;display: flex;justify-content: space-between;\"><span>Spans：</span><span style=\"font-family:DIN Alternate;font-size:14;font-weight:500;\">${[\n                                          params.data.spans || 'No Data',\n                                      ]}</span></div>\n                                  </div>`;\n                    return html;\n                },\n            },\n            xAxis: {\n                type: 'category',\n                name: 'Time',\n                data: traces.map(s => s.time),\n                axisLabel: {\n                    color: theme.colors.text.primary,\n                },\n                axisLine: {\n                    lineStyle: {\n                        // color: theme.colors.text.secondary,\n                    },\n                },\n            },\n            yAxis: {\n                type: 'value',\n                name: 'Duration (ms)',\n                axisLabel: {\n                    color: theme.colors.text.primary,\n                },\n                axisLine: {\n                    lineStyle: {\n                        color: theme.colors.text.secondary,\n                    },\n                },\n            },\n            series: [\n                {\n                    symbolSize: (value: any, params: any) => {\n                        // 使用 spans 数量决定点的大小，设一个基本缩放，例如：\n                        const trace = traces[params.dataIndex];\n                        return Math.max(12, Math.min(30, trace.spans || 1)); // 控制在6~30之间\n                    },\n                    data: traces.map(s => {\n                        return {\n                            name: `${s.root_service}:${s.operation}`,\n                            spans: s.spans,\n                            value: s.trace_duration_ms,\n                            trace_id: s.trace_id,\n                        };\n                    }),\n                    type: 'scatter',\n                },\n            ],\n        };\n    };\n\n    const onEvents = {\n        click: (params: any) => {\n            setTraceId(params.data.trace_id);\n            setDrawerOpen(true);\n        },\n    };\n\n    return (\n        <div\n            className={css`\n                display: flex;\n                flex-direction: column;\n                gap: 16px;\n                background: ${theme.colors.background.primary};\n                color: ${theme.colors.text.primary};\n            `}\n        >\n            {/* Scatter Plot 区域 */}\n            <div\n                className={css`\n                    margin-top: -20px;\n                    height: 300px;\n                `}\n            >\n                <ReactECharts option={getOption()} notMerge={true} lazyUpdate={true} style={{ height: '100%' }} onEvents={onEvents} />\n            </div>\n\n            {/* Header 操作栏 */}\n            <div\n                className={css`\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                `}\n            >\n                <div\n                    className={css`\n                        display: flex;\n                        gap: 8px;\n                        align-items: center;\n                    `}\n                >\n                    <span>Sort:</span>\n                    <Select\n                        options={[\n                            { label: 'Most Recent', value: 'most-recent' },\n                            { label: 'Longest Duration', value: 'longest-duration' },\n                            { label: 'Shortest Duration', value: 'shortest-duration' },\n                            { label: 'Most Spans', value: 'most-spans' },\n                            { label: 'Least Spans', value: 'least-spans' },\n                        ]}\n                        value={sort}\n                        onChange={option => {\n                            setPage(1);\n                            setSort(option.value);\n                            props?.onSortByChange(option.value);\n                        }}\n                    />\n                </div>\n            </div>\n\n            {/* Trace 列表 */}\n\n            <div\n                className={css`\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding-bottom: 20px;\n                `}\n            >\n                <h3\n                    className={css`\n                        display: flex;\n                        justify-content: space-between;\n                        align-items: center;\n                        gap: 8px;\n                    `}\n                >\n                    <div>{traces.length} Traces, </div>\n                    <div>Total {total}</div>\n                </h3>\n                <Pagination\n                    currentPage={page}\n                    numberOfPages={Math.floor(total / pageSize) || 1}\n                    onNavigate={toPage => {\n                        setPage(toPage);\n                    }}\n                />\n            </div>\n\n            <div\n                className={css`\n                    display: flex;\n                    flex-direction: column;\n                    gap: 8px;\n                `}\n            >\n                {traces.map(trace => (\n                    <TraceItem\n                        key={trace.id}\n                        trace={trace}\n                        onClick={() => {\n                            setTraceId(trace.trace_id);\n                            setDrawerOpen(true);\n                        }}\n                    />\n                ))}\n            </div>\n\n            <TraceDetail onClose={() => setDrawerOpen(false)} open={drawerOpen} traceId={traceId} />\n        </div>\n    );\n};\n","import { css } from '@emotion/css';\nimport styled from '@emotion/styled';\n\nexport const DiscoverHeaderSearch = styled.div`\n    flex: 2;\n    display: flex;\n    border-radius: 6px;\n    align-items: center;\n    margin-right: 8px;\n    .ant-select-open {\n        .ant-select-arrow {\n            .anticon {\n                transform: rotate(-180deg);\n            }\n        }\n    }\n    .select-database {\n        width: 160px;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n    .ant-select-single {\n        height: 30px;\n    }\n`;\n\nexport const DiscoverHeaderTimeSelect = styled.div`\n    flex: 1;\n    display: flex;\n    border-radius: 6px;\n    align-items: center;\n    margin-right: 8px;\n\n    div.trp-time-label {\n        border: 0px;\n    }\n`;\n\nexport const CascaderStyle = css`\n    width: 184px;\n    .ant-select-selector {\n        padding: 0 16px 0 40px !important;\n    }\n    .ant-select-selection-placeholder,\n    .ant-select-selection-item {\n        margin-top: 2px;\n    }\n    .ant-select-selector>.ant-select-selection-search>.ant-select-selection-search-input {\n        margin-left: 1.8rem;\n    }\n`;\n","'use client';\nimport React, { useEffect } from 'react';\nimport dayjs from 'dayjs';\nimport { DiscoverHeaderSearch } from './discover-header.style';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport { DataSourcePicker, getDataSourceSrv } from '@grafana/runtime';\nimport { css } from '@emotion/css';\nimport {\n    indexesAtom,\n    searchTypeAtom,\n    discoverCurrentAtom,\n    locationAtom,\n    currentClusterAtom,\n    tableFieldsAtom,\n    timeFieldsAtom,\n    currentDateAtom,\n    currentTimeFieldAtom,\n    currentIndexAtom,\n    searchFocusAtom,\n    datasourcesAtom,\n    selectedDatasourceAtom,\n    timeRangeAtom,\n    databasesAtom,\n    tablesAtom,\n    currentTableAtom,\n    disabledOptionsAtom,\n} from 'store/discover';\nimport { isValidTimeFieldType } from 'utils/data';\nimport { Select, Field, useTheme2, TimeRangeInput } from '@grafana/ui';\nimport { FORMAT_DATE } from '../../../constants';\nimport { getDatabases, getFieldsService, getIndexesService, getTables } from 'services/metaservice';\n\nexport default function TracesHeader() {\n    const catalog = 'internal';\n    // const catalogs = useAtomValue(catalogAtom);\n    const setIndexes = useSetAtom(indexesAtom);\n    const [discoverCurrent, setDiscoverCurrent] = useAtom(discoverCurrentAtom);\n    if (process.env.NODE_ENV !== 'production') {\n        discoverCurrentAtom.debugLabel = 'current';\n    }\n    const [loc, setLoc] = useAtom(locationAtom);\n    const [currentCluster, setCurrentCluster] = useAtom(currentClusterAtom);\n    const setTableFields = useSetAtom(tableFieldsAtom);\n    const [timeFields, setTimeFields] = useAtom(timeFieldsAtom);\n    const [currentDate, setCurrentDate] = useAtom(currentDateAtom);\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const [currentIndex, setCurrentIndex] = useAtom(currentIndexAtom);\n    const searchFocus = useAtomValue(searchFocusAtom);\n    const [selectedDatasource, setSelectedDatasource] = useAtom(selectedDatasourceAtom);\n    const [timeRange, setTimeRange] = useAtom(timeRangeAtom);\n    const [currentTable, setCurrentTable] = useAtom(currentTableAtom);\n    const [databases, setDatabases] = useAtom(databasesAtom);\n    const [tables, setTables] = useAtom(tablesAtom);\n    const [datasources, setDataSource] = useAtom(datasourcesAtom);\n    const setDisabledOptions = useSetAtom(disabledOptionsAtom);\n\n    const selectdbDS = useAtomValue(selectedDatasourceAtom);\n\n    useEffect(() => {\n        const datasources = getDataSourceSrv().getList();\n        setDataSource(datasources);\n    }, [setDataSource]);\n\n    useEffect(() => {\n        if (currentIndex.length > 0) {\n            setDisabledOptions([]);\n        } else {\n            setDisabledOptions(['Search']);\n        }\n    }, [currentIndex, setDisabledOptions]);\n\n    const theme = useTheme2();\n\n    useEffect(() => {\n        if (selectdbDS) {\n            const res = getDatabases(selectdbDS);\n            res.subscribe({\n                next: ({ data, ok }: any) => {\n                    if (ok) {\n                        const value = data?.results[0]?.data?.values[0];\n\n                        if (value) {\n                            const options = value.map((item: any) => {\n                                return {\n                                    label: item,\n                                    value: item,\n                                };\n                            });\n                            setDatabases(options);\n                        }\n                    }\n                },\n                error: err => {\n                    console.log('查询错误', err);\n                },\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectdbDS]);\n\n    // useEffect(() => {\n    //     if (startTime && endTime) {\n    //         setCurrentDate([dayjs(startTime), dayjs(endTime)]);\n    //     }\n    // }, [startTime, endTime, setCurrentDate]);\n\n    function getFields(selectedTable: any) {\n        getFieldsService({\n            selectdbDS,\n            database: discoverCurrent.database,\n            table: selectedTable.value,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const value = data?.results[0]?.data?.values[0];\n                    const fieldTypes = data?.results[0]?.data?.values[1];\n\n                    const tableFields = data?.results[0]?.data?.values[0].map((item: any, index: number) => {\n                        return {\n                            label: item,\n                            Field: item,\n                            value: item,\n                            Type: fieldTypes[index],\n                        };\n                    });\n\n                    setTableFields(tableFields);\n\n                    if (value) {\n                        const options = value\n                            .filter((field: any, index: number) => {\n                                return isValidTimeFieldType(fieldTypes[index].toUpperCase());\n                            })\n                            .map((item: any) => {\n                                return {\n                                    label: item,\n                                    value: item,\n                                };\n                            });\n                        setDiscoverCurrent({\n                            ...discoverCurrent,\n                            timeField: options[0]?.value || '',\n                        });\n                        setTimeFields(options);\n                    }\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    function getIndexes(selectedTable: any) {\n        getIndexesService({\n            selectdbDS,\n            database: discoverCurrent.database,\n            table: selectedTable.value,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const value = data?.results[0]?.data?.values[2];\n                    const columnNames = data?.results[0]?.data?.values[4];\n                    const indexesTypes = data?.results[0]?.data?.values[10];\n\n                    if (!value || value.length === 0) {\n                        setIndexes([]);\n                        setCurrentIndex([]);\n                        return;\n                    }\n\n                    const tableIndexes = value?.map((item: any, index: number) => {\n                        return {\n                            label: item,\n                            value: item,\n                            type: indexesTypes[index],\n                            columnName: columnNames[index],\n                        };\n                    });\n\n                    setIndexes(tableIndexes);\n\n                    if (tableIndexes) {\n                        setCurrentIndex(tableIndexes);\n                    }\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    return (\n        <div\n            className={css`\n                padding: 1rem;\n                padding-top: 1.5rem;\n                background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                display: flex;\n                border-radius: 0.25rem 0.25rem 0 0;\n                border-bottom: 1px solid ${theme.colors.border.medium};\n            `}\n        >\n            <DiscoverHeaderSearch>\n                <Field label=\"Datasource\">\n                    {/* filter 这个版本无效 */}\n                    <DataSourcePicker\n                        width={20}\n                        type={'mysql'}\n                        current={selectedDatasource}\n                        placeholder=\"Choose\"\n                        noDefault\n                        filter={ds => ds.type === 'mysql'}\n                        onChange={item => {\n                            console.log('item', item);\n                            setSelectedDatasource(item);\n                        }}\n                    />\n                </Field>\n                {/* 需要从数据源中获取库表信息 */}\n                <Field label=\"Database\" style={{ marginLeft: 8 }}>\n                    <Select\n                        width={15}\n                        options={databases}\n                        value={discoverCurrent.database}\n                        onChange={(selectedDatabase: any) => {\n                            setDiscoverCurrent({\n                                ...discoverCurrent,\n                                database: selectedDatabase.value,\n                            });\n                            getTables({\n                                selectdbDS,\n                                database: selectedDatabase.value,\n                            }).subscribe({\n                                next: ({ data, ok }: any) => {\n                                    if (ok) {\n                                        const value = data?.results[0]?.data?.values[0];\n\n                                        if (value) {\n                                            const options = value.map((item: any) => {\n                                                return {\n                                                    label: item,\n                                                    value: item,\n                                                };\n                                            });\n                                            setTables(options);\n                                        }\n                                    }\n                                },\n                                error: (err: any) => {\n                                    console.log('查询错误', err);\n                                },\n                            });\n                        }}\n                    ></Select>\n                </Field>\n\n                <Field label=\"Table\" style={{ marginLeft: 8 }}>\n                    <Select\n                        options={tables}\n                        width={15}\n                        value={currentTable}\n                        onChange={(selectedTable: any) => {\n                            setDiscoverCurrent({\n                                ...discoverCurrent,\n                                table: selectedTable.value,\n                            });\n                            setCurrentTable(selectedTable.value);\n                            getFields(selectedTable);\n                            getIndexes(selectedTable);\n                        }}\n                    />\n                </Field>\n            </DiscoverHeaderSearch>\n            {!searchFocus && (\n                <>\n                    <Field label=\"时间字段\">\n                        <Select\n                            value={currentTimeField}\n                            options={timeFields}\n                            onChange={(selectdbTimeFiled: any) => {\n                                setDiscoverCurrent({\n                                    ...discoverCurrent,\n                                    timeField: selectdbTimeFiled.value,\n                                });\n                                setLoc((prev: any) => {\n                                    const searchParams = prev.searchParams;\n                                    searchParams?.set('timeField', selectdbTimeFiled.value);\n                                    return {\n                                        ...prev,\n                                        searchParams,\n                                    };\n                                });\n                            }}\n                            placeholder={'时间字段'}\n                        />\n                    </Field>\n                    <Field label=\"时间范围\" style={{ marginLeft: 8, marginRight: 8 }}>\n                        <TimeRangeInput\n                            isReversed={false}\n                            onChange={timeRange => {\n                                const start = dayjs(timeRange.from.toDate());\n                                const end = dayjs(timeRange.to.toDate());\n                                setLoc(prev => {\n                                    const searchParams = prev.searchParams;\n                                    searchParams?.set('startTime', start.format(FORMAT_DATE));\n                                    searchParams?.set('endTime', end.format(FORMAT_DATE));\n                                    return {\n                                        ...prev,\n                                        searchParams,\n                                    };\n                                });\n                                setCurrentDate([start, end]);\n                                setTimeRange(timeRange);\n                            }}\n                            value={timeRange}\n                        />\n                    </Field>\n                </>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { SearchSidebar } from 'components/traces/search-sidebar';\nimport { TraceView } from 'components/traces/traces-viewer';\nimport { css } from '@emotion/css';\nimport { LoadingBar, useTheme2 } from '@grafana/ui';\nimport { currentCatalogAtom, currentDatabaseAtom, currentDateAtom, currentTableAtom, currentTimeFieldAtom, pageAtom, pageSizeAtom, selectedDatasourceAtom } from 'store/discover';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport TracesHeader from 'components/traces/traces-header';\nimport { DEFAULT_OPERATION, DEFAULT_SERVICE, FORMAT_DATE } from '../constants';\nimport { Dayjs } from 'dayjs';\nimport { getTraceOperationsService, getTracesService, getTracesServicesService } from 'services/discover';\nimport {\n    currentOperationAtom,\n    currentServiceAtom,\n    currentSortAtom,\n    maxDurationAtom,\n    minDurationAtom,\n    tagsAtom,\n    traceOperationsAtom,\n    tracesAtom,\n    tracesServicesAtom,\n} from 'store/traces';\nimport { convertColumnToRow } from 'utils/data';\n\nexport default function PageDashboard() {\n    const theme = useTheme2();\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const currentTable = useAtomValue(currentTableAtom);\n    const currentCatalog = useAtomValue(currentCatalogAtom);\n    const currentDatabase = useAtomValue(currentDatabaseAtom);\n    const currentDate = useAtomValue(currentDateAtom);\n    const selectdbDS = useAtomValue(selectedDatasourceAtom);\n    const [page, setPage] = useAtom(pageAtom);\n    const pageSize = useAtomValue(pageSizeAtom);\n    const [traces, setTraces] = useAtom(tracesAtom);\n    const setTracesServices = useSetAtom(tracesServicesAtom);\n    const setTraceOperations = useSetAtom(traceOperationsAtom);\n    const [loading, setLoading] = React.useState(false);\n    const currentService = useAtomValue(currentServiceAtom);\n    const currentOperation = useAtomValue(currentOperationAtom);\n    const tags = useAtomValue(tagsAtom);\n    const minDuration = useAtomValue(minDurationAtom);\n    const maxDuration = useAtomValue(maxDurationAtom);\n    const sort = useAtomValue(currentSortAtom);\n\n    const getTraces = React.useCallback(() => {\n        setLoading(true);\n        const payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n            page: page,\n            page_size: pageSize,\n            service_name: currentService.value,\n            operation: currentOperation.value,\n            sort_by: sort, // 'most-recent' | 'longest-duration'\n        };\n\n        if (minDuration) {\n            console.log('minDuration', minDuration);\n            payload.minDuration = minDuration;\n        }\n        if (maxDuration) {\n            console.log('maxDuration', maxDuration);\n            payload.maxDuration = maxDuration;\n        }\n        if (tags && tags.length > 0) {\n            payload.tags = tags;\n        }\n\n        getTracesService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                setLoading(false);\n                if (ok) {\n                    const rowsData = convertColumnToRow(data);\n                    // console.log('查询结果', rowsData);\n                    const formateData = rowsData.map((item: any) => {\n                        return {\n                            ...item,\n                            trace_duration_ms: (item.trace_duration_ms as number)?.toFixed(2) || 0,\n                        };\n                    });\n                    setTraces(formateData);\n                }\n            },\n            error: (err: any) => {\n                setLoading(false);\n                console.log('查询错误', err);\n            },\n        });\n    }, [\n        currentCatalog,\n        currentDatabase,\n        currentTable,\n        currentTimeField,\n        currentDate,\n        page,\n        pageSize,\n        currentService.value,\n        currentOperation.value,\n        sort,\n        minDuration,\n        maxDuration,\n        tags,\n        selectdbDS,\n        setTraces,\n    ]);\n\n    const getTracesServices = React.useCallback(() => {\n        let payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n        };\n\n        getTracesServicesService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                setLoading(false);\n                if (ok) {\n                    if (ok) {\n                        const value = data?.results[0]?.data?.values[0];\n\n                        if (value) {\n                            const options = value.map((item: any) => {\n                                return {\n                                    label: item,\n                                    value: item,\n                                };\n                            });\n                            setTracesServices([DEFAULT_SERVICE, ...options]);\n                        }\n                    }\n                }\n            },\n            error: (err: any) => {\n                setLoading(false);\n                console.log('查询错误', err);\n            },\n        });\n    }, [currentCatalog, currentDatabase, currentDate, currentTable, currentTimeField, selectdbDS, setTracesServices]);\n\n    const getTracesOperations = React.useCallback(() => {\n        let payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            serviceName: currentService.value,\n            cluster: '',\n        };\n\n        getTraceOperationsService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                setLoading(false);\n                if (ok) {\n                    if (ok) {\n                        const value = data?.results[0]?.data?.values[0];\n\n                        if (value) {\n                            const options = value.map((item: any) => {\n                                return {\n                                    label: item,\n                                    value: item,\n                                };\n                            });\n                            setTraceOperations([DEFAULT_OPERATION, ...options]);\n                        } else {\n                            setTraceOperations([DEFAULT_OPERATION]);\n                        }\n                    }\n                }\n            },\n            error: (err: any) => {\n                setLoading(false);\n                console.log('查询错误', err);\n            },\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentCatalog, currentDatabase, currentDate, currentService, currentTable, currentTimeField, selectdbDS, setTraceOperations]);\n\n    useEffect(() => {\n        if (currentTimeField && currentTable && currentCatalog && currentDatabase && currentDate) {\n            getTraces();\n            getTracesServices();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [page, pageSize, currentTimeField, currentDate, sort]);\n\n    useEffect(() => {\n        if (currentTimeField && currentService) {\n            getTracesOperations();\n        }\n    }, [currentTimeField, currentService, getTracesOperations]);\n\n    return (\n        <div\n            className={css`\n                height: 100%;\n                width: 100%;\n                overflow: hidden;\n            `}\n        >\n            <TracesHeader />\n            <div\n                className={css`\n                    display: flex;\n                    height: calc(100% - 103px);\n                    width: 100%;\n                    overflow: hidden;\n                    background-color: ${theme.colors.background.primary};\n                    color: ${theme.colors.text.primary};\n                `}\n            >\n                <aside\n                    className={css`\n                        width: 320px;\n                        flex-shrink: 0;\n                        border-right: 1px solid ${theme.colors.border.medium};\n                        padding: 16px;\n                    `}\n                >\n                    <SearchSidebar\n                        onQuerying={() => {\n                            setPage(1);\n                            getTraces();\n                        }}\n                    />\n                </aside>\n\n                {/* 右侧主内容区 */}\n                <main\n                    className={css`\n                        flex: 1;\n                        height: 100%;\n                        padding: 24px;\n                        overflow-y: auto;\n                    `}\n                >\n                    {loading && <LoadingBar width={100} />}\n                    <TraceView traces={traces} />\n                </main>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { AppRootProps } from '@grafana/data';\nimport { ROUTES } from '../../constants';\n// import PageDashboard from 'pages/PageDashboard';\nimport PageTrace from 'pages/PageTrace';\n// import { ROUTES } from '../../constants';\nconst Discover = React.lazy(() => import('../../pages/PageDiscover'));\n// const PageTwo = React.lazy(() => import('../../pages/PageTwo'));\n// const PageThree = React.lazy(() => import('../../pages/PageThree'));\n// const PageFour = React.lazy(() => import('../../pages/PageFour'));\n\nfunction App(props: AppRootProps) {\n    return (\n        <Routes>\n            <Route path={ROUTES.Discover} element={<Discover />} />\n            <Route path={ROUTES.Traces} element={<PageTrace />} />\n            {/* <Route path={ROUTES.Dashboard} element={<PageDashboard />} /> */}\n            <Route path=\"*\" element={<Discover />} />\n        </Routes>\n    );\n}\n\nexport default App;\n","import { atom } from 'jotai';\nimport { atomWithStorage, selectAtom } from 'jotai/utils';\n// import { focusAtom } from 'jotai-optics'\nimport { atomWithLocation } from 'jotai-location';\nimport { DataSourceInstanceSettings, DataSourceJsonData } from '@grafana/data';\nimport { Dayjs } from 'dayjs';\nimport { DataFilterType, DiscoverCurrent, IntervalEnum, ShortcutItem } from 'types/type';\nimport { AggregatableEnum, DISCOVER_DEFAULT_STATUS, DISCOVER_SHORTCUTS, FieldTypeEnum, SearchableEnum } from 'utils/data';\n\nexport const locationAtom = atomWithLocation();\nexport const dataFilterAtom = atom<DataFilterType[]>([]);\nexport const discoverCurrentAtom = atom<DiscoverCurrent>(DISCOVER_DEFAULT_STATUS);\n\n// databases\nexport const databasesAtom = atom<any>([]);\nexport const tablesAtom = atom<any>([]);\n\nexport const currentCatalogAtom = atom('internal');\nexport const searchTypeAtom = atom<'SQL' | 'Search'>('SQL');\nexport const currentDatabaseAtom = selectAtom(discoverCurrentAtom, current => current.database);\nexport const currentTableAtom = atom<string>('');\nexport const currentClusterAtom = atom('');\nexport const currentTimeFieldAtom = selectAtom(discoverCurrentAtom, current => current.timeField);\nexport const currentDateAtom = atom<Dayjs[]>(DISCOVER_SHORTCUTS[2].range());\nexport const currentIndexAtom = atom<any>([]);\nexport const selectedIndexesAtom = atom<any>([]);\nexport const searchValueAtom = atom('');\nexport const searchFocusAtom = atom(false);\nexport const activeShortcutAtom = atom<ShortcutItem | undefined>(DISCOVER_SHORTCUTS[2]);\nexport const dorisInfoAtom = atom<any>({});\nexport const disabledOptionsAtom = atom<string[]>([]);\n\nexport const selectedFieldsAtom = atom<any[]>([]);\nexport const tableFieldsAtom = atom<any[]>([]);\n\nexport const timeFieldsAtom = atom<any[]>([]);\nexport const tableDataAtom = atom<any[]>([]);\nexport const topDataAtom = atom<any[]>([]);\nexport const surroundingTableDataAtom = atom<any[]>([]);\nexport const tableDataChartsAtom = atom<any[]>([]);\nexport const intervalAtom = atom<IntervalEnum>(IntervalEnum.Auto);\nexport const tableTotalCountAtom = atom<number>(0);\nexport const tableEChartsDataAtom = atom<any[]>([]);\nexport const tableTracesDataAtom = atom<any>();\n\n// Filter Content Atom\nexport const searchableAtom = atom<SearchableEnum>(SearchableEnum.ANY);\nexport const aggregatableAtom = atom<AggregatableEnum>(AggregatableEnum.ANY);\nexport const fieldTypeAtom = atom<FieldTypeEnum>(FieldTypeEnum.ANY);\nexport const indexesAtom = atom<any[]>([]);\nexport const selectedRowAtom = atom<any>({});\nexport const tableFieldValuesAtom = atom<Array<{ label: string; value: string }>>([]);\n\nexport const pageAtom = atom<number>(1);\nexport const pageSizeAtom = atomWithStorage<number>('discover-pagination-size', 50);\n\n// Surrounding Data Atoms\nexport const surroundingDataFilterAtom = atom<DataFilterType[]>([]);\nexport const beforeTimeFieldPageSizeAtom = atom<number>(5);\nexport const afterTimeFieldPageSizeAtom = atom<number>(5);\nexport const beforeTimeAtom = atom<string>('');\nexport const afterTimeAtom = atom<string>('');\nexport const beforeCountAtom = atom<number>(0);\nexport const afterCountAtom = atom<number>(0);\nexport const surroundingTableFieldsAtom = atom<any[]>([]);\nexport const surroundingSelectedFieldsAtom = atom<any[]>([]);\n\nexport const datasourcesAtom = atom<Array<DataSourceInstanceSettings<DataSourceJsonData>>>([]);\nexport const selectedDatasourceAtom = atom<DataSourceInstanceSettings<DataSourceJsonData>>();\nexport const timeRangeAtom = atom<any>({\n    from: DISCOVER_SHORTCUTS[2].range()[0].toDate(),\n    to: DISCOVER_SHORTCUTS[2].range()[1].toDate(),\n    raw: DISCOVER_SHORTCUTS[2].raw,\n});\n\n\nexport const discoverLoadingAtom = atom({\n    getTableData: false,\n    getTopData: false,\n    getSurroundingData: false,\n    getTableDataCharts: false,\n    getTableFieldValues: false,\n    getIndexes: false,\n    getTimeFields: false,\n    getTableFields: false,\n});\n","import { getAutoInterval } from '../constants';\nimport dayjs, { Dayjs, ManipulateType } from 'dayjs';\nimport { flatten, orderBy, some } from 'lodash-es';\nimport { nanoid } from 'nanoid';\nimport { DiscoverCurrent, DataFilterType, AutoInterval, IntervalEnum } from 'types/type';\nimport jsTokens from 'js-tokens';\nimport localeData from 'dayjs/plugin/localeData';\nimport { DataFrame, FieldType } from '@grafana/data';\nimport utc from 'dayjs/plugin/utc';\ndayjs.extend(utc);\ndayjs.extend(localeData);\n\nexport const OPERATORS: string[] = ['=', '!=', 'in', 'not in', 'is null', 'is not null', 'like', 'not like', 'between', 'not between', 'match_any', 'match_all', 'match_phrase'];\nexport const SQL_OPERATORS: string[] = ['=', '!=', '>', '<', '>=', '<=', 'LIKE', 'IN', 'AND', 'OR', 'BETWEEN'];\nexport const TIME_FIELD_TYPES = ['DATETIME', 'DATE', 'DATETIMEV2', 'DATAV2', 'TIME'];\nexport function isValidTimeFieldType(fieldType: string): boolean {\n    // 提取基础字段类型（移除括号及其内容）\n    const baseFieldType = fieldType.split('(')[0];\n    return TIME_FIELD_TYPES.includes(baseFieldType);\n}\nexport const CAN_SEARCH_FIELD_TYPE = ['STRING', 'ARRAY', 'NUMBER', 'VARIANT'];\nexport const ENABLE_SEARCH_FIELD_TYPE = ['DATETIME', 'TIMESTAMP', 'TIME'];\nexport const getFieldType = (columnType: string | undefined) => {\n    if (!columnType) {\n        return '';\n    }\n    const currentColumnType = FIELD_TYPES.find(item => item.value.some(val => columnType.toLocaleUpperCase().includes(val)));\n    return currentColumnType?.key;\n};\n\nexport const DISCOVER_DEFAULT_STATUS: DiscoverCurrent = {\n    catalog: 'internal',\n    database: '',\n    table: '',\n    cluster: '',\n    timeField: '',\n    date: [],\n};\n\nexport enum SearchableEnum {\n    ANY = 'ANY',\n    YES = 'YES',\n    NO = 'NO',\n}\nexport enum AggregatableEnum {\n    ANY = 'ANY',\n    YES = 'YES',\n    NO = 'NO',\n}\n\nexport const SEARCHABLE = [\n    {\n        label: `Any`,\n        value: SearchableEnum.ANY,\n    },\n    {\n        label: 'Yes',\n        value: SearchableEnum.YES,\n    },\n    {\n        label: 'No',\n        value: SearchableEnum.NO,\n    },\n];\n\nexport const AGGREGATABLE = [\n    {\n        label: `Any`,\n        value: AggregatableEnum.ANY,\n    },\n    {\n        label: 'Yes',\n        value: AggregatableEnum.YES,\n    },\n    {\n        label: 'No',\n        value: AggregatableEnum.NO,\n    },\n];\n\nexport enum FieldTypeEnum {\n    ANY = 'ANY',\n    STRING = 'STRING',\n    NUMBER = 'NUMBER',\n    DATE = 'DATE',\n}\n\nexport enum ParamsKeyEnum {\n    sqlCatalog = 'sqlCatalog',\n    sqlDatabase = 'sqlDatabase',\n    startDate = 'startDateRange',\n    endDate = 'endDateRange',\n    sqlSearch = 'sqlSearch',\n    selectedTable = 'selectedTable',\n    dateInterval = 'dateInterval',\n    selectedField = 'selectedField',\n    dataFilter = 'dataFilter',\n    selectedTimeField = 'selectedTimeField',\n    sortedField = 'sortedField',\n    searchType = 'searchType',\n    selectedIndex = 'selectedIndex',\n    selectedCluster = 'selectedCluster',\n}\n\nexport function getFilterSQL({ fieldName, operator, value }: DataFilterType): string {\n    const valueString = value.map((e: any) => {\n        if (typeof e === 'string') {\n            return `'${e}'`;\n        } else {\n            return e;\n        }\n    });\n\n    if (\n        operator === '=' ||\n        operator === '!=' ||\n        operator === 'like' ||\n        operator === 'not like' ||\n        operator === 'match_all' ||\n        operator === 'match_any' ||\n        operator === 'match_phrase'\n    ) {\n        return `\\`${fieldName}\\` ${operator} ${valueString[0]}`;\n    }\n\n    if (operator === 'is null' || operator === 'is not null') {\n        return `\\`${fieldName}\\` ${operator}`;\n    }\n\n    if (operator === 'between' || operator === 'not between') {\n        return `\\`${fieldName}\\` ${operator} ${valueString[0]} AND ${valueString[1]}`;\n    }\n\n    if (operator === 'in' || operator === 'not in') {\n        return `\\`${fieldName}\\` ${operator} (${valueString})`;\n    }\n\n    return '';\n}\n\nexport function addSqlFilter(sql: string, dataFilterValue: DataFilterType): string {\n    let result = sql;\n    if (!sql.toUpperCase().includes('WHERE')) {\n        result += ' WHERE';\n    } else {\n        result += ' AND';\n    }\n\n    result += ` (${getFilterSQL(dataFilterValue)})`;\n\n    return result;\n}\n\nfunction isWrappedInQuotes(inputString: string): boolean {\n    const pattern = /([\"'])(.*?)\\1/;\n    return pattern.test(inputString);\n}\n\nexport function getIndexesStatement(indexes: any[], allField: any[], keywords: string) {\n    let operator: 'MATCH_ANY' | 'MATCH_PHRASE' | '=' = 'MATCH_ANY';\n\n    let searchValue = keywords.trim();\n\n    if (!searchValue || !indexes) {\n        return '';\n    }\n\n    if (isWrappedInQuotes(keywords)) {\n        operator = 'MATCH_PHRASE';\n    } else {\n        searchValue = `'${searchValue}'`;\n    }\n    const indexesNames = indexes.map(item => item.columnName);\n    return indexesNames.reduce((prevValue, currValue) => {\n        const currentField = allField.find(field => `${field.value}` === currValue);\n        const currentFieldType = getFieldType(currentField.Type)?.toUpperCase();\n        if (currentFieldType === 'NUMBER') {\n            operator = '=';\n        }\n        if (currentFieldType === 'STRING' || currentFieldType === 'ARRAY') {\n            if (isWrappedInQuotes(keywords)) {\n                operator = 'MATCH_PHRASE';\n            } else {\n                operator = 'MATCH_ANY';\n            }\n        }\n        const canSearchField = CAN_SEARCH_FIELD_TYPE.includes(currentFieldType as string);\n        if (canSearchField) {\n            if (prevValue) {\n                return `${prevValue} OR \\`${currValue}\\` ${operator} ${searchValue}`;\n            } else {\n                return `\\`${currValue}\\` ${operator} ${searchValue}`;\n            }\n        }\n        return prevValue;\n    }, '');\n}\n\nexport const DISCOVER_SHORTCUTS = [\n    {\n        key: nanoid(),\n        text: `Last 5 Minutes`,\n        label: `Last 5 Minutes`,\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-5, 'minute').startOf('second'), now],\n        format: 'HH:mm',\n        raw: {\n            from: 'now-5m',\n            to: 'now',\n        },\n        type: 'minute',\n        number: -5,\n    },\n    {\n        key: nanoid(),\n        text: `Last 15 Minutes`,\n        label: `Last 15 Minutes`,\n        raw: {\n            from: 'now-15m',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-15, 'minute').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'minute',\n        number: -15,\n    },\n    {\n        key: nanoid(),\n        text: `Last 1 Hour`,\n        label: `Last 1 Hour`,\n        raw: {\n            from: 'now-1h',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-1, 'hour').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'hour',\n        number: -1,\n    },\n    {\n        key: nanoid(),\n        text: `Last 1 Day`,\n        label: `Last 1 Day`,\n        raw: {\n            from: 'now-1d',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-1, 'day').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'day',\n        number: -1,\n    },\n    {\n        key: nanoid(),\n        text: `Last 7 Days`,\n        label: `Last 1 Days`,\n        raw: {\n            from: 'now-7d',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-7, 'day').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'day',\n        number: -7,\n    },\n    {\n        key: nanoid(),\n        text: `Last 1 Month`,\n        label: `Last 1 Month`,\n        raw: {\n            from: 'now-1M',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-1, 'month').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'month',\n        number: -1,\n    },\n    {\n        key: nanoid(),\n        text: `Last 3 Months`,\n        label: `Last 3 Months`,\n        raw: {\n            from: 'now-3M',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-3, 'month').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'month',\n        number: -3,\n    },\n    {\n        key: nanoid(),\n        text: `Last 1 Year`,\n        label: `Last 1 Year`,\n        raw: {\n            from: 'now-1y',\n            to: 'now',\n        },\n        range: (now: dayjs.Dayjs = dayjs()) => [now.add(-1, 'year').startOf('second'), now],\n        format: 'HH:mm',\n        type: 'year',\n        number: -1,\n    },\n];\n\nexport const SURROUNDING_LOGS_OPERATORS = [\n    {\n        label: '5',\n        value: '5',\n    },\n    {\n        label: '10',\n        value: '10',\n    },\n];\n\nexport function getLatestTime(id: string) {\n    if (!id) {\n        return null;\n    }\n    const selectedItem = DISCOVER_SHORTCUTS.find(item => item.key === id);\n    return selectedItem?.range();\n}\n\nexport const TIME_INTERVALS = [\n    {\n        value: 'auto',\n        label: `Auto`,\n    },\n    {\n        value: 'second',\n        label: `Second`,\n    },\n    {\n        value: 'minute',\n        label: `Minute`,\n    },\n    {\n        value: 'hour',\n        label: `Hour`,\n    },\n    {\n        value: 'day',\n        label: `Day`,\n    },\n    {\n        value: 'week',\n        label: `Week`,\n    },\n    {\n        value: 'month',\n        label: `Month`,\n    },\n    {\n        value: 'year',\n        label: `Year`,\n    },\n];\n\nexport const PAGESIZE_OPTIONS = [10, 20, 50, 100, 200];\n\nexport const FIELD_TYPES = [\n    {\n        key: 'STRING',\n        value: ['VARCHAR', 'STRING', 'CHAR', 'TEXT'],\n        icon: '',\n    },\n    {\n        key: 'NUMBER',\n        value: ['INT', 'LARGEINT', 'SMALLINT', 'TINYINT', 'DECIMAL', 'BIGINT', 'FLOAT', 'DOUBLE'],\n        icon: '',\n    },\n    {\n        key: 'DATE',\n        value: ['DATE', 'DATETIME', 'DATEV2', 'DATETIMEV2'],\n        icon: '',\n    },\n    {\n        key: 'JSONB',\n        value: ['JSONB'],\n        icon: '',\n        complex: true,\n    },\n    {\n        key: 'ARRAY',\n        value: ['ARRAY'],\n        icon: '',\n        complex: true,\n    },\n    {\n        key: 'BOOLEAN',\n        value: ['BOOLEAN'],\n        icon: '',\n    },\n    {\n        key: 'BITMAP',\n        value: ['BITMAP'],\n        icon: '',\n        complex: true,\n    },\n    {\n        key: 'HLL',\n        value: ['HLL'],\n        icon: '',\n        complex: true,\n    },\n    {\n        key: 'VARIANT',\n        value: ['VARIANT'],\n        icon: '',\n        complex: true,\n    },\n    {\n        key: 'JSON',\n        value: ['JSON'],\n        icon: '',\n        complex: true,\n    },\n];\n\nexport function encodeBase64(str: string) {\n    return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => String.fromCharCode(parseInt('0x' + p1, 10))));\n}\n\nexport function decodeBase64(base64: string) {\n    return decodeURIComponent(\n        Array.from(atob(base64))\n            .map(c => '%' + c.charCodeAt(0).toString(16).padStart(2, '0'))\n            .join(''),\n    );\n}\n\nexport const isComplexType = (columnType: string | undefined) => {\n    if (!columnType) {\n        return false;\n    }\n    const currentColumnType = FIELD_TYPES.find(item => item.value.some(val => columnType.toLocaleUpperCase().includes(val)));\n    if (currentColumnType) {\n        return !!currentColumnType.complex;\n    }\n    return true;\n};\n\nexport function formatDate(interval: ManipulateType) {\n    let date_format = 'YYYY-MM-DD HH:mm:ss';\n    switch (interval) {\n        case 'year':\n            date_format = 'YYYY';\n            break;\n        case 'month':\n            date_format = 'YYYY-MM';\n            break;\n        case 'week':\n            date_format = 'YYYY-MM-DD';\n            break;\n        case 'day':\n            date_format = 'YYYY-MM-DD';\n            break;\n        case 'hour':\n            date_format = 'YYYY-MM-DD HH:mm:ss';\n            break;\n        case 'minute':\n            date_format = 'YYYY-MM-DD HH:mm:ss';\n            break;\n        case 'second':\n        default:\n            date_format = 'YYYY-MM-DD HH:mm:ss';\n            break;\n    }\n    return date_format;\n}\n\nexport function resetDate(date: Dayjs, interval: ManipulateType) {\n    let date_reset = date;\n    switch (interval) {\n        case 'year':\n            date_reset.set('month', 1).set('date', 1).set('hour', 0).set('minute', 0).set('second', 0);\n            break;\n        case 'month':\n            date_reset.set('date', 1).set('hour', 0).set('minute', 0).set('second', 0);\n            break;\n        case 'week':\n            date_reset.set('hour', 0).set('minute', 0).set('second', 0);\n            break;\n        case 'day':\n            date_reset.set('hour', 0).set('minute', 0).set('second', 0);\n            break;\n        case 'hour':\n            date_reset.set('minute', 0).set('second', 0);\n            break;\n        case 'minute':\n            date_reset.set('second', 0);\n            break;\n        case 'second':\n        default:\n            break;\n    }\n    return date_reset;\n}\n\nexport function getDateRange(startDate: Dayjs, endDate: Dayjs, interval: any) {\n    const DATE_FORMAT = formatDate(interval.interval_unit);\n    if (dayjs(startDate, DATE_FORMAT).isSame(dayjs(endDate, DATE_FORMAT), interval.interval_unit)) {\n        return [endDate];\n    }\n    let date: any = resetDate(startDate, interval.interval_unit);\n    const formatStartDate = date.format(DATE_FORMAT);\n    const dates = [formatStartDate];\n    do {\n        date = dayjs(date).add(interval.interval_value, interval.interval_unit);\n        if (dayjs(date).isBefore(endDate)) {\n            dates.push(date.format(DATE_FORMAT));\n        }\n    } while (dayjs(date).isBefore(endDate));\n    return dates;\n}\n\nexport function getChartsData(tableDataCharts: any[], currentDate: [Dayjs, Dayjs]) {\n    const selectInterval: AutoInterval = getAutoInterval(currentDate);\n    const [startDate, endDate] = currentDate;\n    const intervalUnit: any = selectInterval.interval_unit || IntervalEnum.Auto;\n    const timeInterval: any = intervalUnit === IntervalEnum.Auto ? selectInterval : { interval_value: 1, interval_unit: intervalUnit };\n    const dates = getDateRange(startDate as Dayjs, endDate as Dayjs, timeInterval);\n    const tableDataMap = new Map();\n    const result: any[] = [];\n    const DATE_FORMAT_FROM_INTERVAL = formatDate(timeInterval.interval_unit);\n\n    tableDataCharts.forEach(e => {\n        const currentLocale = dayjs.locale();\n        const date = dayjs.utc(e['TT']).locale(currentLocale).format(DATE_FORMAT_FROM_INTERVAL);\n        tableDataMap.set(date, e['sum(cnt)']);\n    });\n    dates.forEach(date => {\n        const newDate = dayjs(date).format(DATE_FORMAT_FROM_INTERVAL);\n        if (!tableDataMap.get(newDate)) {\n            tableDataMap.set(newDate, null);\n        }\n    });\n\n    tableDataMap.forEach((value, key) => {\n        result.push({\n            TT: key,\n            ['sum(cnt)']: value,\n        });\n    });\n    return orderBy(result, ['TT'], ['asc']);\n}\n\nexport function convertColumnToRow(jsonData: any): Array<Record<string, any>> {\n    const frame = jsonData.results[0];\n    const fieldNames = frame.schema.fields.map((f: any) => f.name);\n    const columns = frame.data.values;\n\n    if (columns.length === 0) {\n        return [];\n    }\n\n    const numRows = columns[0].length;\n    const rows: Array<Record<string, any>> = [];\n\n    for (let i = 0; i < numRows; i++) {\n        const row: Record<string, any> = {};\n        for (let j = 0; j < columns.length; j++) {\n            row[fieldNames[j]] = columns[j][i];\n            if (isValidTimeFieldType(frame.schema.fields[j].type.toUpperCase())) {\n                // 如果是时间字段，转换为 Dayjs 对象\n                row[fieldNames[j]] = formatTimestampToDateTime(row[fieldNames[j]], frame.schema.fields[j].precision || 3);\n                // row[fieldNames[j]] = dayjs.utc(row[fieldNames[j]]).locale(currentLocale).format('YYYY-MM-DD HH:mm:ss.SSS');\n            }\n            if (frame.schema.fields[j].type === 'VARIANT') {\n                // 如果是 VARIANT 类型，转换为 JSON 对象\n                try {\n                    row[fieldNames[j]] = JSON.parse(row[fieldNames[j]]);\n                } catch (e) {\n                    console.error(`Error parsing VARIANT field ${fieldNames[j]}:`, e);\n                }\n            }\n        }\n        rows.push(row);\n    }\n\n    return rows;\n}\n\n// 通过查询 Doris 的字段判断类型，不依赖 Grafana 类型\nexport function convertColumnToRowViaFieldsType(jsonData: any, fields: any): Array<Record<string, any>> {\n    console.log('fields', fields);\n    const frame = jsonData.results[0];\n    const fieldNames = frame.schema.fields.map((f: any) => f.name);\n    const columns = frame.data.values;\n\n    if (columns.length === 0) {\n        return [];\n    }\n\n    const numRows = columns[0].length;\n    const rows: Array<Record<string, any>> = [];\n\n    for (let i = 0; i < numRows; i++) {\n        const row: Record<string, any> = {};\n        for (let j = 0; j < columns.length; j++) {\n            row[fieldNames[j]] = columns[j][i];\n            if (isValidTimeFieldType(frame.schema.fields[j].type.toUpperCase())) {\n                // 如果是时间字段，转换为 Dayjs 对象\n                row[fieldNames[j]] = formatTimestampToDateTime(row[fieldNames[j]], frame.schema.fields[j].precision || 3);\n                // row[fieldNames[j]] = dayjs.utc(row[fieldNames[j]]).locale(currentLocale).format('YYYY-MM-DD HH:mm:ss.SSS');\n            }\n            const currentFieldInfo = fields.filter((item: any) => item.Field === frame.schema.fields[j].name)[0];\n            // 如果是 VARIANT 类型，转换为 JSON 对象\n            if (currentFieldInfo && currentFieldInfo.Type.toUpperCase() === 'VARIANT') {\n                try {\n                    row[fieldNames[j]] = JSON.parse(row[fieldNames[j]]);\n                } catch (e) {\n                    console.error(`Error parsing VARIANT field ${fieldNames[j]}:`, e);\n                }\n            }\n        }\n        rows.push(row);\n    }\n\n    return rows;\n}\n\n// 格式化时间戳为 DATETIME([number]) 格式\nfunction formatTimestampToDateTime(timestamp: any, precision = 3) {\n    const currentLocale = dayjs.locale();\n    // 基础格式：YYYY-MM-DD HH:mm:ss\n    let formatString = 'YYYY-MM-DD HH:mm:ss';\n\n    // 根据精度添加毫秒部分\n    if (precision > 0) {\n        formatString += `.${'S'.repeat(precision)}`;\n    }\n    // 转换时间戳并格式化\n    return dayjs.utc(timestamp).locale(currentLocale).format(formatString);\n}\n\nexport function formatTracesResData(resData: any) {\n    const frame = resData.results[0];\n    const { data } = frame;\n    const traceDataFrame: DataFrame = {\n        name: 'Trace ID',\n        refId: frame.schema.refId || 'Trace ID',\n        fields: frame.schema.fields.map((f: any, i: number) => ({\n            name: f.name,\n            type: f.type,\n            values: data.values[i],\n            typeInfo: f.typeInfo,\n            config: {},\n        })),\n        length: data.values[0].length,\n    };\n    try {\n        traceDataFrame.fields.forEach(f => {\n            if (f.name === 'serviceTags' || f.name === 'tags') {\n                f.type = FieldType.other;\n                f.values = f.values.map(item => JSON.parse(item));\n            }\n        });\n    } catch (err) {\n        console.log('err:', err);\n    }\n    console.log('traceDataFrame', traceDataFrame);\n    return traceDataFrame;\n}\n\nfunction getSearchTableData(tokenizeFields: any[], tableResult: any[]) {\n    const result: any = [...tokenizeFields];\n    tableResult.forEach(tableItem => {\n        result.forEach((token: any) => {\n            token['searchValue'] = tableItem[token.columnName];\n        });\n    });\n    return result;\n}\n\nfunction searchField(data: any[], searchString: string) {\n    return some(data, item => item.columnName === searchString);\n}\n\nfunction parseKeywords(keyword: string) {\n    if (keyword.length >= 2 && keyword[0] === keyword[keyword.length - 1] && (keyword[0] === `'` || keyword[0] === `\"`)) {\n        keyword = keyword.substring(1, keyword.length - 1);\n    }\n    return keyword;\n}\n\nfunction highlightDelimiter(inputStr: string, delimiter: string) {\n    const highlighted = inputStr.replace(new RegExp(`${delimiter}`, 'g'), `<mark>${delimiter}</mark>`);\n    return highlighted;\n}\n\nfunction insertUnderscore(arr: string[]) {\n    return arr.reduce((result: string[], item: string, index) => {\n        result.push(item);\n        if (index < arr.length - 1) {\n            result.push('_');\n        }\n        return result;\n    }, []);\n}\n\nfunction compare_ignore_quotes(s1: string, s2: string) {\n    // 移除双引号和单引号\n    const cleanS1 = s1.replace(/['\"]/g, '');\n    const cleanS2 = s2.replace(/['\"]/g, '');\n    // 比较\n    return cleanS1 === cleanS2;\n}\n\ntype SearchResultItem = { [key: string]: any };\nexport function generateHighlightedResults(data: { search_value: string; indexes: string[] }, result: SearchResultItem[]) {\n    const keyword: string = data.search_value || '';\n    const searchTableData = getSearchTableData(data.indexes, result);\n\n    const keywordsTokens: string[] = flatten(\n        Array.from(jsTokens(keyword))\n            .filter(item => item.type !== 'Punctuator')\n            .map(item => {\n                let res = item.value.toLowerCase();\n                return item.value.includes('_') ? item.value.split('_').map(str => str.toLowerCase()) : res;\n            }),\n    );\n\n    const _sourceResult = result.map(item => {\n        let itemSource = '';\n\n        for (const key in item) {\n            let highlightValue: any = item[key];\n            let itemValue: any = item[key];\n\n            if (typeof highlightValue === 'object') {\n                highlightValue = JSON.stringify(highlightValue);\n                itemValue = JSON.stringify(itemValue);\n            }\n\n            if (keyword && searchField(searchTableData, key)) {\n                const strValue = typeof itemValue === 'string' ? itemValue : itemValue + '';\n\n                if (isWrappedInQuotes(keyword)) {\n                    const parsedKeyword = parseKeywords(keyword);\n                    if (parsedKeyword === strValue) {\n                        highlightValue = `<mark>${itemValue}</mark>`;\n                    } else if (strValue.includes(parsedKeyword)) {\n                        highlightValue = highlightDelimiter(strValue, parsedKeyword);\n                    }\n                } else {\n                    const tokenizedAns = Array.from(jsTokens(strValue)).map(item => item.value);\n                    let ans: string[] = [];\n\n                    if (tokenizedAns.includes(keyword)) {\n                        ans = tokenizedAns;\n                    } else {\n                        const ansWithUnderscore = flatten(\n                            tokenizedAns.map(item => {\n                                if (item.includes('_')) {\n                                    return insertUnderscore(item.split('_'));\n                                }\n                                return item;\n                            }),\n                        );\n                        ans = ansWithUnderscore;\n                    }\n\n                    if (ans.length > 0) {\n                        highlightValue = ans.reduce((acc: string, curr: string) => {\n                            if (\n                                keywordsTokens.find(token => compare_ignore_quotes(token, curr.toLowerCase())) ||\n                                compare_ignore_quotes(keyword.toLowerCase(), curr.toLowerCase())\n                            ) {\n                                return acc + `<mark>${curr}</mark>`;\n                            }\n                            return acc + curr;\n                        }, '');\n                    }\n                }\n            }\n\n            itemSource += `<span class=\"field-key\">${key}:</span>${highlightValue} `;\n        }\n\n        return {\n            _original: item,\n            _source: itemSource.trim(),\n        };\n    });\n\n    return _sourceResult;\n}\n","import { getBackendSrv } from '@grafana/runtime';\n\n\nexport function getTableDataService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/table_data',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getTableDataChartsService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/table_data_charts',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getTopDataService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/top_data',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\n\nexport function getTableDataCountService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/table_data_count',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getTableDataTraceService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/table_data_trace',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getTracesService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/traces',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getTracesServicesService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/traces_services',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getTraceOperationsService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/traces_operations',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\n\n\nexport function getSurroundingDataService(payload: any) {\n    const { selectdbDS, ...rest } = payload;\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/surrounding_data',\n        method: 'POST',\n        data: {\n            ...rest,\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n","import dayjs, { Dayjs, ManipulateType } from \"dayjs\";\n\nexport interface QueryTableDataParams {\n    catalog: string;\n    database: string;\n    table: string;\n    cluster: string;\n    startDate: string;\n    endDate: string;\n    sort: string;\n    timeField: string;\n    interval: IntervalEnum;\n}\n\nexport interface DataFilterType {\n    fieldName: string;\n    operator: Operator;\n    value: Array<string | number>;\n    label?: string;\n    id: string;\n}\n\nexport type Operator = '=' | '!=' | 'in' | 'not in' | 'is null' | 'is not null' | 'between' | 'not between' | 'like' | 'not like' | 'match_all' | 'match_any' | 'match_phrase';\n\nexport interface DiscoverCurrent {\n    catalog: string;\n    database: string;\n    table: string;\n    cluster: string;\n    timeField: string;\n    date: [Dayjs, Dayjs] | [];\n}\n\nexport enum IntervalEnum {\n    Auto = 'auto',\n    Day = 'day',\n    Week = 'week',\n    Month = 'month',\n    Year = 'year',\n    Hour = 'hour',\n    Minute = 'minute',\n    Second = 'second',\n}\n\n\nexport type ShortcutItem = {\n    key: string;\n    text: string;\n    label: string;\n    range: (now?: dayjs.Dayjs) => dayjs.Dayjs[];\n    format: string;\n    type: string;\n    number: number;\n}\n\nexport interface QueryTableFieldsParams {\n    catalog: string;\n    database: string;\n    table: string;\n    describe_extend_variant_column?: string;\n}\n\nexport type FieldNode = {\n    name: string;\n    type: string;\n    children?: FieldNode[];\n    Null?: string;\n    Key?: string;\n    Default?: string | null;\n    Extra?: string;\n    Comment?: string;\n    Visible?: string;\n};\n\n\nexport interface RequestParams {\n    catalog: string;\n    database: string;\n    table: string;\n    describe_extend_variant_column?: boolean;\n}\n\nexport interface QueryTableIndexesParams {\n    catalog: string;\n    database: string;\n    table: string\n}\n\nexport interface QueryTableParams {\n    catalog: string;\n    database: string;\n}\n\nexport type AutoInterval = {\n    current_date_range: number;\n    current_type: ManipulateType;\n    interval_unit: ManipulateType;\n    interval_value: number;\n};\n\n\nexport type Frame = {\n    schema: {\n        fields: Array<{ name: string }>;\n    };\n    data: {\n        values: any[][];\n    };\n};\n\nexport type Result = {\n    frames: Frame[];\n};\n\nexport type Root = {\n    results: Record<string, Result>;\n};\n","import { getBackendSrv } from '@grafana/runtime';\n// import { lastValueFrom } from 'rxjs';\n\nexport function getDatabases(selectdbDS: any) {\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/database',\n        method: 'GET',\n        params: {\n            ds: selectdbDS.uid,\n        },\n        credentials: 'include',\n    });\n    return response;\n    // const res = await lastValueFrom(response);\n    // return res;\n}\n\nexport function getTables({ selectdbDS, database }: { selectdbDS: any; database: string }) {\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/table',\n        method: 'GET',\n        params: {\n            ds: selectdbDS.uid,\n            database,\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getFieldsService({ selectdbDS, database, table }: { selectdbDS: any; database: string; table: string }) {\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/fields',\n        method: 'GET',\n        params: {\n            ds: selectdbDS.uid,\n            database,\n            table\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n\nexport function getIndexesService({ selectdbDS, database, table }: { selectdbDS: any; database: string; table: string }) {\n    const response = getBackendSrv().fetch({\n        url: '/api/plugins/selectdb-discover-app/resources/indexes',\n        method: 'GET',\n        params: {\n            ds: selectdbDS.uid,\n            database,\n            table\n        },\n        credentials: 'include',\n    });\n    return response;\n}\n"],"names":["LoadingState","PanelRenderer","Drawer","useAtom","useAtomValue","React","useEffect","getTableDataTraceService","currentTableAtom","currentCatalogAtom","currentDatabaseAtom","tableTracesDataAtom","selectedDatasourceAtom","selectedRowAtom","formatTracesResData","TraceDetail","props","currentTable","currentCatalog","currentDatabase","traceData","setTraceData","selectedRow","selectdbDS","open","traceId","getTraceData","useCallback","payload","catalog","database","table","cluster","sort","trace_id","subscribe","next","data","ok","formatedData","error","err","console","log","title","onClose","size","width","height","pluginId","options","state","Done","series","timeRange","from","Date","now","to","raw","pluginJson","groupBy","PLUGIN_BASE_URL","id","ROUTES","FORMAT_DATE","IntervalEnum","DEFAULT_SERVICE","value","label","DEFAULT_OPERATION","AUTO_INTERVALS","current_date_range","current_type","interval_unit","interval_value","CAN_SEARCH_FIELD_TYPE","ENABLE_SEARCH_FIELD_TYPE","getAutoInterval","currentDate","AUTO_INTERVALS_OBJ","startDate","endDate","diffYear","diff","diffMonth","diffWeek","diffDay","diffHour","diffMinute","intervalInfo","find","item","translationDateIntervalType","type","atom","currentServiceAtom","currentOperationAtom","currentSortAtom","tagsAtom","tracesAtom","tracesServicesAtom","traceOperationsAtom","minDurationAtom","maxDurationAtom","HelpCircle","Button","Field","Input","Select","css","currentTimeFieldAtom","SearchSidebar","tracesServices","traceOperations","currentService","setCurrentService","currentOperation","setCurrentOperation","tags","setTags","currentTimeField","minDuration","setMinDuration","maxDuration","setMaxDuration","div","className","style","marginLeft","onChange","selectedService","selectedOperation","span","placeholder","e","target","onMinDurationChange","onMaxDurationChange","onClick","onQuerying","useTheme2","TraceItem","trace","theme","colors","background","primary","border","weak","shape","borderRadius","spacing","shadows","z1","progress","main","typography","fontWeightMedium","text","root_service","operation","secondary","trace_duration_ms","sm","spans","JSON","parse","services","map","service","index","key","xs","time","disabled","timeAgo","Pagination","ReactECharts","pageAtom","pageSizeAtom","TraceView","page","setPage","pageSize","total","traces","setSort","drawerOpen","setDrawerOpen","useState","setTraceId","getOption","tooltip","trigger","padding","borderWidth","backgroundColor","isLight","params","formatter","html","name","xAxis","s","axisLabel","color","axisLine","lineStyle","yAxis","symbolSize","dataIndex","Math","max","min","onEvents","click","option","notMerge","lazyUpdate","onSortByChange","h3","length","currentPage","numberOfPages","floor","onNavigate","toPage","styled","DiscoverHeaderSearch","DiscoverHeaderTimeSelect","CascaderStyle","dayjs","useSetAtom","DataSourcePicker","getDataSourceSrv","indexesAtom","discoverCurrentAtom","locationAtom","currentClusterAtom","tableFieldsAtom","timeFieldsAtom","currentDateAtom","currentIndexAtom","searchFocusAtom","datasourcesAtom","timeRangeAtom","databasesAtom","tablesAtom","disabledOptionsAtom","isValidTimeFieldType","TimeRangeInput","getDatabases","getFieldsService","getIndexesService","getTables","TracesHeader","setIndexes","discoverCurrent","setDiscoverCurrent","process","env","NODE_ENV","debugLabel","loc","setLoc","currentCluster","setCurrentCluster","setTableFields","timeFields","setTimeFields","setCurrentDate","currentIndex","setCurrentIndex","searchFocus","selectedDatasource","setSelectedDatasource","setTimeRange","setCurrentTable","databases","setDatabases","tables","setTables","datasources","setDataSource","setDisabledOptions","getList","res","results","values","getFields","selectedTable","fieldTypes","tableFields","Type","filter","field","toUpperCase","timeField","getIndexes","columnNames","indexesTypes","tableIndexes","columnName","isDark","medium","current","noDefault","ds","selectedDatabase","selectdbTimeFiled","prev","searchParams","set","marginRight","isReversed","start","toDate","end","format","LoadingBar","getTraceOperationsService","getTracesService","getTracesServicesService","convertColumnToRow","PageDashboard","setTraces","setTracesServices","setTraceOperations","loading","setLoading","getTraces","page_size","service_name","sort_by","rowsData","formateData","toFixed","getTracesServices","getTracesOperations","serviceName","aside","Route","Routes","PageTrace","Discover","lazy","App","path","element","Traces","atomWithStorage","selectAtom","atomWithLocation","AggregatableEnum","DISCOVER_DEFAULT_STATUS","DISCOVER_SHORTCUTS","FieldTypeEnum","SearchableEnum","dataFilterAtom","searchTypeAtom","range","selectedIndexesAtom","searchValueAtom","activeShortcutAtom","dorisInfoAtom","selectedFieldsAtom","tableDataAtom","topDataAtom","surroundingTableDataAtom","tableDataChartsAtom","intervalAtom","Auto","tableTotalCountAtom","tableEChartsDataAtom","searchableAtom","ANY","aggregatableAtom","fieldTypeAtom","tableFieldValuesAtom","surroundingDataFilterAtom","beforeTimeFieldPageSizeAtom","afterTimeFieldPageSizeAtom","beforeTimeAtom","afterTimeAtom","beforeCountAtom","afterCountAtom","surroundingTableFieldsAtom","surroundingSelectedFieldsAtom","discoverLoadingAtom","getTableData","getTopData","getSurroundingData","getTableDataCharts","getTableFieldValues","getTimeFields","getTableFields","flatten","orderBy","some","nanoid","jsTokens","localeData","FieldType","utc","extend","OPERATORS","SQL_OPERATORS","TIME_FIELD_TYPES","fieldType","baseFieldType","split","includes","getFieldType","columnType","currentColumnType","FIELD_TYPES","val","toLocaleUpperCase","date","SEARCHABLE","AGGREGATABLE","ParamsKeyEnum","getFilterSQL","fieldName","operator","valueString","addSqlFilter","sql","dataFilterValue","result","isWrappedInQuotes","inputString","pattern","test","getIndexesStatement","indexes","allField","keywords","searchValue","trim","indexesNames","reduce","prevValue","currValue","currentField","currentFieldType","canSearchField","add","startOf","number","SURROUNDING_LOGS_OPERATORS","getLatestTime","selectedItem","TIME_INTERVALS","PAGESIZE_OPTIONS","icon","complex","encodeBase64","str","btoa","encodeURIComponent","replace","match","p1","String","fromCharCode","parseInt","decodeBase64","base64","decodeURIComponent","Array","atob","c","charCodeAt","toString","padStart","join","isComplexType","formatDate","interval","date_format","resetDate","date_reset","getDateRange","DATE_FORMAT","isSame","formatStartDate","dates","isBefore","push","getChartsData","tableDataCharts","selectInterval","intervalUnit","timeInterval","tableDataMap","Map","DATE_FORMAT_FROM_INTERVAL","forEach","currentLocale","locale","newDate","get","TT","jsonData","frame","fieldNames","schema","fields","f","columns","numRows","rows","i","row","j","formatTimestampToDateTime","precision","convertColumnToRowViaFieldsType","currentFieldInfo","timestamp","formatString","repeat","resData","traceDataFrame","refId","typeInfo","config","other","getSearchTableData","tokenizeFields","tableResult","tableItem","token","searchField","searchString","parseKeywords","keyword","substring","highlightDelimiter","inputStr","delimiter","highlighted","RegExp","insertUnderscore","arr","compare_ignore_quotes","s1","s2","cleanS1","cleanS2","generateHighlightedResults","search_value","searchTableData","keywordsTokens","toLowerCase","_sourceResult","itemSource","highlightValue","itemValue","stringify","strValue","parsedKeyword","tokenizedAns","ans","ansWithUnderscore","acc","curr","_original","_source","getBackendSrv","getTableDataService","rest","response","fetch","url","method","uid","credentials","getTableDataChartsService","getTopDataService","getTableDataCountService","getSurroundingDataService"],"sourceRoot":""}