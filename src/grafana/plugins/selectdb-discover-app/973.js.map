{"version":3,"file":"973.js?_cache=6e6eb8228a493c0aa4cf","mappings":"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","sources":["webpack://selectdb-discover-app/./styles/tailwind.css","webpack://selectdb-discover-app/./components/testIds.ts","webpack://selectdb-discover-app/./components/discover-header/discover-header.style.ts","webpack://selectdb-discover-app/./components/discover-header/search-type.tsx","webpack://selectdb-discover-app/./components/discover-header/sql-search.tsx","webpack://selectdb-discover-app/./components/discover-header/index.tsx","webpack://selectdb-discover-app/./styles/tailwind.css?25ab","webpack://selectdb-discover-app/./components/discover-filter/discover-filter.style.ts","webpack://selectdb-discover-app/./components/discover-filter/filter-content.tsx","webpack://selectdb-discover-app/./components/discover-filter/index.tsx","webpack://selectdb-discover-app/./utils/icon.tsx","webpack://selectdb-discover-app/./utils/tailwind.ts","webpack://selectdb-discover-app/./components/discover-sidebar/field-item/top-data/top-data.tsx","webpack://selectdb-discover-app/./components/discover-sidebar/field-item/field-item.tsx","webpack://selectdb-discover-app/./components/discover-sidebar/filter-content/filter-content.tsx","webpack://selectdb-discover-app/./components/discover-sidebar/index.tsx","webpack://selectdb-discover-app/./components/discover-histogram/index.tsx","webpack://selectdb-discover-app/./components/selectdb-ui/sd-collapsible-table/index.tsx","webpack://selectdb-discover-app/./components/discover-content/discover-content.style.ts","webpack://selectdb-discover-app/./components/discover-content/content-table-actions.tsx","webpack://selectdb-discover-app/./components/discover-content/json-viewer.theme.ts","webpack://selectdb-discover-app/./components/discover-content/content-item.tsx","webpack://selectdb-discover-app/./components/surrounding-logs/surrounding-content-item.tsx","webpack://selectdb-discover-app/./components/surrounding-logs/logs-actions.tsx","webpack://selectdb-discover-app/./components/surrounding-logs/discover-filter/discover-filter.style.ts","webpack://selectdb-discover-app/./components/surrounding-logs/discover-filter/filter-content.tsx","webpack://selectdb-discover-app/./components/surrounding-logs/discover-filter/index.tsx","webpack://selectdb-discover-app/./utils/utils.ts","webpack://selectdb-discover-app/./components/surrounding-logs/content/content-table-actions.tsx","webpack://selectdb-discover-app/./components/surrounding-logs/index.tsx","webpack://selectdb-discover-app/./components/discover-content/index.tsx","webpack://selectdb-discover-app/./pages/PageDiscover.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n    :root {\n        --background: 215 100% 95%;\n        --foreground: 240 10% 14%;\n\n        --muted: 0 0% 96.1%;\n        --muted-foreground: 0 0% 45.1%;\n\n        --popover: 0 0% 100%;\n        --popover-foreground: 240 10% 14%;\n\n        --border: 240 2% 88%;\n        --input: 240 2% 75%;\n\n        --card: 0 0% 100%;\n        --card-foreground: 0 0% 3.9%;\n\n        --primary: 240 2% 88%;\n        --primary-foreground: 0 0% 98%;\n\n        --secondary: 0 0% 96.1%;\n        --secondary-foreground: 0 0% 9%;\n\n        --accent: 215 100% 95%;\n        --accent-foreground: 215 100% 95%;\n\n        --destructive: 0 86% 63%;\n        --destructive-foreground: 0 0% 98%;\n\n        --ring: 0 0% 3.9%;\n\n        --radius: 0.5rem;\n\n        --table-header-background: 214 100% 97%;\n\n        /* Primary Color */\n        --b1: 215 100% 95%;\n        --b2: 215 94% 87%;\n        --b3: 216 96% 79%;\n        --b4: 216 97% 72%;\n        --b5: 216 98% 65%;\n        --b6: 216 98% 57%;\n        --b7: 216 100% 50%;\n        --b8: 216 100% 42%;\n\n        /* 中性色板 (Neutral color) */\n        --n1: 240 100% 2%;\n        --n2: 240 10% 14%;\n        --n3: 240 5% 26%;\n        --n4: 240 3% 38%;\n        --n5: 240 2% 51%;\n        --n6: 240 2% 63%;\n        --n7: 240 2% 75%;\n        --n8: 0 0% 100%;\n        --n9: 240 2% 88%;\n\n        /* Success Color */\n        --g1: 134 100% 35%;\n        --g2: 132 70% 45%;\n        --g3: 136 100% 30%;\n        --g4: 128 63% 68%;\n        --g5: 126 68% 81%;\n        --g6: 125 100% 95%;\n\n        /* Warning Color */\n        --o1: 29 100% 50%;\n        --o2: 31 100% 59%;\n        --o3: 33 100% 41%;\n        --o4: 35 100% 77%;\n        --o5: 37 100% 86%;\n        --o6: 39 100% 94%;\n\n        /* Error Color */\n        --r1: 0 86% 63%;\n        --r2: 2 87% 71%;\n        --r3: 4 66% 52%;\n        --r4: 6 86% 78%;\n        --r5: 8 86% 89%;\n        --r6: 10 89% 96%;\n\n        --chart-1: 12 76% 61%;\n        --chart-2: 173 58% 39%;\n        --chart-3: 197 37% 24%;\n        --chart-4: 43 74% 66%;\n        --chart-5: 27 87% 67%;\n        --sidebar-background: 215 100% 95%;\n        --sidebar-foreground: 240 5.3% 26.1%;\n        --sidebar-primary: 240 5.9% 10%;\n        --sidebar-primary-foreground: 0 0% 98%;\n        --sidebar-accent: 0 0% 100%;\n        --sidebar-accent-foreground: 240 10% 14%;\n        --sidebar-border: 220 13% 91%;\n        --sidebar-ring: 217.2 91.2% 59.8%;\n    }\n\n    .theme-dark {\n        --background: 240 100% 1.96%;\n        --foreground: 213 31% 91%;\n\n        --muted: 240 3.7% 15.9%;\n        --muted-foreground: 240 3% 38%;\n        --accent: 240 5% 26%;\n        --accent-foreground: 240 5% 26%;\n\n        /* --muted: 223 47% 11%;\n    --muted-foreground: 240 3% 94%;\n\n    --accent: 216 34% 17%;\n    --accent-foreground: 210 40% 98%; */\n\n        --popover: 240 5% 26%;\n        --popover-foreground: 215 20.2% 65.1%;\n\n        --border-dark: 240 5% 26%;\n        --input: 240 5% 26%;\n\n        --card: 0 0% 0%;\n        --card-foreground: 213 31% 91%;\n\n        --primary: 223, 100%, 69%;\n        --primary-foreground: 222.2 47.4% 1.2%;\n\n        --secondary: 222.2 47.4% 11.2%;\n        --secondary-foreground: 210 40% 98%;\n\n        --destructive: 0 86% 63%;\n        --destructive-foreground: 210 40% 98%;\n\n        --ring: 216 34% 17%;\n\n        --radius: 0.5rem;\n\n        --table-header-background-dark: 240 5% 26%;\n\n        /* Primary Color */\n        --b1: 223 100% 90%;\n        --b2: 223 100% 79%;\n        --b3: 223 100% 69%;\n        --b4: 223 98% 58%;\n        --b5: 223 71% 44%;\n        --b6: 222 72% 29%;\n        --b7: 221 73% 15%;\n        --b8: 226 33% 18%;\n\n        /* 中性色板 (Neutral color) */\n        --n1: 0 0% 100%;\n        --n2: 240 3% 94%;\n        --n3: 240 2% 75%;\n        --n4: 240 2% 63%;\n        --n5: 240 2% 51%;\n        --n6: 240 3% 38%;\n        --n7: 240 5% 26%;\n        --n8: 240 10% 14%;\n        --n9: 240 100% 2%;\n\n        /* Success Color */\n        --g1: 132 70% 45%;\n        --g2: 134 100% 35%;\n        --g3: 136 82% 26%;\n        --g4: 138 65% 22%;\n        --g5: 143 42% 17%;\n        --g6: 158 21% 15%;\n\n        /* Warning Color */\n        --o1: 31 100% 59%;\n        --o2: 29 100% 50%;\n        --o3: 29 83% 35%;\n        --o4: 28 68% 28%;\n        --o5: 26 43% 21%;\n        --o6: 17 15% 18%;\n\n        /* Error Color */\n        --r1: 2 87% 71%;\n        --r2: 0 86% 63%;\n        --r3: 358 45% 43%;\n        --r4: 356 39% 33%;\n        --r5: 351 28% 22%;\n        --r6: 330 13% 18%;\n\n        --chart-1: 220 70% 50%;\n        --chart-2: 160 60% 45%;\n        --chart-3: 30 80% 55%;\n        --chart-4: 280 65% 60%;\n        --chart-5: 340 75% 55%;\n        --sidebar-background: 255 5.9% 10%;\n        --sidebar-foreground: 240 4.8% 95.9%;\n        --sidebar-primary: 224.3 76.3% 48%;\n        --sidebar-primary-foreground: 0 0% 100%;\n        --sidebar-accent: 240 5% 26%;\n        --sidebar-accent-foreground: 240 3% 94%;\n        --sidebar-border: 240 3.7% 15.9%;\n        --sidebar-ring: 217.2 91.2% 59.8%;\n    }\n}\n\n@layer base {\n    * {\n        @apply border-border;\n    }\n\n    input {\n        @apply border-input;\n    }\n\n    input:focus-visible,\n    select:focus-visible,\n    button:focus-visible {\n        @apply focus-visible:ring-0 focus-visible:ring-offset-0;\n    }\n\n    button:focus {\n        @apply focus:ring-0 focus:ring-offset-0;\n    }\n\n    html {\n        font-size: 16px;\n    }\n    body {\n        @apply bg-background text-foreground;\n        font-feature-settings:\n            'rlig' 1,\n            'calt' 1;\n    }\n\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover,\n    input:-webkit-autofill:focus,\n    input:-webkit-autofill:active {\n        box-shadow: 0 0 0px 1000px hsl(0 0% 100%) inset !important;\n        -webkit-text-fill-color: #000 !important;\n    }\n\n    .dark {\n        input:-webkit-autofill,\n        input:-webkit-autofill:hover,\n        input:-webkit-autofill:focus,\n        input:-webkit-autofill:active {\n            box-shadow: 0 0 0px 1000px hsl(240 10% 14%) inset !important;\n            -webkit-text-fill-color: #efeff0 !important;\n        }\n    }\n}\n\n@layer components {\n    .icon-hover-close {\n        @apply dark:hover:bg-n7/80 hover:bg-b2/80 hover:text-n2 hover:p-[2px] rounded p-[2px];\n    }\n\n    .icon-hover {\n        @apply hover:bg-n6/40 hover:text-n2 hover:p-1 rounded p-1;\n    }\n}\n\n.ant-menu-submenu-popup {\n    display: none !important;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./styles/tailwind.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\\n@layer base {\\n    :root {\\n        --background: 215 100% 95%;\\n        --foreground: 240 10% 14%;\\n\\n        --muted: 0 0% 96.1%;\\n        --muted-foreground: 0 0% 45.1%;\\n\\n        --popover: 0 0% 100%;\\n        --popover-foreground: 240 10% 14%;\\n\\n        --border: 240 2% 88%;\\n        --input: 240 2% 75%;\\n\\n        --card: 0 0% 100%;\\n        --card-foreground: 0 0% 3.9%;\\n\\n        --primary: 240 2% 88%;\\n        --primary-foreground: 0 0% 98%;\\n\\n        --secondary: 0 0% 96.1%;\\n        --secondary-foreground: 0 0% 9%;\\n\\n        --accent: 215 100% 95%;\\n        --accent-foreground: 215 100% 95%;\\n\\n        --destructive: 0 86% 63%;\\n        --destructive-foreground: 0 0% 98%;\\n\\n        --ring: 0 0% 3.9%;\\n\\n        --radius: 0.5rem;\\n\\n        --table-header-background: 214 100% 97%;\\n\\n        /* Primary Color */\\n        --b1: 215 100% 95%;\\n        --b2: 215 94% 87%;\\n        --b3: 216 96% 79%;\\n        --b4: 216 97% 72%;\\n        --b5: 216 98% 65%;\\n        --b6: 216 98% 57%;\\n        --b7: 216 100% 50%;\\n        --b8: 216 100% 42%;\\n\\n        /* 中性色板 (Neutral color) */\\n        --n1: 240 100% 2%;\\n        --n2: 240 10% 14%;\\n        --n3: 240 5% 26%;\\n        --n4: 240 3% 38%;\\n        --n5: 240 2% 51%;\\n        --n6: 240 2% 63%;\\n        --n7: 240 2% 75%;\\n        --n8: 0 0% 100%;\\n        --n9: 240 2% 88%;\\n\\n        /* Success Color */\\n        --g1: 134 100% 35%;\\n        --g2: 132 70% 45%;\\n        --g3: 136 100% 30%;\\n        --g4: 128 63% 68%;\\n        --g5: 126 68% 81%;\\n        --g6: 125 100% 95%;\\n\\n        /* Warning Color */\\n        --o1: 29 100% 50%;\\n        --o2: 31 100% 59%;\\n        --o3: 33 100% 41%;\\n        --o4: 35 100% 77%;\\n        --o5: 37 100% 86%;\\n        --o6: 39 100% 94%;\\n\\n        /* Error Color */\\n        --r1: 0 86% 63%;\\n        --r2: 2 87% 71%;\\n        --r3: 4 66% 52%;\\n        --r4: 6 86% 78%;\\n        --r5: 8 86% 89%;\\n        --r6: 10 89% 96%;\\n\\n        --chart-1: 12 76% 61%;\\n        --chart-2: 173 58% 39%;\\n        --chart-3: 197 37% 24%;\\n        --chart-4: 43 74% 66%;\\n        --chart-5: 27 87% 67%;\\n        --sidebar-background: 215 100% 95%;\\n        --sidebar-foreground: 240 5.3% 26.1%;\\n        --sidebar-primary: 240 5.9% 10%;\\n        --sidebar-primary-foreground: 0 0% 98%;\\n        --sidebar-accent: 0 0% 100%;\\n        --sidebar-accent-foreground: 240 10% 14%;\\n        --sidebar-border: 220 13% 91%;\\n        --sidebar-ring: 217.2 91.2% 59.8%;\\n    }\\n\\n    .theme-dark {\\n        --background: 240 100% 1.96%;\\n        --foreground: 213 31% 91%;\\n\\n        --muted: 240 3.7% 15.9%;\\n        --muted-foreground: 240 3% 38%;\\n        --accent: 240 5% 26%;\\n        --accent-foreground: 240 5% 26%;\\n\\n        /* --muted: 223 47% 11%;\\n    --muted-foreground: 240 3% 94%;\\n\\n    --accent: 216 34% 17%;\\n    --accent-foreground: 210 40% 98%; */\\n\\n        --popover: 240 5% 26%;\\n        --popover-foreground: 215 20.2% 65.1%;\\n\\n        --border-dark: 240 5% 26%;\\n        --input: 240 5% 26%;\\n\\n        --card: 0 0% 0%;\\n        --card-foreground: 213 31% 91%;\\n\\n        --primary: 223, 100%, 69%;\\n        --primary-foreground: 222.2 47.4% 1.2%;\\n\\n        --secondary: 222.2 47.4% 11.2%;\\n        --secondary-foreground: 210 40% 98%;\\n\\n        --destructive: 0 86% 63%;\\n        --destructive-foreground: 210 40% 98%;\\n\\n        --ring: 216 34% 17%;\\n\\n        --radius: 0.5rem;\\n\\n        --table-header-background-dark: 240 5% 26%;\\n\\n        /* Primary Color */\\n        --b1: 223 100% 90%;\\n        --b2: 223 100% 79%;\\n        --b3: 223 100% 69%;\\n        --b4: 223 98% 58%;\\n        --b5: 223 71% 44%;\\n        --b6: 222 72% 29%;\\n        --b7: 221 73% 15%;\\n        --b8: 226 33% 18%;\\n\\n        /* 中性色板 (Neutral color) */\\n        --n1: 0 0% 100%;\\n        --n2: 240 3% 94%;\\n        --n3: 240 2% 75%;\\n        --n4: 240 2% 63%;\\n        --n5: 240 2% 51%;\\n        --n6: 240 3% 38%;\\n        --n7: 240 5% 26%;\\n        --n8: 240 10% 14%;\\n        --n9: 240 100% 2%;\\n\\n        /* Success Color */\\n        --g1: 132 70% 45%;\\n        --g2: 134 100% 35%;\\n        --g3: 136 82% 26%;\\n        --g4: 138 65% 22%;\\n        --g5: 143 42% 17%;\\n        --g6: 158 21% 15%;\\n\\n        /* Warning Color */\\n        --o1: 31 100% 59%;\\n        --o2: 29 100% 50%;\\n        --o3: 29 83% 35%;\\n        --o4: 28 68% 28%;\\n        --o5: 26 43% 21%;\\n        --o6: 17 15% 18%;\\n\\n        /* Error Color */\\n        --r1: 2 87% 71%;\\n        --r2: 0 86% 63%;\\n        --r3: 358 45% 43%;\\n        --r4: 356 39% 33%;\\n        --r5: 351 28% 22%;\\n        --r6: 330 13% 18%;\\n\\n        --chart-1: 220 70% 50%;\\n        --chart-2: 160 60% 45%;\\n        --chart-3: 30 80% 55%;\\n        --chart-4: 280 65% 60%;\\n        --chart-5: 340 75% 55%;\\n        --sidebar-background: 255 5.9% 10%;\\n        --sidebar-foreground: 240 4.8% 95.9%;\\n        --sidebar-primary: 224.3 76.3% 48%;\\n        --sidebar-primary-foreground: 0 0% 100%;\\n        --sidebar-accent: 240 5% 26%;\\n        --sidebar-accent-foreground: 240 3% 94%;\\n        --sidebar-border: 240 3.7% 15.9%;\\n        --sidebar-ring: 217.2 91.2% 59.8%;\\n    }\\n}\\n\\n@layer base {\\n    * {\\n        @apply border-border;\\n    }\\n\\n    input {\\n        @apply border-input;\\n    }\\n\\n    input:focus-visible,\\n    select:focus-visible,\\n    button:focus-visible {\\n        @apply focus-visible:ring-0 focus-visible:ring-offset-0;\\n    }\\n\\n    button:focus {\\n        @apply focus:ring-0 focus:ring-offset-0;\\n    }\\n\\n    html {\\n        font-size: 16px;\\n    }\\n    body {\\n        @apply bg-background text-foreground;\\n        font-feature-settings:\\n            'rlig' 1,\\n            'calt' 1;\\n    }\\n\\n    input:-webkit-autofill,\\n    input:-webkit-autofill:hover,\\n    input:-webkit-autofill:focus,\\n    input:-webkit-autofill:active {\\n        box-shadow: 0 0 0px 1000px hsl(0 0% 100%) inset !important;\\n        -webkit-text-fill-color: #000 !important;\\n    }\\n\\n    .dark {\\n        input:-webkit-autofill,\\n        input:-webkit-autofill:hover,\\n        input:-webkit-autofill:focus,\\n        input:-webkit-autofill:active {\\n            box-shadow: 0 0 0px 1000px hsl(240 10% 14%) inset !important;\\n            -webkit-text-fill-color: #efeff0 !important;\\n        }\\n    }\\n}\\n\\n@layer components {\\n    .icon-hover-close {\\n        @apply dark:hover:bg-n7/80 hover:bg-b2/80 hover:text-n2 hover:p-[2px] rounded p-[2px];\\n    }\\n\\n    .icon-hover {\\n        @apply hover:bg-n6/40 hover:text-n2 hover:p-1 rounded p-1;\\n    }\\n}\\n\\n.ant-menu-submenu-popup {\\n    display: none !important;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export const testIds = {\n  appConfig: {\n    apiKey: 'data-testid ac-api-key',\n    apiUrl: 'data-testid ac-api-url',\n    submit: 'data-testid ac-submit-form',\n  },\n  pageOne: {\n    container: 'data-testid pg-one-container',\n    navigateToFour: 'data-testid navigate-to-four',\n  },\n  pageTwo: {\n    container: 'data-testid pg-two-container',\n  },\n  pageThree: {\n    container: 'data-testid pg-three-container',\n  },\n  pageFour: {\n    container: 'data-testid pg-four-container',\n    navigateBack: 'data-testid navigate-back',\n  },\n};\n","import { css } from '@emotion/css';\nimport styled from '@emotion/styled';\n\nexport const DiscoverHeaderSearch = styled.div`\n    flex: 2;\n    display: flex;\n    border-radius: 6px;\n    align-items: center;\n    margin-right: 8px;\n    .ant-select-open {\n        .ant-select-arrow {\n            .anticon {\n                transform: rotate(-180deg);\n            }\n        }\n    }\n    .select-database {\n        width: 160px;\n        overflow: hidden;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n    .ant-select-single {\n        height: 30px;\n    }\n`;\n\nexport const DiscoverHeaderTimeSelect = styled.div`\n    flex: 1;\n    display: flex;\n    border-radius: 6px;\n    align-items: center;\n    margin-right: 8px;\n\n    div.trp-time-label {\n        border: 0px;\n    }\n`;\n\nexport const CascaderStyle = css`\n    width: 184px;\n    .ant-select-selector {\n        padding: 0 16px 0 40px !important;\n    }\n    .ant-select-selection-placeholder,\n    .ant-select-selection-item {\n        margin-top: 2px;\n    }\n    .ant-select-selector>.ant-select-selection-search>.ant-select-selection-search-input {\n        margin-left: 1.8rem;\n    }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport React from 'react';\nimport { currentIndexAtom, disabledOptionsAtom, indexesAtom, searchTypeAtom, searchValueAtom, selectedIndexesAtom } from 'store/discover';\nimport { useTheme2, ActionMeta, Icon, MultiSelect, RadioButtonGroup, Toggletip } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { SelectableValue } from '@grafana/data';\n\nexport default function SearchType() {\n    const { t } = useTranslation();\n    const [searchType, setSearchType] = useAtom(searchTypeAtom);\n    const setSearchValue = useSetAtom(searchValueAtom);\n    const disabledOptions = useAtomValue(disabledOptionsAtom);\n    const indexes = useAtomValue(indexesAtom);\n    const setSelectedIndexes = useSetAtom(selectedIndexesAtom);\n    const [currentIndex, setCurrentIndex] = useAtom(currentIndexAtom);\n    const searchMode = searchType === 'Search';\n    const theme = useTheme2();\n    const options = [\n        {\n            label: t`Search`,\n            value: 'Search',\n            disabled: indexes.length === 0,\n            tips: t`Discover.SearchType.Search.DisabledText`,\n        },\n        { label: 'SQL', value: 'SQL' },\n    ];\n\n    function DropdownQueryType() {\n        return (\n            <div className=\"w-[232px]\">\n                <RadioButtonGroup\n                    options={options}\n                    disabledOptions={disabledOptions}\n                    value={searchType}\n                    onChange={val => {\n                        setSearchType(val as 'Search' | 'SQL');\n                        setSearchValue('');\n                    }}\n                />\n                {indexes && searchMode ? (\n                    <div className=\"mt-4\">\n                        <MultiSelect\n                            options={indexes.filter((item: any) => item.type === 'INVERTED')}\n                            value={currentIndex}\n                            onChange={(item: Array<SelectableValue<any>>, actionMeta: ActionMeta) => {\n                                const selectedIndexes: any[] = [];\n                                item.forEach(selectedValue => {\n                                    indexes.forEach((item: any) => {\n                                        if (item.value === selectedValue) {\n                                            selectedIndexes.push(item);\n                                        }\n                                    });\n                                });\n                                setSelectedIndexes(selectedIndexes);\n                                setCurrentIndex(item as any);\n                            }}\n                        />\n                    </div>\n                ) : (\n                    <></>\n                )}\n            </div>\n        );\n    }\n    return (\n        <>\n            <Toggletip title={<p>有倒排索引的表支持搜索模式</p>} closeButton={false} content={<DropdownQueryType />} placement=\"bottom\">\n                <div\n                    className={css`\n                        cursor: pointer;\n                        border: 1px solid rgba(204, 204, 220, 0.2);\n                        width: 80px;\n                        height: 32px;\n                        line-height: 32px;\n                        background-color: ${theme.isDark ? 'rgb(17, 18, 23)' : '#FFF'};\n                        padding-left: 8px;\n                        border-radius: 2px;\n                        display: flex;\n                        justify-content: space-between;\n                    `}\n                >\n                    <span >{searchMode ? 'Search' : `SQL`}</span>\n                    <span style={{ marginRight: 6 }}>\n                        <Icon name=\"angle-down\" />\n                    </span>\n                </div>\n            </Toggletip>\n        </>\n    );\n}\n","import React, { useRef, useState, CSSProperties } from 'react';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\n// import { useTranslation } from 'react-i18next';\n// import { SQL_OPERATORS } from 'utils/data';\n// import { cn } from 'utils/tailwind';\nimport {\n  searchTypeAtom,\n  searchFocusAtom,\n  tableFieldsAtom,\n  searchValueAtom,\n  currentTimeFieldAtom,\n} from 'store/discover';\nimport { Input } from '@grafana/ui';\n// import { CodeEditor, CodeEditorSuggestionItem, ReactMonacoEditor } from '@grafana/ui';\n\nfunction getWordPosLR(str: string, currentPos: number) {\n  let posR = currentPos;\n  let posL = currentPos;\n  while (posR < str.length && str.charAt(posR) !== ' ') {\n    posR++;\n  }\n  while (posL >= 0 && str.charAt(posL) !== ' ') {\n    posL--;\n  }\n\n  return [posL, posR];\n}\n\nexport default function SQLSearch({ style, onQuerying }: { style?: CSSProperties; onQuerying: () => void }) {\n  const searchType = useAtomValue(searchTypeAtom);\n  const setSearchFocus = useSetAtom(searchFocusAtom);\n  const [tableFields, setTableFields] = useAtom(tableFieldsAtom);\n  const [searchValue, setSearchValue] = useAtom(searchValueAtom);\n  const currentTimeField = useAtomValue(currentTimeFieldAtom);\n  if (process.env.NODE_ENV !== 'production') {\n    searchValueAtom.debugLabel = 'searchValue';\n  }\n  // const [options, setOptions] = useState<Array<{ value: string; label: string }>>([]);\n  // const inputRef = useRef<any>(null);\n\n  // let disableEnter = false;\n\n  //   const getSuggestions = (): CodeEditorSuggestionItem[] => {\n  //     return [];\n  //   };\n\n  return (\n    <Input\n      value={searchValue}\n      onChange={(e: any) => {\n        console.log(e);\n        setSearchValue(e.target?.value);\n      }}\n      placeholder={\n        searchType === 'SQL' ? \"SQL WHERE. e.g.(event_type = 'ForkApplyEvent AND action = 'none')\" : 'Keyword'\n      }\n    />\n    // <CodeEditor language=\"mysql\" value={searchValue} height={28} width={600} getSuggestions={getSuggestions} showMiniMap={false} showLineNumbers={false} />\n    // <AutoComplete\n    //     className=\"h-8\"\n    //     popupClassName={cn(AutoCompletePopupStyle)}\n    //     options={\n    //         searchType === 'SQL'\n    //             ? options.length > 0\n    //                 ? options\n    //                 : [\n    //                       ...tableFields.map((e: any) => {\n    //                           return { label: e.Field, value: e.Field };\n    //                       }),\n    //                       ...SQL_OPERATORS.map(e => {\n    //                           return { label: e, value: e };\n    //                       }),\n    //                   ]\n    //             : []\n    //     }\n    //     onSelect={value => {\n    //         disableEnter = true;\n    //         const pos = inputRef.current?.input?.selectionStart;\n    //         if (pos !== null && pos !== undefined) {\n    //             const [posL, posR] = getWordPosLR(searchValue, pos - 1);\n    //             let res = '';\n    //             if (posL !== -1) {res += searchValue.substring(0, posL) + ' ';}\n    //             res += value;\n    //             if (posR !== searchValue.length) {res += ' ' + searchValue.substring(posR + 1);}\n    //             setSearchValue(res);\n    //         } else {\n    //             setSearchValue(searchValue + value);\n    //         }\n    //     }}\n    //     value={searchValue}\n    //     onChange={e => {\n    //         setSearchValue(e);\n    //     }}\n    //     onKeyDown={e => {\n    //         if (e.key === 'Enter' && !e.nativeEvent.isComposing && !disableEnter) {\n    //             if (currentTimeField) {\n    //                 onQuerying();\n    //             } else {\n    //                 message.warning(t`Discover.SQLSearch.NoTimeField.Tips`);\n    //             }\n    //         }\n    //     }}\n    //     filterOption={(inputValue, option) => {\n    //         const pos = inputRef.current?.input?.selectionStart;\n    //         if (pos !== null && pos !== undefined) {\n    //             const [posL, posR] = getWordPosLR(searchValue, pos - 1);\n    //             const str = inputValue.substring(posL + 1, posR);\n    //             return option?.value.toUpperCase().indexOf(str.toUpperCase()) !== -1;\n    //         }\n    //         const inputArr = inputValue.split(' ');\n    //         const value = inputArr[inputArr.length - 1];\n    //         return option?.value.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n    //     }}\n    //     style={style}\n    // >\n    //     <Input\n    //         onBlur={() => setSearchFocus(false)}\n    //         onFocus={() => setSearchFocus(true)}\n    //         className=\"-mt-[2px] h-[32px] border-none hover:placeholder:text-n1 focus:placeholder:text-n6\"\n    //         ref={inputRef}\n    //         placeholder={searchType === 'SQL' ? \"SQL WHERE. e.g.(event_type = 'ForkApplyEvent AND action = 'none')\" : 'Keyword'}\n    //     />\n    // </AutoComplete>\n  );\n}\n","'use client';\nimport React, { PropsWithChildren, use, useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { DiscoverHeaderSearch } from './discover-header.style';\nimport SearchType from './search-type';\nimport SQLSearch from './sql-search';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport { DataSourcePicker, getDataSourceSrv } from '@grafana/runtime';\nimport { css } from '@emotion/css';\nimport {\n    indexesAtom,\n    selectedIndexesAtom,\n    searchTypeAtom,\n    discoverCurrentAtom,\n    locationAtom,\n    currentClusterAtom,\n    tableFieldsAtom,\n    timeFieldsAtom,\n    currentDateAtom,\n    currentTimeFieldAtom,\n    currentIndexAtom,\n    searchFocusAtom,\n    activeShortcutAtom,\n    datasourcesAtom,\n    selectedDatasourceAtom,\n    timeRangeAtom,\n    databasesAtom,\n    tablesAtom,\n    currentTableAtom,\n    disabledOptionsAtom,\n} from 'store/discover';\nimport { getLatestTime, isValidTimeFieldType } from 'utils/data';\nimport { Select, Field, Button, useTheme2, TimeRangeInput } from '@grafana/ui';\nimport { FORMAT_DATE } from '../../constants';\nimport { getDatabases, getFieldsService, getIndexesService, getTables } from 'services/metaservice';\n\nexport default function DiscoverHeader(\n    props: PropsWithChildren & {\n        onQuerying: () => void;\n        loading: boolean;\n    },\n) {\n    const catalog = 'internal';\n    // const catalogs = useAtomValue(catalogAtom);\n    const setIndexes = useSetAtom(indexesAtom);\n    const setSearchType = useSetAtom(searchTypeAtom);\n    const [discoverCurrent, setDiscoverCurrent] = useAtom(discoverCurrentAtom);\n    if (process.env.NODE_ENV !== 'production') {\n        discoverCurrentAtom.debugLabel = 'current';\n    }\n    const [loc, setLoc] = useAtom(locationAtom);\n    const [currentCluster, setCurrentCluster] = useAtom(currentClusterAtom);\n    const setTableFields = useSetAtom(tableFieldsAtom);\n    const [timeFields, setTimeFields] = useAtom(timeFieldsAtom);\n    const [currentDate, setCurrentDate] = useAtom(currentDateAtom);\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const [currentIndex, setCurrentIndex] = useAtom(currentIndexAtom);\n    const searchFocus = useAtomValue(searchFocusAtom);\n    // const { databaseList } = useDatabaseList();\n    const [activeItem, setActiveItem] = useAtom(activeShortcutAtom);\n    // const [clusters, setClusters] = useState<any[]>([]);\n    // const database = loc.searchParams?.get('database');\n    // const table = loc.searchParams?.get('table');\n    // const cluster = loc.searchParams?.get('cluster');\n    // const startTime = loc.searchParams?.get('startTime');\n    // const endTime = loc.searchParams?.get('endTime');\n    const [selectedDatasource, setSelectedDatasource] = useAtom(selectedDatasourceAtom);\n    const [timeRange, setTimeRange] = useAtom(timeRangeAtom);\n    const [currentTable, setCurrentTable] = useAtom(currentTableAtom);\n    const [databases, setDatabases] = useAtom(databasesAtom);\n    const [tables, setTables] = useAtom(tablesAtom);\n    const [datasources, setDataSource] = useAtom(datasourcesAtom);\n    const setDisabledOptions = useSetAtom(disabledOptionsAtom);\n    const searchType = useAtomValue(searchTypeAtom);\n    const searchMode = searchType === 'Search';\n\n    const selectdbDS = useAtomValue(selectedDatasourceAtom);\n\n    useEffect(() => {\n        const datasources = getDataSourceSrv().getList();\n        setDataSource(datasources);\n    }, [setDataSource]);\n\n    useEffect(() => {\n        if (currentIndex.length > 0) {\n            setDisabledOptions([]);\n        } else {\n            setDisabledOptions(['Search']);\n        }\n    }, [currentIndex, setDisabledOptions]);\n\n    const theme = useTheme2();\n\n    useEffect(() => {\n        if (selectdbDS) {\n            const res = getDatabases(selectdbDS);\n            res.subscribe({\n                next: ({ data, ok }: any) => {\n                    if (ok) {\n                        const value = data?.results[0]?.data?.values[0];\n\n                        if (value) {\n                            const options = value.map((item: any) => {\n                                return {\n                                    label: item,\n                                    value: item,\n                                };\n                            });\n                            setDatabases(options);\n                        }\n                    }\n                },\n                error: err => {\n                    console.log('查询错误', err);\n                },\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectdbDS]);\n\n    // useEffect(() => {\n    //     if (startTime && endTime) {\n    //         setCurrentDate([dayjs(startTime), dayjs(endTime)]);\n    //     }\n    // }, [startTime, endTime, setCurrentDate]);\n\n    function getFields(selectedTable: any) {\n        getFieldsService({\n            selectdbDS,\n            database: discoverCurrent.database,\n            table: selectedTable.value,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const value = data?.results[0]?.data?.values[0];\n                    const fieldTypes = data?.results[0]?.data?.values[1];\n\n                    const tableFields = data?.results[0]?.data?.values[0].map((item: any, index: number) => {\n                        return {\n                            label: item,\n                            Field: item,\n                            value: item,\n                            Type: fieldTypes[index],\n                        };\n                    });\n\n                    setTableFields(tableFields);\n\n                    if (value) {\n                        const options = value\n                            .filter((field: any, index: number) => {\n                                return isValidTimeFieldType(fieldTypes[index].toUpperCase());\n                            })\n                            .map((item: any) => {\n                                return {\n                                    label: item,\n                                    value: item,\n                                };\n                            });\n                        setDiscoverCurrent({\n                            ...discoverCurrent,\n                            timeField: options[0]?.value || '',\n                        });\n                        setTimeFields(options);\n                    }\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    function getIndexes(selectedTable: any) {\n        getIndexesService({\n            selectdbDS,\n            database: discoverCurrent.database,\n            table: selectedTable.value,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const value = data?.results[0]?.data?.values[2];\n                    const columnNames = data?.results[0]?.data?.values[4];\n                    const indexesTypes = data?.results[0]?.data?.values[10];\n\n                    if (!value || value.length === 0) {\n                        setIndexes([]);\n                        setCurrentIndex([]);\n                        return;\n                    }\n\n                    const tableIndexes = value?.map((item: any, index: number) => {\n                        return {\n                            label: item,\n                            value: item,\n                            type: indexesTypes[index],\n                            columnName: columnNames[index],\n                        };\n                    });\n\n                    setIndexes(tableIndexes);\n\n                    if (tableIndexes) {\n                        setCurrentIndex(tableIndexes);\n                    }\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    return (\n        <div\n            className={css`\n                padding: 1rem;\n                padding-top: 1.5rem;\n                background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                display: flex;\n                border-radius: 0.25rem 0.25rem 0 0;\n            `}\n        >\n            <DiscoverHeaderSearch className=\"h-8 rounded border border-solid border-n9 dark:border-n7\">\n                <Field label=\"Datasource\">\n                    {/* filter 这个版本无效 */}\n                    <DataSourcePicker\n                       width={20}\n                        type={'mysql'}\n                        current={selectedDatasource}\n                        placeholder='Choose'\n                        noDefault\n                        filter={ds => ds.type === 'mysql'}\n                        onChange={item => {\n                            console.log('item', item);\n                            setSelectedDatasource(item);\n                        }}\n                    />\n                </Field>\n                {/* 需要从数据源中获取库表信息 */}\n                <Field label=\"Database\" style={{ marginLeft: 8 }}>\n                    <Select\n                        width={15}\n                        options={databases}\n                        value={discoverCurrent.database}\n                        onChange={(selectedDatabase: any) => {\n                            setDiscoverCurrent({\n                                ...discoverCurrent,\n                                database: selectedDatabase.value,\n                            });\n                            getTables({\n                                selectdbDS,\n                                database: selectedDatabase.value,\n                            }).subscribe({\n                                next: ({ data, ok }: any) => {\n                                    if (ok) {\n                                        const value = data?.results[0]?.data?.values[0];\n\n                                        if (value) {\n                                            const options = value.map((item: any) => {\n                                                return {\n                                                    label: item,\n                                                    value: item,\n                                                };\n                                            });\n                                            setTables(options);\n                                        }\n                                    }\n                                },\n                                error: (err: any) => {\n                                    console.log('查询错误', err);\n                                },\n                            });\n                        }}\n                    ></Select>\n                </Field>\n\n                <Field label=\"Table\" style={{ marginLeft: 8 }}>\n                    <Select\n                        options={tables}\n                        width={15}\n                        value={currentTable}\n                        onChange={(selectedTable: any) => {\n                            setDiscoverCurrent({\n                                ...discoverCurrent,\n                                table: selectedTable.value,\n                            });\n                            setCurrentTable(selectedTable.value);\n                            getFields(selectedTable);\n                            getIndexes(selectedTable);\n                        }}\n                    />\n                </Field>\n                <Field label=\"Mode\" style={{ marginLeft: 8, marginRight: 8, width: '120px' }}>\n                    <SearchType />\n                </Field>\n                <Field label={searchMode ? 'Search' : 'SQL'} style={{ width: '100%' }}>\n                    <SQLSearch\n                        style={{ flex: '1' }}\n                        onQuerying={() => {\n                            props?.onQuerying();\n                        }}\n                    />\n                </Field>\n            </DiscoverHeaderSearch>\n            {!searchFocus && (\n                <>\n                    <Field label=\"时间字段\">\n                        <Select\n                            value={currentTimeField}\n                            options={timeFields}\n                            onChange={(selectdbTimeFiled: any) => {\n                                setDiscoverCurrent({\n                                    ...discoverCurrent,\n                                    timeField: selectdbTimeFiled.value,\n                                });\n                                setLoc((prev: any) => {\n                                    const searchParams = prev.searchParams;\n                                    searchParams?.set('timeField', selectdbTimeFiled.value);\n                                    return {\n                                        ...prev,\n                                        searchParams,\n                                    };\n                                });\n                            }}\n                            placeholder={'时间字段'}\n                        />\n                    </Field>\n                    <Field label=\"时间范围\" style={{ marginLeft: 8, marginRight: 8 }}>\n                        <TimeRangeInput\n                            isReversed={false}\n                            onChange={timeRange => {\n                                const start = dayjs(timeRange.from.toDate());\n                                const end = dayjs(timeRange.to.toDate());\n                                setLoc(prev => {\n                                    const searchParams = prev.searchParams;\n                                    searchParams?.set('startTime', start.format(FORMAT_DATE));\n                                    searchParams?.set('endTime', end.format(FORMAT_DATE));\n                                    return {\n                                        ...prev,\n                                        searchParams,\n                                    };\n                                });\n                                setCurrentDate([start, end]);\n                                setTimeRange(timeRange);\n                            }}\n                            value={timeRange}\n                        />\n                    </Field>\n                </>\n            )}\n            <Field label=\"\">\n                <Button\n                    onClick={() => {\n                        const latestTime = getLatestTime(activeItem?.key as string);\n                        if (latestTime) {\n                            const [latestStartTime, latestEndTime] = latestTime;\n                            setLoc(prev => {\n                                const searchParams = prev.searchParams;\n                                searchParams?.set('startTime', dayjs(latestStartTime).format(FORMAT_DATE));\n                                searchParams?.set('endTime', dayjs(latestEndTime).format(FORMAT_DATE));\n                                return {\n                                    ...prev,\n                                    searchParams,\n                                };\n                            });\n                        }\n                        props?.onQuerying();\n                    }}\n                    variant=\"primary\"\n                    className=\"h-8\"\n                    icon={props?.loading ? \"fa fa-spinner\" : 'sync'}\n                    disabled={!currentTimeField}\n                >\n                    {`Query`}\n                </Button>\n            </Field>\n        </div>\n    );\n}\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./tailwind.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./tailwind.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { css } from '@emotion/css';\nimport styled from '@emotion/styled';\n\nexport const DiscoverFilterWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    .filter {\n        align-self: flex-start;\n        margin-top: 3px;\n        margin-right: 8px;\n        font-weight: 500;\n        font-size: 14px;\n        font-style: normal;\n        line-height: 18px;\n    }\n    .filter-tag {\n        display: flex;\n        flex: 1;\n        flex-wrap: wrap;\n        align-items: center;\n        row-gap: 8px;\n        column-gap: 8px;\n        padding: 0 8px;\n        .tag {\n            display: flex;\n            align-items: center;\n            max-width: 400px;\n            height: 24px;\n            padding: 2px 8px;\n            font-weight: 400;\n            font-size: 12px;\n            font-style: normal;\n            line-height: 18px;\n            border: 0px;\n            border-radius: 6px;\n            .text {\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n            }\n        }\n    }\n`;\n\nexport const containerStyle = css`\n    width: 320px;\n`;\n\nexport const rowStyle = css`\n    display: flex;\n    gap: 8px;\n    margin-bottom: 12px;\n`;\n\nexport const colStyle = css`\n    flex: 1;\n`;\n\nexport const footerStyle = css`\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    margin-top: 16px;\n\n    & button {\n        flex: 1;\n        display: block;\n        text-align: center;\n        \n        span {\n            display: inline;\n        }\n    }\n`;\n","import { useAtom, useAtomValue } from 'jotai';\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Select, InlineField, InlineFieldRow, InlineSwitch, Button, Input, Field } from '@grafana/ui';\nimport { tableFieldsAtom, dataFilterAtom, tableFieldValuesAtom } from 'store/discover';\nimport { DataFilterType, Operator } from 'types/type';\nimport { OPERATORS } from 'utils/data';\nimport { Controller, useForm } from 'react-hook-form';\nimport { containerStyle, rowStyle, colStyle, footerStyle } from './discover-filter.style';\n\nexport function FilterContent({ onHide, dataFilterValue }: { onHide: () => void; dataFilterValue?: DataFilterType }) {\n    const tableFields = useAtomValue(tableFieldsAtom);\n    const [dataFilter, setDataFilter] = useAtom(dataFilterAtom);\n    const tableFieldValue = useAtomValue(tableFieldValuesAtom);\n\n    const {\n        control,\n        handleSubmit,\n        watch,\n        register,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            field: {\n                label: dataFilterValue?.fieldName,\n                value: dataFilterValue?.fieldName\n            },\n            operator: {\n                label: dataFilterValue?.operator,\n                value: dataFilterValue?.operator\n            },\n            value: dataFilterValue?.value,\n            minValue: Array.isArray(dataFilterValue?.value) ? dataFilterValue?.value[0] : '',\n            maxValue: Array.isArray(dataFilterValue?.value) ? dataFilterValue?.value[1] : '',\n            label: dataFilterValue?.label || '',\n            showLabel: !!dataFilterValue?.label, // Initialize based on dataFilterValue\n        },\n    });\n\n    const field: any = watch('field');\n    const operator: any = watch('operator');\n    const showLabel: any = watch('showLabel');\n\n    const getValue = (value: string): string | number => (isNaN(+value) ? value : +value);\n\n    const onSubmit = (formValues: any) => {\n        const { field, operator, value, minValue, maxValue, label } = formValues;\n        const current = dataFilter.find(f => f.id === dataFilterValue?.id);\n        const id = dataFilterValue?.id || nanoid();\n\n        let newValue: any[] = [];\n\n        if (operator.value === 'between' || operator.value === 'not between') {\n            if (minValue && maxValue) {\n                newValue = [getValue(minValue), getValue(maxValue)];\n            }\n        } else if (value || typeof value === 'number') {\n            newValue = [value];\n        }\n\n        const newItem = {\n            id,\n            fieldName: field.value,\n            operator: operator.value,\n            label,\n            value: newValue,\n        };\n\n        if (current) {\n            const updated = dataFilter.map(f => (f.id === id ? newItem : f));\n            setDataFilter(updated);\n        } else {\n            setDataFilter([...dataFilter, newItem]);\n        }\n\n        onHide();\n    };\n\n    function renderFiledComponent() {\n        // const currentField = field.value;\n        // console.log(operator);\n        console.log(operator);\n        const currentOperator = (typeof operator === 'string' ? operator : operator?.value) as Operator | undefined;\n        if (currentOperator && currentOperator !== 'is null' && currentOperator !== 'is not null' && (currentOperator === 'between' || currentOperator === 'not between')) {\n            return (\n                <div className={rowStyle}>\n                    <div className={colStyle}>\n                        <Field label=\"最小值\" invalid={!!errors.minValue} error={errors.minValue?.message}>\n                            <Input {...register('minValue', { required: '请输入最小值' })} />\n                        </Field>\n                    </div>\n                    <div className={colStyle}>\n                        <Field label=\"最大值\" invalid={!!errors.maxValue} error={errors.maxValue?.message}>\n                            <Input {...register('maxValue', { required: '请输入最大值' })} />\n                        </Field>\n                    </div>\n                </div>\n            );\n        }\n        console.log('currentOperator', currentOperator);\n        if (\n            currentOperator === '=' ||\n            currentOperator === '!=' ||\n            currentOperator === 'like' ||\n            currentOperator === 'not like' ||\n            currentOperator === 'match_all' ||\n            currentOperator === 'match_any' ||\n            currentOperator === 'match_phrase'\n        ) {\n            return (\n                <>\n                    <Field label=\"值\" invalid={!!errors.value} error={errors.value?.message}>\n                        <Input {...register('value', { required: '请输入值' })} list=\"field-value-list\" />\n                    </Field>\n                    <datalist id=\"field-value-list\">\n                        {tableFieldValue.map((item, idx) => (\n                            <option key={idx} value={item.value} />\n                        ))}\n                    </datalist>\n                </>\n            );\n        }\n        if (currentOperator === 'in' || currentOperator === 'not in') {\n            return (\n                <Field label=\"值\" invalid={!!errors.value} error={errors.value?.message}>\n                    <Controller\n                        name=\"value\"\n                        control={control}\n                        rules={{ required: '请输入值' }}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                isMulti={true}\n                                options={tableFieldValue.map(item => ({\n                                    label: item.value,\n                                    value: item.value,\n                                }))}\n                                placeholder=\"请选择值\"\n                                onChange={selected => field.onChange(selected ? selected.map((s: any) => s.value) : [])}\n                                value={tableFieldValue\n                                    .filter(item => Array.isArray(field.value) && field.value.includes(item.value))\n                                    .map(item => ({\n                                        label: item.value,\n                                        value: item.value,\n                                    }))}\n                            />\n                        )}\n                    />\n                </Field>\n            );\n        }\n        return <></>;\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={containerStyle}>\n            <div className={rowStyle}>\n                <div className={colStyle}>\n                    <Field label=\"列名\" invalid={!!errors.field} error={errors.field?.message}>\n                        <Controller\n                            name=\"field\"\n                            control={control}\n                            rules={{ required: '请选择字段' }}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    options={tableFields.map(f => ({\n                                        label: f.Field,\n                                        value: f.Field,\n                                    }))}\n                                />\n                            )}\n                        />\n                    </Field>\n                </div>\n                <div className={colStyle}>\n                    <Field label=\"条件\" invalid={!!errors.operator} error={errors.operator?.message}>\n                        <Controller\n                            name=\"operator\"\n                            control={control}\n                            rules={{ required: '请选择操作符' }}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    options={OPERATORS.map(op => ({\n                                        label: op,\n                                        value: op,\n                                    }))}\n                                />\n                            )}\n                        />\n                    </Field>\n                </div>\n            </div>\n\n            {renderFiledComponent()}\n\n            <InlineFieldRow>\n                <InlineField label=\"Custom Label\">\n                    <Controller name=\"showLabel\" control={control} render={({ field }) => <InlineSwitch {...field} />}></Controller>\n                </InlineField>\n            </InlineFieldRow>\n\n            {showLabel && (\n                <Field invalid={!!errors.label} error={errors.label?.message}>\n                    <Input {...register('label', { required: 'Please enter label' })} />\n                </Field>\n            )}\n\n            <div className={footerStyle}>\n                <Button\n                    variant=\"secondary\"\n                    onClick={e => {\n                        e.preventDefault();\n                        onHide();\n                    }}\n                >\n                    取消\n                </Button>\n                <Button type=\"submit\">确定</Button>\n            </div>\n        </form>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport { DiscoverFilterWrapper } from './discover-filter.style';\nimport { useTranslation } from 'react-i18next';\nimport { useAtom } from 'jotai';\nimport { FilterContent } from './filter-content';\nimport { dataFilterAtom, locationAtom } from 'store/discover';\nimport { getFilterSQL } from 'utils/data';\nimport { css } from '@emotion/css';\nimport { Badge, Button, Icon, IconButton, Toggletip, useTheme2 } from '@grafana/ui';\n// import { set } from 'lodash-es';\n\nexport default function DiscoverFilter() {\n    const [dataFilter, setDataFilter] = useAtom(dataFilterAtom);\n    const [open, setOpen] = useState<boolean>(false);\n    const [dataFilterOpen, setDataFilterOpen] = useState<any>({});\n    const discoverFilterRef = useRef(null);\n    const { t } = useTranslation();\n    const [loc, setLoc] = useAtom(locationAtom);\n    const theme = useTheme2();\n\n    return (\n        //  className=\"mt-px rounded-b-sm bg-n8 p-4 pb-6\"\n        <DiscoverFilterWrapper\n            ref={discoverFilterRef}\n            className={css`\n                background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                padding: 1rem;\n                padding-bottom: 1.5rem;\n                margin-top: 1px;\n                border-radius: 0 0 0.25rem 0.25rem;\n            `}\n        >\n            <div className=\"text-xs font-medium\">{t`Filter`}</div>\n            <div className=\"filter-tag\">\n                {dataFilter.map((dataFilterValue, index) => {\n                    return (\n                        <div\n                            key={index.toString()}\n                            className={css`\n                                margin: '0 4px';\n                            `}\n                        >\n                            <Toggletip\n                                show={dataFilterOpen[dataFilterValue.id]}\n                                onOpen={() => {\n                                    setDataFilterOpen({\n                                        ...dataFilterOpen,\n                                        [dataFilterValue.id]: true,\n                                    });\n                                }}\n                                onClose={() => {\n                                    setDataFilterOpen({\n                                        ...dataFilterOpen,\n                                        [dataFilterValue.id]: false,\n                                    });\n                                }}\n                                closeButton={true}\n                                content={\n                                    <FilterContent\n                                        onHide={() => {\n                                            setDataFilterOpen({\n                                                ...dataFilterOpen,\n                                                [dataFilterValue.id]: false,\n                                            });\n                                        }}\n                                        dataFilterValue={dataFilterValue}\n                                    />\n                                }\n                                placement=\"bottom\"\n                            >\n                                <div>\n                                    <Badge\n                                        // className=\"mx-1 rounded px-2 py-[2px] text-xs leading-[18px] text-n3 first:ml-2 hover:border-b7 group-data-[state=open]:border-b7 dark:hover:border-b3 dark:group-data-[state=open]:border-b3\"\n                                        key={index}\n                                        text={\n                                            <div\n                                                className={css`\n                                                    display: flex;\n                                                    align-items: center;\n                                                    justify-content: space-between;\n                                                `}\n                                            >\n                                                <span>{dataFilterValue.label ? <span>{dataFilterValue.label}</span> : <span>{getFilterSQL(dataFilterValue)}</span>}</span>\n                                                <div\n                                                    className={css`\n                                                        margin-left: 0.5rem;\n                                                        cursor: pointer;\n                                                    `}\n                                                    onClick={() => {\n                                                        const data_filters = dataFilter.filter(e => e !== dataFilterValue);\n                                                        setDataFilter(data_filters);\n                                                        setLoc(prev => {\n                                                            const searchParams = prev.searchParams;\n                                                            searchParams?.set('data_filters', JSON.stringify(data_filters));\n                                                            return {\n                                                                ...prev,\n                                                                searchParams,\n                                                            };\n                                                        });\n                                                    }}\n                                                >\n                                                    <Icon name=\"times\" />\n                                                </div>\n                                            </div>\n                                        }\n                                        color=\"blue\"\n                                    ></Badge>\n                                </div>\n                            </Toggletip>\n                        </div>\n                    );\n                })}\n                <Toggletip\n                    show={open}\n                    closeButton={false}\n                    onOpen={() => {\n                        setOpen(true);\n                    }}\n                    content={\n                        <FilterContent\n                            onHide={() => {\n                                console.log('onHide');\n                                setOpen(false);\n                            }}\n                        />\n                    }\n                    placement=\"bottom\"\n                >\n                    <IconButton name=\"plus\" tooltip=\"Add filter\" style={{marginLeft: 10}} />\n                </Toggletip>\n            </div>\n        </DiscoverFilterWrapper>\n    );\n}\n","import { Icon } from \"@grafana/ui\";\nimport React from \"react\";\n\n// export function getFieldIcon(type: string) {\n//     if (type.toUpperCase().includes('STRING')) {\n//         return <Icon name=\"text-fields\" />;\n//     }\n//     if (type.toUpperCase().includes('NUMBER')) {\n//         return <Icon name=\"github\" />;\n//     }\n//     if (type.toUpperCase().includes('DATE')) {\n//         return <Icon name=\"calendar-alt\" />;\n//     } else {\n//         return <Icon name=\"brackets-curly\" />;\n//     }\n// }\n\n\nexport const FIELD_TYPES = [\n    {\n        key: 'STRING',\n        value: ['VARCHAR', 'STRING', 'CHAR', 'TEXT'],\n        icon: <Icon name=\"text-fields\" />\n    },\n    {\n        key: 'NUMBER',\n        value: ['INT', 'LARGEINT', 'SMALLINT', 'TINYINT', 'DECIMAL', 'BIGINT', 'FLOAT', 'DOUBLE'],\n        icon: <Icon name=\"percentage\" />,\n    },\n    {\n        key: 'DATE',\n        value: ['DATE', 'DATETIME', 'DATEV2', 'DATETIMEV2'],\n        icon: <Icon name=\"clock-nine\" />,\n    },\n    {\n        key: 'JSONB',\n        value: ['JSONB'],\n        icon: <Icon name=\"brackets-curly\" />,\n        complex: true,\n    },\n    {\n        key: 'ARRAY',\n        value: ['ARRAY'],\n        icon: <Icon name=\"list-ul\" />,\n        complex: true,\n    },\n    {\n        key: 'BOOLEAN',\n        value: ['BOOLEAN'],\n        icon: <Icon name=\"toggle-on\" />\n    },\n    {\n        key: 'BITMAP',\n        value: ['BITMAP'],\n        icon: <Icon name=\"building\" />,\n        complex: true,\n    },\n    {\n        key: 'HLL',\n        value: ['HLL'],\n        icon: <Icon name=\"draggabledots\" />,\n        complex: true,\n    },\n    {\n        key: 'VARIANT',\n        value: ['VARIANT'],\n        icon: <Icon name=\"brackets-curly\" />,\n        complex: true,\n    },\n    {\n        key: 'JSON',\n        value: ['JSON'],\n        icon: <Icon name=\"brackets-curly\" />,\n        complex: true,\n    },\n];\n\nexport const getFieldIcon = (columnType: string) => {\n    const currentColumnType = FIELD_TYPES.find(item => item.value.some(val => columnType.toLocaleUpperCase().includes(val)));\n    return currentColumnType?.icon;\n};\n","import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs));\n}","import { css } from '@emotion/css';\nimport { IconButton } from '@grafana/ui';\nimport { Progress } from 'antd';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { get } from 'lodash-es';\nimport { nanoid } from 'nanoid';\nimport React from 'react';\nimport { topDataAtom, tableTotalCountAtom, dataFilterAtom } from 'store/discover';\nimport { isComplexType } from 'utils/data';\ninterface JsonObject {\n    [key: string]: any;\n}\nfunction countValueDistribution(jsonArray: JsonObject[], key: string): { [value: string]: number } {\n    const valueCountMap = new Map<string, number>();\n\n    jsonArray.forEach(obj => {\n        let value = get(obj, key);\n        if (value === undefined) {\n            value = '';\n        }\n        valueCountMap.set(value, (valueCountMap.get(value) || 0) + 1);\n    });\n\n    const result: { [value: string]: number } = {};\n    valueCountMap.forEach((times, valueStr) => {\n        const value = valueStr;\n        result[value] = times;\n    });\n\n    return result;\n}\n\nexport function TopData({ field }: any) {\n    console.log(field);\n    const topData = useAtomValue(topDataAtom);\n    const tableTotalCount = useAtomValue(tableTotalCountAtom);\n    const [dataFilter, setDataFilter] = useAtom(dataFilterAtom);\n    const canDisplayTopData = field?.Type?.toUpperCase() !== 'VARIANT';\n    const res = Object.entries(countValueDistribution(topData, field.Field)).sort((a: any, b: any) => b[1].count - a[1].count);\n\n    return (\n        <div\n            className={css`\n                max-height: 400px;\n                overflow-y: auto;\n                padding: 8px;\n            `}\n        >\n            <div className=\"mb-2 mt-2 break-words text-xs text-n5\">\n                <span className=\"mr-2\">{field.Field}</span>\n                <span>({field.Type})</span>\n            </div>\n            <div\n                className={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                `}\n            >\n                <div\n                    className={css`\n                        font-size: 16px;\n                        margin: 8px 0;\n                    `}\n                >\n                    TOP5\n                </div>\n                <small className=\"text-n2\">{tableTotalCount >= 500 ? 500 : tableTotalCount} 条</small>\n            </div>\n            {canDisplayTopData ? (\n                <div className=\"mt-3 space-y-3 text-n5\">\n                    {res.map(\n                        ([value, count], index) =>\n                            index < 5 && (\n                                <div key={index} className=\"flex items-center justify-between\">\n                                    <div\n                                        className={css`\n                                            overflow: hidden;\n                                            text-overflow: ellipsis;\n                                            white-space: nowrap;\n                                        `}\n                                    >\n                                        <div\n                                            className={css`\n                                                display: flex;\n                                                align-items: center;\n                                                width: 180px;\n                                                justify-content: space-between;\n                                            `}\n                                        >\n                                            <div\n                                                className={css`\n                                                    flex: 1 1 0%;\n                                                    overflow: hidden;\n                                                    text-overflow: ellipsis;\n                                                    white-space: nowrap;\n                                                `}\n                                            >\n                                                {value}\n                                            </div>\n                                            <div\n                                                className={css`\n                                                    margin-left: 20px;\n                                                    flex-shrink: 0;\n                                                `}\n                                            >\n                                                {+((count * 100) / topData.length).toFixed(1)}%\n                                            </div>\n                                        </div>\n                                        <Progress\n                                            size={4}\n                                            className={css`\n                                                .ant-progress-outer {\n                                                    .ant-progress-inner {\n                                                        position: absolute;\n                                                        top: 0px;\n                                                    }\n                                                }\n                                            `}\n                                            style={{ width: '100%', height: '0px' }}\n                                            percent={+((count * 100) / topData.length).toFixed(1)}\n                                            status=\"normal\"\n                                            showInfo={false}\n                                        />\n                                    </div>\n                                    {!isComplexType(field.Type) && (\n                                        <div\n                                            className={css`\n                                                margin-left: 30px;\n                                            `}\n                                        >\n                                            <IconButton\n                                                name=\"plus-circle\"\n                                                onClick={e => {\n                                                    console.log(value);\n                                                    setDataFilter([\n                                                        ...dataFilter,\n                                                        {\n                                                            fieldName: field.Field,\n                                                            operator: '=',\n                                                            value: [typeof value === 'string' ? value : +value],\n                                                            id: nanoid(),\n                                                        },\n                                                    ]);\n                                                    e.stopPropagation();\n                                                }}\n                                                tooltip=\"Equivalent filtration\"\n                                            />\n                                            <IconButton\n                                                name=\"minus-circle\"\n                                                style={{ marginLeft: '4px' }}\n                                                tooltip=\"Nonequivalent filtration\"\n                                                onClick={e => {\n                                                    setDataFilter([\n                                                        ...dataFilter,\n                                                        {\n                                                            fieldName: field.Field,\n                                                            operator: '!=',\n                                                            value: [typeof value ? value : +value],\n                                                            id: nanoid(),\n                                                        },\n                                                    ]);\n                                                    e.stopPropagation();\n                                                }}\n                                            />\n                                        </div>\n                                    )}\n                                </div>\n                            ),\n                    )}\n                </div>\n            ) : (\n                <div className=\"mt-2 text-xs text-n5\">Does not supported</div>\n            )}\n        </div>\n    );\n}\n","import React from 'react';\nimport { getFieldIcon } from 'utils/icon';\nimport { IconButton, Toggletip, useTheme2 } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { cn } from 'utils/tailwind';\nimport { TopData } from './top-data/top-data';\n\ninterface FieldItemProps {\n    field: any;\n    onAdd?: (field: any) => void;\n    onRemove?: (field: any) => void;\n    type: 'add' | 'remove';\n}\n\nexport default function FieldItem(props: FieldItemProps) {\n    const theme = useTheme2();\n    const { field } = props;\n    field.key = field.Field;\n    if (field.children) {\n        field.icon = <div className=\"w-4 text-sm leading-8 text-n4\">{}</div>;\n        return (\n            <div className=\"-ml-3 flex\">\n                Tree\n                {/* <Tree showIcon className={`${TreeStyle} ${DiscoverTreeStyle}`} treeData={[field]} switcherIcon={<SDIcon type=\"icon-arrow-down\" className=\"dark:text-n6\" />} /> */}\n            </div>\n        );\n    }\n    return (\n        <div>\n            <Toggletip placement='right' content={<TopData field={field} />}>\n                <div\n                    className={css`\n                        width: 100%;\n                        text-align: left;\n                        display: flex;\n                        align-items: center;\n                        justify-content: space-between;\n                        height: 32px;\n                        padding: 0 8px;\n                        cursor: pointer;\n                        &:hover .icon-wrapper {\n                            opacity: 1;\n                        }\n                        &:hover {\n                            background-color: ${theme.colors.background.secondary};\n                        }\n                    `}\n                >\n                    <div className=\"flex\">\n                        <div>{getFieldIcon(field['Type'])}</div>\n                        <div\n                            className={css`\n                                display: flex;\n                                margin-left: 4px;\n                                overflow: hidden;\n                                text-overflow: ellipsis;\n                                white-space: nowrap;\n                                max-width: 130px;\n                            `}\n                        >\n                            {field['Field']}\n                        </div>\n                    </div>\n                    <div\n                        className={cn(\n                            'icon-wrapper',\n                            css`\n                                opacity: 0;\n                                transition: opacity 0.2s;\n                                margin-left: auto;\n                                display: flex;\n                                align-items: center;\n                                color: ${theme.colors.text.secondary};\n                                &:hover {\n                                    color: ${theme.colors.text.primary};\n                                }\n                            `,\n                        )}\n                    >\n                        {props.type === 'add' ? (\n                            <IconButton\n                                name=\"plus\"\n                                tooltip=\"添加到表格\"\n                                onClick={e => {\n                                    props?.onAdd?.(field);\n                                    e.stopPropagation();\n                                }}\n                            />\n                        ) : (\n                            <IconButton\n                                name=\"minus\"\n                                tooltip=\"从表格删除\"\n                                onClick={(e: any) => {\n                                    props?.onRemove?.(field);\n                                    e.stopPropagation();\n                                }}\n                            />\n                        )}\n                    </div>\n                </div>\n            </Toggletip>\n        </div>\n    );\n}\n","import { useTranslation } from 'react-i18next';\nimport { useAtom } from 'jotai';\nimport React from 'react';\nimport { searchableAtom, aggregatableAtom, fieldTypeAtom } from 'store/discover';\nimport { AggregatableEnum, AGGREGATABLE, SearchableEnum, SEARCHABLE, FieldTypeEnum } from 'utils/data';\nimport { Select, RadioButtonGroup, RadioButtonList } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nexport function FilterContent() {\n  const { t } = useTranslation();\n  const [searchable, setSearchable] = useAtom(searchableAtom);\n  const [aggregatable, setAggregatable] = useAtom(aggregatableAtom);\n  const [fieldType, setFieldType] = useAtom(fieldTypeAtom);\n  return (\n    //  className=\"w-auto divide-y rounded-md dark:divide-gray-700\"\n    <div className={css`\n      width: auto;\n      border-radius: 0.375rem;\n    `}>\n      {/* className=\"title dark:text-n2\" */}\n      <div className={css`\n        font-size: 1.125rem;\n        font-weight: 500;\n        `}>{`筛选字段`}</div>\n      <div className={css`\n          margin-top: 1rem;\n          border: none;\n        `}>\n        <div className={css`\n          font-size: 0.875rem;\n          margin-bottom: 0.5rem;\n          `} >{t`Aggregatable`}</div>\n        <div>\n          <RadioButtonGroup\n            //   name=\"aggregatable\"\n            options={AGGREGATABLE}\n            value={aggregatable}\n            onChange={(val) => {\n              setAggregatable(val as AggregatableEnum);\n            }}\n          />\n        </div>\n      </div>\n      <div className={css`\n          margin-top: 1rem;\n          border: none;\n        `}>\n        <div className={css`\n          font-size: 0.875rem;\n          margin-bottom: 0.5rem;\n          `} >{t`Searchable`}</div>\n        <div>\n          <RadioButtonGroup\n            //   name=\"searchable\"\n            options={SEARCHABLE}\n            value={searchable}\n            onChange={(val) => {\n              setSearchable(val as SearchableEnum);\n            }}\n          />\n        </div>\n      </div>\n      <div className={css`\n          margin-top: 1rem;\n          border: none;\n        `}>\n        <div className={css`\n          font-size: 0.875rem;\n          margin-bottom: 0.5rem;\n          `} >{t`Type`}</div>\n        <Select\n          value={fieldType as any}\n          onChange={(value) => {\n            setFieldType(value as any);\n          }}\n          options={[\n            {\n              value: 'ANY',\n              label: 'Any',\n            },\n            {\n              value: 'STRING',\n              label: 'String',\n            },\n            {\n              value: 'NUMBER',\n              label: 'Number',\n            },\n            {\n              value: 'DATE',\n              label: 'Date',\n            },\n          ]}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useAtom, useAtomValue } from 'jotai';\nimport React, { useState } from 'react';\nimport FieldItem from './field-item/field-item';\nimport { FilterContent } from './filter-content/filter-content';\nimport { selectedFieldsAtom, tableFieldsAtom, searchableAtom, aggregatableAtom, fieldTypeAtom, indexesAtom } from 'store/discover';\nimport { AggregatableEnum, getFieldType, SearchableEnum, FieldTypeEnum } from 'utils/data';\nimport { Button, CollapsableSection, Icon, IconButton, Input, useTheme2, Toggletip } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nexport default function DiscoverSidebar() {\n    const [selectedFields, setSelectedFields] = useAtom(selectedFieldsAtom);\n    const tableFields = useAtomValue(tableFieldsAtom);\n    const [searchable, setSearchable] = useAtom(searchableAtom);\n    const [aggregatable, setAggregatable] = useAtom(aggregatableAtom);\n    const [fieldType, setFieldType] = useAtom(fieldTypeAtom);\n    const [searchValue, setSearchValue] = useState('');\n    const indexes = useAtomValue(indexesAtom);\n    const theme = useTheme2();\n    const filteredFields = tableFields\n        .filter(field => {\n            if (aggregatable === AggregatableEnum.ANY) {\n                return true;\n            }\n            if (aggregatable === AggregatableEnum.YES) {\n                return getFieldType(field.Type) === 'NUMBER';\n            }\n            if (aggregatable === AggregatableEnum.NO) {\n                return getFieldType(field.Type) !== 'NUMBER';\n            }\n        })\n        .filter((field: any) => {\n            if (searchable === SearchableEnum.ANY) {\n                return true;\n            }\n            if (searchable === SearchableEnum.YES) {\n                return indexes.some(index => field.Field === index.Field);\n            }\n            if (searchable === SearchableEnum.NO) {\n                return !indexes.some(index => field.Field === index.Field);\n            }\n        })\n        .filter(field => {\n            if (fieldType === FieldTypeEnum.ANY) {\n                return true;\n            }\n            return getFieldType(field.Type) === fieldType;\n        });\n    const hasSelectedFields = selectedFields.length > 0;\n    const availableFields = filteredFields.filter(filed => {\n        if (selectedFields.find(item => filed['Field'] === item['Field'])) {\n            return false;\n        }\n        return true;\n    });\n\n    function handleAdd(field: any) {\n        setSelectedFields([...selectedFields, field] as any);\n    }\n\n    function handleRemove(field: any) {\n        const index = selectedFields.findIndex((item: any) => item.Field === field.Field);\n        selectedFields.splice(index, 1);\n        setSelectedFields([...selectedFields]);\n    }\n\n    return (\n        <div\n            className={css`\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n            `}\n        >\n            <div\n                className={css`\n                    display: flex;\n                    background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                    padding: 1rem 0.5rem;\n                    border-raduis: 0.25rem 0;\n                    align-items: center;\n                    column-gap: 0.5rem;\n                `}\n            >\n                <Icon name=\"search\" />\n                <Input\n                    placeholder={`Search`}\n                    className={css`\n                        border: none;\n                    `}\n                    value={searchValue}\n                    onChange={(e: any) => setSearchValue(e.target.value)}\n                />\n                <Toggletip content={<FilterContent />}>\n                    <Icon name=\"filter\" />\n                </Toggletip>\n            </div>\n            <div\n                className={css`\n                    margin-top: 1px;\n                    flex: 1;\n                    padding: 0.5rem 1rem 0.5rem 1rem;\n                    background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                    height: 100%;\n                    overflow: auto;\n                `}\n            >\n                <CollapsableSection label={<span className={css`\n                        margin-left: 4px;\n                        font-size: 14px;\n                        line-height: 32px;\n                    `}>Selected fields</span>} isOpen={true}>\n                    <div\n                        className={css`\n                            width: 100%;\n                        `}\n                    >\n                        {hasSelectedFields ? (\n                            <div\n                                className={css`\n                                    width: 100%;\n                                `}\n                            >\n                                {selectedFields\n                                    .filter((field: any) => {\n                                        return field['Field'].includes(searchValue);\n                                    })\n                                    .map((field: any, index) => (\n                                        <FieldItem type=\"remove\" key={index} field={field} onRemove={field => handleRemove(field)} />\n                                    ))}\n                            </div>\n                        ) : (\n                            <Button\n                                icon=\"arrow\"\n                                size=\"sm\"\n                                variant=\"secondary\"\n                                fill=\"text\"\n                                fullWidth={true}\n                                className={css`\n                                    width: 100%;\n                                    text-align: left;\n                                    justify-content: flex-start;\n                                `}\n                            >\n                                _source\n                            </Button>\n                        )}\n                    </div>\n                </CollapsableSection>\n                <CollapsableSection label={<span className={css`\n                        margin-left: 4px;\n                        font-size: 14px;\n                        line-height: 32px;\n                    `}>Available fields</span>}  isOpen={true}>\n                    <div\n                        className={css`\n                            width: 100%;\n                        `}\n                    >\n                        {availableFields\n                            .filter((field: any) => {\n                                return field['Field'].includes(searchValue);\n                            })\n                            .map((field: any, index) => (\n                                <FieldItem type=\"add\" field={field} key={index} onAdd={field => handleAdd(field)} />\n                            ))}\n                    </div>\n                </CollapsableSection>\n            </div>\n        </div>\n    );\n}\n","import ReactECharts from 'echarts-for-react';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport React, { useEffect, useRef, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { Select, useTheme2 } from '@grafana/ui';\nimport { IntervalEnum } from 'types/type';\nimport { TIME_INTERVALS } from 'utils/data';\nimport { getAutoInterval, FORMAT_DATE, translationDateIntervalType } from '../../constants';\nimport { currentDateAtom, discoverCurrentAtom, activeShortcutAtom, tableDataChartsAtom, intervalAtom, tableTotalCountAtom, pageSizeAtom, pageAtom, timeRangeAtom } from 'store/discover';\nimport { css } from '@emotion/css';\n\nexport function DiscoverHistogram() {\n    const theme = useTheme2().isDark ? 'dark' : 'light';\n    const [currentDate, setCurrentDate] = useAtom(currentDateAtom);\n    const ReactEChartsInstance = useRef<ReactECharts>(null);\n    const [discoverCurrent, setDiscoverCurrent] = useAtom(discoverCurrentAtom);\n    const setActiveItem = useSetAtom(activeShortcutAtom);\n\n    const tableDataCharts = useAtomValue(tableDataChartsAtom);\n    if (process.env.NODE_ENV !== 'production') {\n        tableDataChartsAtom.debugLabel = 'tableDataCharts';\n    }\n    const [interval_value, setInterval_value] = useState(1);\n    const [interval, setInterval] = useAtom(intervalAtom);\n    if (process.env.NODE_ENV !== 'production') {\n        intervalAtom.debugLabel = 'interval';\n    }\n    const tableTotalCount = useAtomValue(tableTotalCountAtom);\n    const [timeRange, setTimeRange] = useAtom(timeRangeAtom);\n    const [pageSize, setPageSize] = useAtom(pageSizeAtom);\n    const [page, setPage] = useAtom(pageAtom);\n\n    useEffect(() => {\n        const v = getAutoInterval(currentDate as any).interval_value;\n        setInterval_value(v);\n    }, [currentDate]);\n\n    const timeInterval = interval === IntervalEnum.Auto ? translationDateIntervalType(interval) : `${interval_value} ${translationDateIntervalType(interval)}`;\n\n    let base = +new Date(1988, 9, 3);\n    let oneDay = 24 * 3600 * 1000;\n    let data = [[base, Math.random() * 300]];\n    for (let i = 1; i < 20000; i++) {\n        let now = new Date((base += oneDay));\n        data.push([+now, Math.round((Math.random() - 0.5) * 20 + data[i - 1][1])]);\n    }\n\n    const options: any = {\n        title: {\n            subtext: `${`时间间隔`}: ${timeInterval}`,\n            left: 'right',\n            top: 12,\n        },\n        grid: {\n            left: '32px',\n            right: '32px',\n            bottom: '0px',\n            containLabel: true,\n        },\n        color: theme === 'light' ? ['#608DFF'] : ['#608DFF'],\n        xAxis: {\n            type: 'category',\n            data: tableDataCharts.map(e => e['TT']),\n            axisLabel: {\n                fontSize: '12px', // 字体大小\n                fontStyle: 'normal',\n                fontWeight: 400,\n                color: theme === 'light' ? '#9F9FA2' : '#5F5F64',\n            },\n            axisLine: {\n                lineStyle: {\n                    width: 0.5,\n                    color: theme === 'light' ? '#BFBFC1' : '#3F3F45',\n                },\n            },\n            axisTick: {\n                show: false,\n            },\n        },\n        toolbox: {\n            show: false,\n        },\n        brush: {\n            xAxisIndex: 0,\n        },\n        yAxis: {\n            name: `Count`,\n            nameTextStyle: {\n                align: 'right',\n                padding: [5, 0],\n            },\n            type: 'value',\n            splitLine: {\n                show: true,\n                lineStyle: {\n                    width: 0.5, // 网格线的粗细\n                    color: theme === 'light' ? '#BFBFC1' : '#3F3F45',\n                },\n            },\n            axisLabel: {\n                fontSize: '12px',\n                fontStyle: 'normal',\n                fontWeight: 400,\n            },\n        },\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'line',\n            },\n            padding: 0,\n            borderWidth: 0,\n            backgroundColor: theme === 'light' ? '#ffffff' : 'rgba(63, 63, 69, 0.64)',\n            formatter: function (params: any) {\n                const html = `<div className=\"text-n2\"\n                                       style=\"\n                                          padding: 8px;\n                                          min-width: 120px;\n                                          border-radius: 6px;\n                                          backdrop-filter: blur(12px);\n                                          color: ${theme === 'light' ? '#1F1F26' : '#EFEFF0'};\n                                        \">\n                                      <div style=\"padding-bottom: 4px; border-bottom: 1px solid ${theme === 'light' ? '#DFDFE0' : '#3F3F45'};\">${[params[0].name]}</div>\n                                      <div style=\"padding-top:4px;display: flex;justify-content: space-between;\"><span>计数：</span><span style=\"font-family:DIN Alternate;font-size:14;font-weight:500;\">${[\n                        params[0].value || 0,\n                    ]}</span></div>\n                                  </div>`;\n                return html;\n            },\n        },\n\n        series: [\n            {\n                data: tableDataCharts.map(e => e['sum(cnt)']),\n                type: 'bar',\n                barWidth: '99.3%',\n            },\n        ],\n\n        animation: false,\n    };\n\n    useEffect(() => {\n        const chart = ReactEChartsInstance.current;\n        if (chart && tableDataCharts.length > 0) {\n            const handler = ({ areas }: any) => {\n                if (!areas.length) {\n                    return;\n                }\n                setPage(1);\n                setPageSize(50);\n                setActiveItem(undefined);\n                const [startIndex, endIndex] = (areas[0] as any).coordRange as [startIndex: number, endIndex: number];\n                const timeInterval = interval === IntervalEnum.Auto ? getAutoInterval(currentDate as any).interval_unit : interval;\n                const chartsEndDate = dayjs(new Date(tableDataCharts[endIndex]['TT'])).add(interval_value, timeInterval);\n                setDiscoverCurrent({\n                    ...discoverCurrent,\n                    date: [dayjs(tableDataCharts[startIndex]['TT']), chartsEndDate],\n                });\n\n                setCurrentDate([dayjs(tableDataCharts[startIndex]['TT']), chartsEndDate]);\n                const timeRange = {\n                    from: dayjs(tableDataCharts[startIndex]['TT']).format(FORMAT_DATE),\n                    to: chartsEndDate.format(FORMAT_DATE),\n                    raw: {\n                        from: dayjs(tableDataCharts[startIndex]['TT']).format(FORMAT_DATE),\n                        to: chartsEndDate.format(FORMAT_DATE),\n                    },\n                };\n                setTimeRange(timeRange);\n                chart.getEchartsInstance().dispatchAction({\n                    type: 'brush',\n                    command: 'clear',\n                    areas: [],\n                });\n            };\n\n            if (chart.ele) {\n                chart.getEchartsInstance().dispatchAction({\n                    type: 'takeGlobalCursor',\n                    key: 'brush',\n                    brushOption: {\n                        brushType: 'lineX',\n                    },\n                });\n                chart.getEchartsInstance().on('brushEnd', handler);\n            }\n\n            return () => {\n                if (chart.ele) {\n                    chart.getEchartsInstance().off('brushEnd', handler);\n                }\n            };\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tableDataCharts]);\n    return (\n        <div className={css`padding: 0 16px;`}>\n            <div\n                className={css`\n                    display: flex;\n                    align-items: center;\n                    justify-content: space-between;\n                `}\n            >\n                <div>\n                    <span className={css`\n                            font-size: 24px;\n                            font-weight: 600;\n                        `}\n                    >\n                        {tableTotalCount ? tableTotalCount.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,') : '0'}\n                    </span>{' '}\n                    <span className={css`font-size: 12px;`}>{`hits`}</span>\n                </div>\n                <div className={css`\n                        font-size: 14px;\n                        color: rgb(190,190,193)\n                    `}\n                >{currentDate && `${currentDate[0]?.format(FORMAT_DATE)} ~ ${currentDate[1]?.format(FORMAT_DATE)} `}</div>\n                <div\n                    className={css`\n                        width: 160px;\n                    `}\n                >\n                    <Select\n                        value={interval}\n                        onChange={selectdbInterval => {\n                            setInterval(selectdbInterval.value as any);\n                        }}\n                        options={TIME_INTERVALS}\n                    />\n                </div>\n            </div>\n            <div\n                className={css`\n                    height: 300px;\n                `}\n            >\n                <ReactECharts option={options} ref={ReactEChartsInstance}></ReactECharts>\n            </div>\n        </div>\n    );\n}\n","import React, { Fragment } from 'react';\nimport { ColumnDef, Row, flexRender, getCoreRowModel, getExpandedRowModel, useReactTable } from '@tanstack/react-table';\nimport classNames from 'classnames';\nimport { EmptySearchResult, useTheme2 } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\ninterface SDCollapsibleTableProps<TData> {\n    data: TData[];\n    columns: Array<ColumnDef<TData>>;\n    renderSubComponent: (props: { row: Row<TData> }) => React.ReactElement;\n    getRowCanExpand: (row: Row<TData>) => boolean;\n    className?: string;\n}\n\nexport default function SDCollapsibleTable<T>(props: SDCollapsibleTableProps<T>) {\n    const { data, columns, renderSubComponent, getRowCanExpand, className } = props;\n    const theme = useTheme2();\n    const table = useReactTable<any>({\n        data,\n        columns,\n        getRowCanExpand,\n        getCoreRowModel: getCoreRowModel(),\n        getExpandedRowModel: getExpandedRowModel(),\n    });\n\n    return (\n        <table className={className}>\n            <thead>\n                {table.getHeaderGroups().map(headerGroup => (\n                    <tr key={headerGroup.id} className={css`${theme.isDark ? 'border-bottom: 1px solid hsl(var(--border-dark));' : 'border-bottom: 1px solid hsl(var(--border));'} `}>\n                        {headerGroup.headers.map(header => {\n                            return (\n                                <th\n                                    key={header.id}\n                                    colSpan={header.colSpan}\n                                    className={css`\n                                            position: sticky;\n                                            top: 0;\n                                            z-index: 2;\n                                            height: 48px; \n                                            white-space: nowrap;\n                                            background-color: ${theme.isLight ? 'hsl(var(--table-header-background)' : 'hsl(var(--table-header-background-dark)'} ); \n                                            padding-left: 16px; \n                                            padding-right: 16px;\n                                            text-align: left;\n                                            vertical-align: middle;\n                                            font-size: 14px;\n                                            font-weight: 500;    \n                                            color: hsl(var(--n2)}  \n\n                                            &:has([role=\"checkbox\"]) {\n                                                padding-right: 0;\n                                            }\n                                        `}\n                                >\n                                    {header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())}\n                                </th>\n                            );\n                        })}\n                    </tr>\n                ))}\n            </thead>\n            <tbody\n                className={css`\n                    #selected {\n                        background-color: #3f3f46cc;\n                    }\n                `}\n            >\n                {table.getRowModel().rows.length > 0 ? (\n                    table.getRowModel().rows.map(row => {\n                        return (\n                            <Fragment key={row.id}>\n                                <tr\n                                    id={row.original.selected ? 'selected' : ''}\n                                    // className={classNames(\n                                    //     'transition-colors dark:hover:bg-n7/80 hover:bg-b1/80 data-[state=selected]:bg-muted',\n                                    //     row.getIsExpanded() ? 'border-none' : 'border-b',\n                                    //     row.original.selected ? 'dark:bg-n7 bg-b1/60' : 'hsl(val(--n8))',\n                                    // )}\n                                    className={css`\n                                        ${row.getIsExpanded() ? `border:none;` : `${theme.isDark ? 'border-bottom: 1px solid hsl(var(--border-dark));' : 'border-bottom: 1px solid hsl(var(--border));'} `}\n\n                                        ${theme.isLight ? `\n                                             background-color: ${row.original.selected ? 'hsl(var(--b1) / 0.6)' : 'hsl(val(--n8))'}; \n                                        &:hover {\n                                            background-color: hsl(var(--b1) / 0.8);\n                                        }\n                                            `\n                                            :\n                                            `\n                                            background-color: ${row.original.selected ? 'hsl(var(--n7))' : 'hsl(val(--n8))'}; \n                                            &:hover {\n                                                    background-color: hsl(var(--n7) / 0.8);\n                                                }\n                                            }\n                                            `\n                                        }\n                                    `}\n                                >\n                                    {row.getVisibleCells().map(cell => {\n                                        return (\n                                            <td key={cell.id} className={css`\n                                                height: 48px;\n                                                padding: 0 16px;\n                                                font-size: 14px;\n                                            `} >\n                                                {cell.getContext().getValue() !== null ? flexRender(cell.column.columnDef.cell, cell.getContext()) : '-'}\n                                            </td>\n                                        );\n                                    })}\n                                </tr>\n                                {row.getIsExpanded() && (\n                                    <tr\n                                        //  className=\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\"\n                                        className={css`\n                                        border-bottom: 1px solid rgb(63,63,70);\n                                        transition-property: background-color, border-color, color, fill, stroke;\n                                        transition-duration: 150ms;\n                                        transition-timing-function: ease-in-out;\n                                        \n                                        &:hover {\n                                            background-color: hsl(var(--muted) / 0.5);\n                                        }\n                                        \n                                        [data-state=\"selected\"] {\n                                            background-color: hsl(var(--muted))\n                                        }\n                                    `}\n                                    >\n                                        <td colSpan={row.getVisibleCells().length} className={css`\n                                                height: 32px;\n                                                padding: 0;\n                                            `}>\n                                            {renderSubComponent({ row })}\n                                        </td>\n                                    </tr>\n                                )}\n                            </Fragment>\n                        );\n                    })\n                ) : (\n                    <tr >\n                        <td colSpan={columns.length}>\n                            <EmptySearchResult>{`No Data`}</EmptySearchResult>\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    );\n}\n","import { css } from '@emotion/css';\nimport styled from '@emotion/styled';\n\nexport const HoverStyle = css`\n    &:hover {\n        .filter-content {\n            visibility: visible;\n        }\n    }\n`;\n\nexport const ColumnStyleWrapper = styled.div`\n    .field-key {\n        padding: 0px 4px 2px;\n        margin-right: 4px;\n        border-radius: 4px;\n    }\n`;\n","import { IconButton } from '@grafana/ui';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { nanoid } from 'nanoid';\nimport React from 'react';\nimport { selectedFieldsAtom, dataFilterAtom, tableFieldsAtom } from 'store/discover';\nimport { isComplexType } from 'utils/data';\n\nexport function ContentTableActions({ fieldName, fieldValue }: any) {\n    const [selectedFields, setSelectedFields] = useAtom(selectedFieldsAtom);\n    const [dataFilter, setDataFilter] = useAtom(dataFilterAtom);\n    const tableFields = useAtomValue(tableFieldsAtom);\n    const fieldType = tableFields.find(field => field.Field === fieldName)?.Type;\n    const hasField = selectedFields.some((item: any) => item.Field === fieldName);\n    const filterValue = typeof fieldValue === 'object' ? JSON.stringify(fieldValue) : fieldValue;\n    return (\n        <>\n            <div className=\"icons\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                {!isComplexType(fieldType) && (\n                    <>\n                        <IconButton\n                            name=\"plus-circle\"\n                            tooltip=\"Equivalent filtration\"\n                            onClick={() => {\n                                setDataFilter([...dataFilter, { fieldName: fieldName, operator: '=', value: [filterValue], id: nanoid() }]);\n                            }}\n                        />\n                        <IconButton\n                            name=\"minus-circle\"\n                            tooltip=\"Nonequivalent filtration\"\n                            onClick={() => {\n                                setDataFilter([...dataFilter, { fieldName: fieldName, operator: '!=', value: [filterValue], id: nanoid() }]);\n                            }}\n                        />\n                    </>\n                )}\n                <IconButton\n                        name=\"plus\"\n                        tooltip={hasField ? 'Delete From Table' : 'Add To Table'}\n                        onClick={() => {\n                            const field = tableFields.find(field => field.Field === fieldName);\n                            if (hasField) {\n                                const index = selectedFields.findIndex((item: any) => item.Field === fieldName);\n                                selectedFields.splice(index, 1);\n                                setSelectedFields([...selectedFields]);\n                            } else {\n                                setSelectedFields([...selectedFields, field]);\n                            }\n                        }}\n                    />\n            </div>\n        </>\n    );\n}\n","export const SELECTDB_THEME: any = {\n    '--w-rjv-font-family': 'monospace',\n    '--w-rjv-color': '#9cdcfe',\n    '--w-rjv-key-number': 'rgb(123, 225, 136)',\n    '--w-rjv-key-string': 'rgb(123, 225, 136)',\n    '--w-rjv-background-color': 'black',\n    '--w-rjv-line-color': '#36334280',\n    '--w-rjv-arrow-color': '#838383',\n    '--w-rjv-edit-color': 'var(--w-rjv-color)',\n    '--w-rjv-info-color': '#9c9c9c7a',\n    '--w-rjv-update-color': '#9cdcfe',\n    '--w-rjv-copied-color': '#9cdcfe',\n    '--w-rjv-copied-success-color': '#28a745',\n\n    '--w-rjv-curlybraces-color': '#d4d4d4',\n    '--w-rjv-colon-color': '#d4d4d4',\n    '--w-rjv-brackets-color': '#d4d4d4',\n    '--w-rjv-ellipsis-color': '#cb4b16',\n    '--w-rjv-quotes-color': 'var(--w-rjv-key-string)',\n    '--w-rjv-quotes-string-color': 'var(--w-rjv-type-string-color)',\n\n    '--w-rjv-type-string-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-int-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-float-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-bigint-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-boolean-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-date-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-url-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-null-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-nan-color': 'rgb(149, 179, 255)',\n    '--w-rjv-type-undefined-color': 'rgb(149, 179, 255)',\n};\n\nexport const SELECTDB_THEME_LIGHT: any = {\n    '--w-rjv-font-family': 'monospace',\n    '--w-rjv-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-key-number': 'rgb(123, 225, 136)',\n    '--w-rjv-key-string': 'hsla(134, 100%, 35%, 1)',\n    '--w-rjv-background-color': 'hsla(215, 100%, 95%, 0.2)',\n    '--w-rjv-line-color': '#36334280',\n    '--w-rjv-arrow-color': '#838383',\n    '--w-rjv-edit-color': 'var(--w-rjv-color)',\n    '--w-rjv-info-color': 'hsla(240, 5%, 26%, 1)',\n    '--w-rjv-update-color': '#9cdcfe',\n    '--w-rjv-copied-color': '#9cdcfe',\n    '--w-rjv-copied-success-color': '#28a745',\n\n    '--w-rjv-curlybraces-color': 'hsla(240, 5%, 26%, 1)',\n    '--w-rjv-colon-color': 'hsla(240, 5%, 26%, 1)',\n    '--w-rjv-brackets-color': 'hsla(240, 5%, 26%, 1)',\n    '--w-rjv-ellipsis-color': '#cb4b16',\n    '--w-rjv-quotes-color': 'var(--w-rjv-key-string)',\n    '--w-rjv-quotes-string-color': 'var(--w-rjv-type-string-color)',\n\n    '--w-rjv-type-string-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-int-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-float-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-bigint-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-boolean-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-date-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-url-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-null-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-nan-color': 'hsla(223, 98%, 58%, 1)',\n    '--w-rjv-type-undefined-color': 'hsla(223, 98%, 58%, 1)',\n};\n","import { t } from 'i18next';\nimport { useAtom } from 'jotai';\nimport { css } from '@emotion/css';\nimport { nanoid } from 'nanoid';\nimport { dataFilterAtom } from 'store/discover';\nimport React from 'react';\nimport { isComplexType } from 'utils/data';\nimport { Button, IconButton, Tooltip } from '@grafana/ui';\n\ninterface ContentItemProps {\n    fieldName: string;\n    fieldValue: string | number;\n    fieldType: string;\n}\n\nexport function ContentItem({ fieldName, fieldValue, fieldType }: ContentItemProps) {\n    const [dataFilter, setDataFilter] = useAtom(dataFilterAtom);\n    return (\n        <div>\n            {!isComplexType(fieldType) && (\n                <div className={css`\n                    display: flex;\n                    alignItems: 'center';\n                    margin-left: 10px;\n                `}>\n                    <IconButton\n                        name=\"plus-circle\"\n                        onClick={e => {\n                            setDataFilter([...dataFilter, { fieldName, operator: '=', value: [fieldValue], id: nanoid() }]);\n                            e.stopPropagation();\n                        }}\n                        tooltip=\"Equivalent filtration\"\n                    />\n                    <IconButton\n                        name=\"minus-circle\"\n                        style={{ marginLeft: '4px' }}\n                        onClick={e => {\n                            setDataFilter([\n                                ...dataFilter,\n                                {\n                                    fieldName,\n                                    operator: '!=',\n                                    value: [fieldValue],\n                                    id: nanoid(),\n                                },\n                            ]);\n                            e.stopPropagation();\n                        }}\n                        tooltip=\"Nonequivalent filtration\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n","import { useAtom } from 'jotai';\nimport { nanoid } from 'nanoid';\nimport { isComplexType } from 'utils/data';\nimport { IconButton } from '@grafana/ui';\nimport React from 'react';\nimport { css } from '@emotion/css';\nimport { surroundingDataFilterAtom } from 'store/discover';\n\ninterface ContentItemProps {\n    fieldName: string;\n    fieldValue: string | number;\n    fieldType: string;\n}\n\nexport function SurroundingContentItem({ fieldName, fieldValue, fieldType }: ContentItemProps) {\n    const [surroundingDataFilter, setSurroundingDataFilter] = useAtom(surroundingDataFilterAtom);\n    return (\n        <div>\n            {!isComplexType(fieldType) && (\n                <div className={css`\n                    display: flex;\n                    alignItems: 'center';\n                    margin-left: 10px;\n                `}>\n                    <IconButton\n                        name=\"plus-circle\"\n                        onClick={e => {\n                            setSurroundingDataFilter([...surroundingDataFilter, { fieldName, operator: '=', value: [fieldValue], id: nanoid() }]);\n                            e.stopPropagation();\n                        }}\n                        tooltip=\"Equivalent filtration\"\n                    />\n                    <IconButton\n                        name=\"minus-circle\"\n                        style={{ marginLeft: '4px' }}\n                        onClick={e => {\n                            setSurroundingDataFilter([\n                                ...surroundingDataFilter,\n                                {\n                                    fieldName,\n                                    operator: '!=',\n                                    value: [fieldValue],\n                                    id: nanoid(),\n                                },\n                            ]);\n                            e.stopPropagation();\n                        }}\n                        tooltip=\"Nonequivalent filtration\"\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n","import { css } from '@emotion/css';\nimport { Button, IconButton } from '@grafana/ui';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\ninterface SurroundingLogsActionsProps {\n    getSurroundingData: (params: { time: string }) => void;\n    getSurroundingDataLoading: boolean;\n    time: string;\n    timeFieldPageSize: number;\n    setTimeFieldPageSize: (value: number) => void;\n    tips: string;\n    count: number;\n    type: 'before' | 'after';\n}\n\nexport function SurroundingLogsActions(props: SurroundingLogsActionsProps) {\n    const { getSurroundingData, getSurroundingDataLoading, time, timeFieldPageSize, tips, count, type } = props;\n    const { t } = useTranslation();\n    return (\n        <div\n            className={css`\n                display: flex;\n                align-items: center;\n                justify-content: flex-start;\n            `}\n        >\n            <Button\n                // loading={getSurroundingDataLoading}\n                className=\"font-normal text-n2 hover:text-b7 hover:no-underline\"\n                onClick={() => {\n                    getSurroundingData({ time: time });\n                }}\n                type=\"reset\"\n            >\n                {!getSurroundingDataLoading && (\n                    <>{type === 'before' ? <IconButton name=\"arrow-up\" aria-label={`Load After`} /> : <IconButton name=\"arrow-down\" aria-label={`Load Before`} />}</>\n                )}\n                {`Load`} {timeFieldPageSize} {t`Items`}\n            </Button>\n            <div\n                className={css`\n                    margin-left: 8px;\n                `}\n            >\n                {count} {`Items`} {` `}\n                {tips}\n            </div>\n        </div>\n    );\n}\n","import { css } from '@emotion/css';\nimport styled from '@emotion/styled';\n\nexport const DiscoverFilterWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    .filter {\n        align-self: flex-start;\n        margin-top: 3px;\n        margin-right: 8px;\n        font-weight: 500;\n        font-size: 14px;\n        font-style: normal;\n        line-height: 18px;\n    }\n    .filter-tag {\n        display: flex;\n        flex: 1;\n        flex-wrap: wrap;\n        align-items: center;\n        row-gap: 8px;\n        .tag {\n            display: flex;\n            align-items: center;\n            max-width: 400px;\n            height: 24px;\n            padding: 2px 8px;\n            font-weight: 400;\n            font-size: 12px;\n            font-style: normal;\n            line-height: 18px;\n            border: 0px;\n            border-radius: 6px;\n            .text {\n                overflow: hidden;\n                white-space: nowrap;\n                text-overflow: ellipsis;\n            }\n        }\n    }\n`;\n\nexport const containerStyle = css`\n    width: 320px;\n`;\n\nexport const rowStyle = css`\n    display: flex;\n    gap: 8px;\n    margin-bottom: 12px;\n`;\n\nexport const colStyle = css`\n    flex: 1;\n`;\n\nexport const footerStyle = css`\n    display: flex;\n    justify-content: flex-end;\n    gap: 8px;\n    margin-top: 16px;\n`;\n","import { useAtom, useAtomValue } from 'jotai';\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport { Select, InlineField, InlineFieldRow, InlineSwitch, Button, Input, Field } from '@grafana/ui';\nimport { tableFieldsAtom, dataFilterAtom, tableFieldValuesAtom, surroundingDataFilterAtom } from 'store/discover';\nimport { Operator } from 'types/type';\nimport { OPERATORS } from 'utils/data';\nimport { Controller, useForm } from 'react-hook-form';\nimport { containerStyle, rowStyle, colStyle, footerStyle } from './discover-filter.style';\nimport { FilterContentProps } from '../types';\n\nexport function FilterContent(props: FilterContentProps) {\n    const { onHide, dataFilterValue } = props;\n    const [surroundingDataFilter, setSurroundingDataFilter] = useAtom(surroundingDataFilterAtom);\n    const tableFields = useAtomValue(tableFieldsAtom);\n    if (process.env.NODE_ENV !== 'production') {\n        dataFilterAtom.debugLabel = 'dataFilter';\n    }\n    const tableFieldValue = useAtomValue(tableFieldValuesAtom);\n\n    const {\n        control,\n        handleSubmit,\n        watch,\n        register,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            field: {\n                label: dataFilterValue?.fieldName,\n                value: dataFilterValue?.fieldName,\n            },\n            operator: {\n                label: dataFilterValue?.operator,\n                value: dataFilterValue?.operator,\n            },\n            value: dataFilterValue?.value,\n            minValue: Array.isArray(dataFilterValue?.value) ? dataFilterValue?.value[0] : '',\n            maxValue: Array.isArray(dataFilterValue?.value) ? dataFilterValue?.value[1] : '',\n            label: dataFilterValue?.label || '',\n            showLabel: !!dataFilterValue?.label, // Initialize based on dataFilterValue\n        },\n    });\n    const operator = watch('operator');\n    const showLabel: any = watch('showLabel');\n\n\n    const getValue = (value: string): string | number => (isNaN(+value) ? value : +value);\n\n    const onSubmit = (formValues: any) => {\n        const { field, operator, value, minValue, maxValue, label } = formValues;\n        const current = surroundingDataFilter.find(f => f.id === dataFilterValue?.id);\n        const id = dataFilterValue?.id || nanoid();\n\n        let newValue: any[] = [];\n\n        if (operator.value === 'between' || operator.value === 'not between') {\n            if (minValue && maxValue) {\n                newValue = [getValue(minValue), getValue(maxValue)];\n            }\n        } else if (value || typeof value === 'number') {\n            newValue = [value];\n        }\n\n        const newItem = {\n            id,\n            fieldName: field.value,\n            operator: operator.value,\n            label,\n            value: newValue,\n        };\n\n        if (current) {\n            const updated = surroundingDataFilter.map(f => (f.id === id ? newItem : f));\n            setSurroundingDataFilter(updated);\n        } else {\n            setSurroundingDataFilter([...surroundingDataFilter, newItem]);\n        }\n\n        onHide();\n    };\n\n    function renderFiledComponent() {\n        const currentOperator = (typeof operator === 'string' ? operator : operator?.value) as Operator | undefined;\n        if (currentOperator && currentOperator !== 'is null' && currentOperator !== 'is not null' && (currentOperator === 'between' || currentOperator === 'not between')) {\n            return (\n                <div className={rowStyle}>\n                    <div className={colStyle}>\n                        <Field label=\"最小值\" invalid={!!errors.minValue} error={errors.minValue?.message}>\n                            <Input {...register('minValue', { required: '请输入最小值' })} />\n                        </Field>\n                    </div>\n                    <div className={colStyle}>\n                        <Field label=\"最大值\" invalid={!!errors.maxValue} error={errors.maxValue?.message}>\n                            <Input {...register('maxValue', { required: '请输入最大值' })} />\n                        </Field>\n                    </div>\n                </div>\n            );\n        }\n        if (\n            currentOperator === '=' ||\n            currentOperator === '!=' ||\n            currentOperator === 'like' ||\n            currentOperator === 'not like' ||\n            currentOperator === 'match_all' ||\n            currentOperator === 'match_any' ||\n            currentOperator === 'match_phrase'\n        ) {\n            return (\n                <>\n                    <Field label=\"值\" invalid={!!errors.value} error={(errors.value as any)?.message}>\n                        <Input {...register('value', { required: '请输入值' })} list=\"field-value-list\" />\n                    </Field>\n                    <datalist id=\"field-value-list\">\n                        {tableFieldValue.map((item, idx) => (\n                            <option key={idx} value={item.value} />\n                        ))}\n                    </datalist>\n                </>\n            );\n        }\n        if (currentOperator === 'in' || currentOperator === 'not in') {\n            return (\n                <Field label=\"值\" invalid={!!errors.value} error={(errors.value as any)?.message}>\n                    <Controller\n                        name=\"value\"\n                        control={control}\n                        rules={{ required: '请输入值' }}\n                        render={({ field }) => (\n                            <Select\n                                {...field}\n                                isMulti={true}\n                                options={tableFieldValue.map(item => ({\n                                    label: item.value,\n                                    value: item.value,\n                                }))}\n                                placeholder=\"请选择值\"\n                                onChange={selected => field.onChange(selected ? selected.map((s: any) => s.value) : [])}\n                                value={tableFieldValue\n                                    .filter(item => Array.isArray(field.value) && field.value.includes(item.value))\n                                    .map(item => ({\n                                        label: item.value,\n                                        value: item.value,\n                                    }))}\n                            />\n                        )}\n                    />\n                </Field>\n            );\n        }\n        return <></>;\n    }\n\n    return (\n        <form onSubmit={handleSubmit(onSubmit)} className={containerStyle}>\n            <div className={rowStyle}>\n                <div className={colStyle}>\n                    <Field label=\"列名\" invalid={!!errors.field} error={(errors.field as any)?.message}>\n                        <Controller\n                            name=\"field\"\n                            control={control}\n                            rules={{ required: '请选择字段' }}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    options={tableFields.map(f => ({\n                                        label: f.Field,\n                                        value: f.Field,\n                                    }))}\n                                />\n                            )}\n                        />\n                    </Field>\n                </div>\n                <div className={colStyle}>\n                    <Field label=\"条件\" invalid={!!errors.operator} error={(errors.operator as any)?.message}>\n                        <Controller\n                            name=\"operator\"\n                            control={control}\n                            rules={{ required: '请选择操作符' }}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    options={OPERATORS.map(op => ({\n                                        label: op,\n                                        value: op,\n                                    }))}\n                                />\n                            )}\n                        />\n                    </Field>\n                </div>\n            </div>\n\n            {renderFiledComponent()}\n\n            <InlineFieldRow>\n                <InlineField label=\"Custom Label\">\n                    <Controller name=\"showLabel\" control={control} render={({ field }) => <InlineSwitch {...field} />}></Controller>\n                </InlineField>\n            </InlineFieldRow>\n\n            {showLabel && (\n                <Field label=\"Label\" invalid={!!errors.label} error={errors.label?.message}>\n                    <Input {...register('label', { required: 'Please enter label' })} />\n                </Field>\n            )}\n\n            <div className={footerStyle}>\n                <Button\n                    variant=\"secondary\"\n                    onClick={e => {\n                        e.preventDefault();\n                        onHide();\n                    }}\n                >\n                    取消\n                </Button>\n                <Button type=\"submit\">确定</Button>\n            </div>\n        </form>\n    );\n}\n","import React, { useRef, useState } from 'react';\nimport { DiscoverFilterWrapper } from './discover-filter.style';\nimport { useTranslation } from 'react-i18next';\nimport { useAtom } from 'jotai';\nimport { FilterContent } from './filter-content';\nimport { surroundingDataFilterAtom } from 'store/discover';\nimport { getFilterSQL } from 'utils/data';\nimport { css } from '@emotion/css';\nimport { Badge, Icon, IconButton, Toggletip, useTheme2 } from '@grafana/ui';\nimport { DiscoverFilterProps } from '../types';\n\nexport default function SurroundingDiscoverFilter(props: DiscoverFilterProps) {\n    const [surroundingDataFilter, setSurroundingDataFilter] = useAtom(surroundingDataFilterAtom);\n    const [open, setOpen] = useState<boolean>(false);\n    const [dataFilterOpen, setDataFilterOpen] = useState<any>({});\n    const discoverFilterRef = useRef(null);\n    const { t } = useTranslation();\n    const theme = useTheme2();\n\n    console.log('surroundingDataFilter', surroundingDataFilter);\n\n    return (\n        <DiscoverFilterWrapper\n            ref={discoverFilterRef}\n            className={css`\n                background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                padding: 1rem;\n                padding-bottom: 1.5rem;\n                margin-top: 1px;\n                border-radius: 0 0 0.25rem 0.25rem;\n            `}\n        >\n            <div className=\"text-xs font-medium\">{t`Filter`}</div>\n            <div className=\"filter-tag\">\n                {surroundingDataFilter.map((dataFilterValue, index) => {\n                    return (\n                        <div\n                            key={index.toString()}\n                            className={css`\n                                margin-left: 8px;\n                            `}\n                        >\n                            <Toggletip\n                                show={dataFilterOpen[dataFilterValue.id]}\n                                onOpen={() => {\n                                    setDataFilterOpen({\n                                        ...dataFilterOpen,\n                                        [dataFilterValue.id]: true,\n                                    });\n                                }}\n                                onClose={() => {\n                                    setDataFilterOpen({\n                                        ...dataFilterOpen,\n                                        [dataFilterValue.id]: false,\n                                    });\n                                }}\n                                closeButton={true}\n                                content={\n                                    <FilterContent\n                                        onHide={() => {\n                                            setDataFilterOpen({\n                                                ...dataFilterOpen,\n                                                [dataFilterValue.id]: false,\n                                            });\n                                        }}\n                                        dataFilterValue={dataFilterValue}\n                                    />\n                                }\n                                placement=\"bottom\"\n                            >\n                                <div>\n                                    <Badge\n                                        key={index}\n                                        text={\n                                            <div\n                                                className={css`\n                                                    display: flex;\n                                                    align-items: center;\n                                                    justify-content: space-between;\n                                                `}\n                                            >\n                                                <span>{dataFilterValue.label ? <span>{dataFilterValue.label}</span> : <span>{getFilterSQL(dataFilterValue)}</span>}</span>\n                                                <div\n                                                    className={css`\n                                                        margin-left: 0.5rem;\n                                                        cursor: pointer;\n                                                    `}\n                                                    onClick={() => {\n                                                        const data_filters = surroundingDataFilter.filter(e => e !== dataFilterValue) || [];\n                                                        console.log('data_filters', data_filters);\n                                                        setSurroundingDataFilter(data_filters);\n                                                        // setLoc(prev => {\n                                                        //     const searchParams = prev.searchParams;\n                                                        //     searchParams?.set('data_filters', JSON.stringify(data_filters));\n                                                        //     return {\n                                                        //         ...prev,\n                                                        //         searchParams,\n                                                        //     };\n                                                        // });\n                                                    }}\n                                                >\n                                                    <Icon name=\"times\" />\n                                                </div>\n                                            </div>\n                                        }\n                                        color=\"blue\"\n                                    ></Badge>\n                                </div>\n                            </Toggletip>\n                        </div>\n                    );\n                })}\n                <Toggletip\n                    show={open}\n                    closeButton={false}\n                    onOpen={() => {\n                        setOpen(true);\n                    }}\n                    content={\n                        <FilterContent\n                            onHide={() => {\n                                console.log('onHide');\n                                setOpen(false);\n                            }}\n                        />\n                    }\n                    placement=\"bottom\"\n                >\n                    <IconButton name=\"plus\" tooltip=\"Add filter\" style={{ marginLeft: 10 }} />\n                </Toggletip>\n            </div>\n        </DiscoverFilterWrapper>\n    );\n}\n","export async function generateUid(obj: any) {\n    // 将对象排序后转换为 JSON 字符串，以确保属性顺序不影响哈希结果\n    const jsonString = JSON.stringify(obj, Object.keys(obj).sort());\n\n    // 编码为 UTF-8\n    const encoder = new TextEncoder();\n    const data = encoder.encode(jsonString);\n\n    // 计算 SHA-256 哈希值\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\n\n    // 将哈希值转换为十六进制字符串\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\n\n    return hashHex;\n}\n\nexport async function generateTableDataUID(items: any[]) {\n    for (let item of items) {\n        const uid = await generateUid(item._original);\n        item['_uid'] = uid;\n    }\n    return items;\n}\n","\nimport { useAtom, useAtomValue } from 'jotai';\nimport { nanoid } from 'nanoid';\nimport { IconButton } from '@grafana/ui';\nimport React from 'react';\nimport { surroundingDataFilterAtom, surroundingSelectedFieldsAtom, tableFieldsAtom } from 'store/discover';\nimport { isComplexType } from 'utils/data';\nimport { css } from '@emotion/css';\n\nexport function SurroundingContentTableActions({ fieldName, fieldValue }: any) {\n    console.log(fieldName, fieldValue);\n    const [selectedSurroundingFields, setSelectedSurroundingFields] = useAtom(surroundingSelectedFieldsAtom);\n    const [surroundingDataFilter, setSurroundingDataFilter] = useAtom(surroundingDataFilterAtom);\n    const tableFields = useAtomValue(tableFieldsAtom);\n    const fieldType = tableFields.find(field => field.Field === fieldName).Type;\n    const hasField = selectedSurroundingFields.some((item: any) => item.Field === fieldName);\n    const filterValue = typeof fieldValue === 'object' ? JSON.stringify(fieldValue) : fieldValue;\n    return (\n        <>\n            <div className=\"icons\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                {!isComplexType(fieldType) && (\n                    <div\n                        className={css`\n                            display: flex;\n                            align-items: 'center';\n                            margin-left: 10px;\n                        `}\n                    >\n                        <IconButton\n                            name=\"plus-circle\"\n                            onClick={e => {\n                                console.log(e);\n                                setSurroundingDataFilter([...surroundingDataFilter, { fieldName, operator: '=', value: [fieldValue], id: nanoid() }]);\n                                e.stopPropagation();\n                            }}\n                            tooltip=\"Equivalent filtration\"\n                        />\n                        <IconButton\n                            name=\"minus-circle\"\n                            style={{ marginLeft: '4px' }}\n                            onClick={e => {\n                                console.log(e);\n                                setSurroundingDataFilter([\n                                    ...surroundingDataFilter,\n                                    {\n                                        fieldName,\n                                        operator: '!=',\n                                        value: [fieldValue],\n                                        id: nanoid(),\n                                    },\n                                ]);\n                                e.stopPropagation();\n                            }}\n                            tooltip=\"Nonequivalent filtration\"\n                        />\n                    </div>\n                )}\n            </div>\n        </>\n    );\n}\n","'use client';\n\nimport { Row, ColumnDef } from '@tanstack/react-table';\nimport JsonView from '@uiw/react-json-view';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { ColumnStyleWrapper, HoverStyle } from '../discover-content/discover-content.style';\nimport { SELECTDB_THEME, SELECTDB_THEME_LIGHT } from '../discover-content/json-viewer.theme';\nimport { useAtom, useAtomValue } from 'jotai';\nimport { useRequest } from 'ahooks';\nimport { css } from '@emotion/css';\nimport { SurroundingContentItem } from './surrounding-content-item';\nimport { SurroundingLogsActions } from './logs-actions';\nimport SurroundingDiscoverFilter from './discover-filter';\nimport { Button, IconButton, LoadingBar, Tab, TabContent, TabsBar, useTheme2 } from '@grafana/ui';\nimport { SurroundingParams } from './types';\nimport SDCollapsibleTable from 'components/selectdb-ui/sd-collapsible-table';\nimport {\n    selectedRowAtom,\n    currentTimeFieldAtom,\n    currentClusterAtom,\n    currentTableAtom,\n    currentCatalogAtom,\n    currentDatabaseAtom,\n    surroundingTableDataAtom,\n    selectedDatasourceAtom,\n    afterCountAtom,\n    afterTimeAtom,\n    afterTimeFieldPageSizeAtom,\n    beforeCountAtom,\n    beforeTimeAtom,\n    beforeTimeFieldPageSizeAtom,\n    surroundingDataFilterAtom,\n    surroundingSelectedFieldsAtom,\n} from 'store/discover';\nimport dayjs from 'dayjs';\nimport { get, sortBy } from 'lodash-es';\nimport { getSurroundingDataService } from 'services/discover';\nimport { lastValueFrom } from 'rxjs';\nimport { convertColumnToRow } from 'utils/data';\nimport { generateTableDataUID } from 'utils/utils';\nimport { SurroundingContentTableActions } from './content/content-table-actions';\n\nexport default function SurroundingLogs() {\n    const theme = useTheme2();\n    const selectedRow = useAtomValue(selectedRowAtom);\n    const selectdbDS = useAtomValue(selectedDatasourceAtom);\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const [selectedSurroundingFields, setSelectedSurroundingFields] = useAtom(surroundingSelectedFieldsAtom);\n    const [surroundingDataFilter] = useAtom<any>(surroundingDataFilterAtom);\n    const hasSelectedFields = selectedSurroundingFields.length > 0;\n    const [fields, setFields] = useState<any[]>([]);\n    const currentCluster = useAtomValue(currentClusterAtom);\n    const currentTable = useAtomValue(currentTableAtom);\n    const currentCatalog = useAtomValue(currentCatalogAtom);\n    const currentDatabase = useAtomValue(currentDatabaseAtom);\n    const [surroundingTableData, setSurroundingTableData] = useAtom(surroundingTableDataAtom);\n    const [beforeCount, setBeforeCount] = useAtom(beforeCountAtom);\n    const [afterCount, setAfterCount] = useAtom(afterCountAtom);\n    const [beforeTimeFieldPageSize, setBeforeTimeFieldPageSize] = useAtom(beforeTimeFieldPageSizeAtom);\n    const [afterTimeFieldPageSize, setAfterTimeFieldPageSize] = useAtom(afterTimeFieldPageSizeAtom);\n    const [beforeTime, setBeforeTime] = useAtom(beforeTimeAtom);\n    const [afterTime, setAfterTime] = useAtom(afterTimeAtom);\n    const [state, updateState] = useState([\n        {\n            label: 'Table',\n            value: 'Table',\n            active: true,\n        },\n        {\n            label: 'JSON',\n            value: 'JSON',\n            active: false,\n        },\n    ]);\n\n    function handleRemove(field: any) {\n        const index = selectedSurroundingFields.findIndex((item: any) => item.Field === field.Field);\n        selectedSurroundingFields.splice(index, 1);\n        setSelectedSurroundingFields([...selectedSurroundingFields]);\n    }\n\n    const { loading: getAfterSurroundingDataLoading, run: getAfterSurroundingData } = useRequest(\n        ({ pageSize = afterTimeFieldPageSize, time = afterTime }: any) => {\n            console.log(time);\n            const params: SurroundingParams = getQueryParams({\n                pageSize,\n                operator: '>',\n                time,\n            });\n            console.log(params.time);\n\n            return lastValueFrom(\n                getSurroundingDataService({\n                    selectdbDS,\n                    ...params,\n                }),\n            );\n        },\n        {\n            manual: true,\n            onSuccess: async (res: any, params: any) => {\n                if (res.ok) {\n                    const rowsData = convertColumnToRow(res.data);\n                    const result = generateSurroundingResult(rowsData, currentTimeField);\n                    let data = [...surroundingTableData];\n                    data.push(...result);\n                    setAfterCount(afterCount + data.length);\n                    setAfterTime(result[0]._original[currentTimeField]);\n                    setSurroundingTableData(data);\n                    // setTimeout(() => {\n                    //     scrollToSelectedRow();\n                    // }, 50);\n                }\n            },\n        },\n    );\n\n    function getQueryParams({ pageSize = 5, operator = '>', time = selectedRow.time }: any) {\n        const params: SurroundingParams = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            time,\n            data_filters: [],\n            pageSize,\n            operator,\n            cluster: currentCluster,\n            theme: theme.isDark ? 'dark' : 'light',\n        };\n        if (surroundingDataFilter.length > 0) {\n            params.data_filters = surroundingDataFilter;\n        }\n        return params;\n    }\n\n    const { loading: getBeforeSurroundingDataLoading, run: getBeforeSurroundingData } = useRequest(\n        ({ pageSize = beforeTimeFieldPageSize, time = selectedRow.time }: any) => {\n            const params: SurroundingParams = getQueryParams({\n                pageSize,\n                operator: '<',\n                time,\n            });\n\n            return lastValueFrom(\n                getSurroundingDataService({\n                    selectdbDS,\n                    ...params,\n                }),\n            );\n        },\n        {\n            manual: true,\n            onSuccess: async (res: any, params: any) => {\n                if (res.ok) {\n                    const rowsData = convertColumnToRow(res.data);\n                    const result = generateSurroundingResult(rowsData, currentTimeField);\n                    let data = [...surroundingTableData];\n                    data.unshift(...res.data);\n                    setBeforeCount(beforeCount + result.length);\n                    setBeforeTime(res.data[0]._original[currentTimeField]);\n                    setSurroundingTableData(data);\n                    // setTimeout(() => {\n                    //     scrollToSelectedRow();\n                    // }, 50);\n                }\n            },\n        },\n    );\n\n    function scrollToSelectedRow() {\n        const selectedElement = document.getElementById('selected');\n        if (selectedElement) {\n            selectedElement.scrollIntoView({ block: 'center', behavior: 'smooth' });\n        }\n    }\n\n    const { loading: initLoading } = useRequest(\n        () => {\n            const prevTimeParams: SurroundingParams = getQueryParams({\n                operator: '<',\n            });\n            const afterTimeParams: SurroundingParams = getQueryParams({\n                operator: '>',\n            });\n            return Promise.all([\n                lastValueFrom(\n                    getSurroundingDataService({\n                        selectdbDS,\n                        ...prevTimeParams,\n                    }),\n                ),\n                lastValueFrom(\n                    getSurroundingDataService({\n                        selectdbDS,\n                        ...afterTimeParams,\n                    }),\n                ),\n            ]);\n        },\n        {\n            refreshDeps: [surroundingDataFilter],\n            onSuccess: async (res: any) => {\n                if (res[0].ok && res[1].ok) {\n                    const rowsData1 = convertColumnToRow(res[0].data);\n                    const rowsData2 = convertColumnToRow(res[1].data);\n                    const result1 = generateSurroundingResult(rowsData1, currentTimeField);\n                    const result2 = generateSurroundingResult(rowsData2, currentTimeField);\n                    const selectedResult = generateSurroundingResult([selectedRow._original], currentTimeField);\n                    const data = [...result1, ...selectedResult, ...result2];\n                    const rowsDataWithUid = await generateTableDataUID(data);\n                    if (result1.length > 0) {\n                        setBeforeCount(result1.length);\n                        setBeforeTime(result1[0]._original[currentTimeField]);\n                    } else {\n                        setBeforeTime(selectedRow.time);\n                    }\n                    if (result1.length > 0) {\n                        setAfterCount(result1.length);\n                        setAfterTime(result1[0]._original[currentTimeField]);\n                    } else {\n                        setAfterTime(selectedRow.time);\n                    }\n                    setSurroundingTableData(rowsDataWithUid);\n                    setTimeout(() => {\n                        scrollToSelectedRow();\n                    }, 50);\n                } else {\n                    // toast.error(res[1].message);\n                }\n            },\n            onError: err => {\n                console.log(err);\n            },\n        },\n    );\n\n    useEffect(() => {\n        const data = surroundingTableData.map(item => {\n            return {\n                _original: item._original,\n                time: item._original?.[currentTimeField] || '',\n                _source: item._source,\n                _uid: item._uid,\n                selected: item._uid === selectedRow._uid,\n            };\n        });\n        setFields(data);\n    }, [surroundingTableData, currentTimeField, selectedRow._uid]);\n\n    const renderBeforeLoadingBar = () => {\n        if (initLoading || getBeforeSurroundingDataLoading) {\n            return (\n                <div\n                    className={css`\n                        position: absolute;\n                        bottom: 0;\n                        left: 0;\n                        width: 100%;\n                    `}\n                >\n                    <LoadingBar width={100} />\n                </div>\n            );\n        }\n        return null;\n    };\n\n    const renderAfterLoadingBar = () => {\n        if (initLoading || getAfterSurroundingDataLoading) {\n            return (\n                <div\n                    className={css`\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        width: 100%;\n                    `}\n                >\n                    <LoadingBar width={100} />\n                </div>\n            );\n        }\n        return null;\n    };\n\n    const renderSubComponent = ({ row }: { row: Row<any> }) => {\n        const subTableData = Object.keys(row.original._original).map(key => {\n            return {\n                field: key,\n                value: row.original._original[key],\n            };\n        });\n        return (\n            <div\n                className={css`\n                    position: relative;\n                `}\n            >\n                <TabsBar>\n                    {state.map((tab, index) => {\n                        return (\n                            <Tab\n                                key={index}\n                                label={tab.label}\n                                active={tab.active}\n                                onChangeTab={() =>\n                                    updateState(\n                                        state.map((tab, idx) => ({\n                                            ...tab,\n                                            active: idx === index,\n                                        })),\n                                    )\n                                }\n                                counter={subTableData.length}\n                            />\n                        );\n                    })}\n                </TabsBar>\n                <TabContent>\n                    {state[0].active && (\n                        <table className=\"bg-b1/20 pl-4 backdrop-blur-md dark:bg-n9/60\">\n                            <tbody>\n                                {subTableData.map((item: any) => {\n                                    let fieldValue = item.value;\n                                    const fieldName = item.field;\n                                    if (typeof fieldValue === 'object') {\n                                        fieldValue = JSON.stringify(fieldValue);\n                                    }\n                                    const tableRowStyle = css`\n                                        &:hover {\n                                            .filter-table-content {\n                                                visibility: visible;\n                                            }\n                                        }\n                                    `;\n                                    return (\n                                        <tr className={`${tableRowStyle}`} key={fieldName}>\n                                            <td\n                                                className={css`\n                                                    height: 32px;\n                                                    width: 70px;\n                                                `}\n                                            >\n                                                <div\n                                                    className={`filter-table-content ${css`\n                                                        visibility: hidden;\n                                                    `}`}\n                                                >\n                                                    <SurroundingContentTableActions fieldName={fieldName} fieldValue={fieldValue} />\n                                                </div>\n                                            </td>\n                                            <td className=\"h-8 text-xs\">{fieldName || '-'}</td>\n                                            <td className=\"h-8 whitespace-normal text-xs\">\n                                                <div className=\"w-full break-all\">{fieldValue || '-'}</div>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    )}\n                    {state[1].active && (\n                        <div>\n                            <JsonView\n                                value={row.original._original}\n                                className={`-mt-2 pl-11 !leading-6 ${css`\n                                    .w-rjv-wrap {\n                                        border-left: none !important;\n                                    }\n                                `}`}\n                                shortenTextAfterLength={0}\n                                indentWidth={36}\n                                displayDataTypes={false}\n                                enableClipboard={false}\n                                style={theme.isDark ? SELECTDB_THEME : SELECTDB_THEME_LIGHT}\n                            />\n                        </div>\n                    )}\n                </TabContent>\n            </div>\n        );\n    };\n\n    function generateSurroundingResult(result: any, timeField: string) {\n        const sortedResult = sortBy(result, timeField);\n        const _sourceResult = sortedResult.map((item: any) => {\n            let itemSource = '';\n            for (const key in item) {\n                let highlightValue = item[key];\n                // 兼容 Variant 类型\n                if (typeof highlightValue === 'object') {\n                    highlightValue = JSON.stringify(highlightValue);\n                }\n                itemSource += `<span style=\"background-color: ${\n                    theme.isDark ? '#3F3F4F' : '#BED8FD'\n                } ; padding: 0px 4px 2px; margin-right: 4px; border-radius: 4px;\">${key}:</span>${highlightValue} `;\n            }\n            return {\n                _original: item,\n                _source: itemSource,\n            };\n        });\n        return _sourceResult;\n    }\n\n    const columns = useMemo<Array<ColumnDef<any>>>(() => {\n        let dynamicColumns: Array<ColumnDef<any>> = [\n            {\n                accessorKey: 'collapse',\n                header: ``,\n                cell: ({ row, getValue }) => {\n                    return (\n                        row.getCanExpand() && (\n                            <div className=\"flex items-center\">\n                                {row.getIsExpanded() ? (\n                                    <IconButton onClick={row.getToggleExpandedHandler()} name=\"arrow-down\" tooltip=\"收起\" />\n                                ) : (\n                                    <IconButton onClick={row.getToggleExpandedHandler()} name=\"arrow-right\" tooltip=\"展开\" />\n                                )}\n                                <div className=\"ml-1\">{getValue<string>()}</div>\n                            </div>\n                        )\n                    );\n                },\n            },\n            {\n                header: 'Time',\n                accessorKey: 'time',\n                cell: ({ row, getValue }) => {\n                    const fieldValue = getValue<string>();\n                    const fieldName = currentTimeField;\n                    const fieldType = 'DATE';\n                    const timeField = dayjs(fieldValue).format('YYYY-MM-DD HH:mm:ss');\n                    return (\n                        <div\n                            className={`${css`\n                                width: 210px;\n                            `} ${HoverStyle}`}\n                        >\n                            <div\n                                className={css`\n                                    display: flex;\n                                    align-items: center;\n                                `}\n                            >\n                                {timeField}\n                                <div\n                                    className={`filter-content ${css`\n                                        visibility: hidden;\n                                    `}`}\n                                >\n                                    <SurroundingContentItem fieldName={fieldName} fieldValue={fieldValue} fieldType={fieldType} />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                },\n            },\n        ];\n        if (!hasSelectedFields) {\n            dynamicColumns.push({\n                accessorKey: '_source',\n                header: '_source',\n                cell: ({ row, getValue }) => {\n                    function createMarkup() {\n                        return { __html: getValue<string>() };\n                    }\n                    return (\n                        <div\n                            className={css`\n                                padding-top: 0.5rem;\n                                padding-bottom: 0.5rem;\n                                font-size: 0.875rem;\n                                line-height: 1.25rem;\n                            `}\n                        >\n                            <ColumnStyleWrapper\n                                className={css`\n                                    .field-key {\n                                        background-color: ${theme.isDark ? '#3f3f4f' : 'rgb(191, 217, 253)'};\n                                    }\n                                `}\n                            >\n                                <div\n                                    dangerouslySetInnerHTML={createMarkup()}\n                                    className={css`\n                                        max-height: 12rem;\n                                        overflow: auto;\n                                        word-break: break-all;\n                                        white-space: pre-wrap;\n                                    `}\n                                />\n                            </ColumnStyleWrapper>\n                        </div>\n                    );\n                },\n            });\n        } else {\n            dynamicColumns = [\n                ...dynamicColumns,\n                ...selectedSurroundingFields.map((field: any) => {\n                    return {\n                        accessorKey: field.Field,\n                        header: () => (\n                            <div\n                                className={css`\n                                    display: flex;\n                                    align-items: center;\n                                `}\n                            >\n                                <div>{field.Field}</div>\n                                <IconButton\n                                    name=\"times\"\n                                    tooltip=\"Remove\"\n                                    style={{\n                                        marginLeft: '8px',\n                                        cursor: 'pointer',\n                                        marginTop: '2px',\n                                    }}\n                                    onClick={e => {\n                                        handleRemove(field);\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                    }}\n                                />\n                            </div>\n                        ),\n                        cell: ({ row, getValue }: any) => {\n                            // let fieldValue = row.original._original[field.Field];\n                            let fieldValue = get(row.original._original, field.Field);\n                            const fieldName = field.Field;\n                            const fieldType = field.Type;\n                            if (typeof fieldValue === 'object') {\n                                fieldValue = JSON.stringify(fieldValue);\n                            }\n                            return (\n                                <div\n                                    className={`${HoverStyle} ${css`\n                                        display: flex;\n                                        align-items: center;\n                                        min-height: 48px;\n                                    `}`}\n                                >\n                                    <div className={`max-h-48 overflow-auto`}>\n                                        <div className=\"flex items-center break-all py-4\">\n                                            {field.value === 'trace_id' ? <Button>{fieldValue}</Button> : <span className=\"text-xs\">{fieldValue}</span>}\n                                        </div>\n                                    </div>\n                                    <div\n                                        className={`filter-content ${css`\n                                            visibility: hidden;\n                                        `}`}\n                                    >\n                                        <SurroundingContentItem fieldName={fieldName} fieldValue={fieldValue} fieldType={fieldType} />\n                                    </div>\n                                </div>\n                            );\n                        },\n                    };\n                }),\n            ];\n        }\n        return dynamicColumns;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentTimeField, handleRemove, hasSelectedFields, selectedSurroundingFields]);\n\n    return (\n        <div>\n            <SurroundingDiscoverFilter dataFilter={surroundingDataFilter} />\n            <div className=\"h-[2px] bg-b1 dark:bg-black\" />\n            <div style={{ position: 'relative' }}>\n                <SurroundingLogsActions\n                    getSurroundingData={getBeforeSurroundingData}\n                    getSurroundingDataLoading={getBeforeSurroundingDataLoading}\n                    time={beforeTime}\n                    type=\"before\"\n                    timeFieldPageSize={beforeTimeFieldPageSize}\n                    setTimeFieldPageSize={setBeforeTimeFieldPageSize}\n                    tips=\"Old records\"\n                    count={beforeCount}\n                />\n                {renderBeforeLoadingBar()}\n            </div>\n            <div style={{ height: 'calc(100vh - 220px)', overflow: 'auto', position: 'relative' }}>\n                <div className=\"mx-6 border\">\n                    <SDCollapsibleTable data={fields} columns={columns} getRowCanExpand={() => true} renderSubComponent={renderSubComponent} />\n                </div>\n                {/* {initLoading ? (\n                    <LoadingBar width={100} />\n                ) : (\n                    {renderBeforeLoadingBar}\n                    <div className=\"mx-6 border\">\n                        <SDCollapsibleTable data={fields} columns={columns} getRowCanExpand={() => true} renderSubComponent={renderSubComponent} />\n                    </div>\n                )} */}\n            </div>\n            <div style={{ position: 'relative' }}>\n                {renderAfterLoadingBar()}\n                <SurroundingLogsActions\n                    getSurroundingData={getAfterSurroundingData}\n                    getSurroundingDataLoading={getAfterSurroundingDataLoading}\n                    time={afterTime}\n                    type=\"after\"\n                    timeFieldPageSize={afterTimeFieldPageSize}\n                    setTimeFieldPageSize={setAfterTimeFieldPageSize}\n                    tips={`New records`}\n                    count={afterCount}\n                />\n            </div>\n        </div>\n    );\n}\n","'use client';\nimport { ColumnDef, Row } from '@tanstack/react-table';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport { Button, Drawer, Icon, IconButton, LoadingBar, Pagination, Tab, TabContent, TabsBar, useTheme2 } from '@grafana/ui';\nimport JsonView from '@uiw/react-json-view';\nimport {\n    tableTotalCountAtom,\n    tableDataAtom,\n    selectedFieldsAtom,\n    selectedRowAtom,\n    surroundingTableDataAtom,\n    pageSizeAtom,\n    pageAtom,\n    afterCountAtom,\n    beforeCountAtom,\n    surroundingDataFilterAtom,\n    surroundingSelectedFieldsAtom,\n    currentCatalogAtom,\n    currentClusterAtom,\n    currentDatabaseAtom,\n    currentDateAtom,\n    currentIndexAtom,\n    currentTableAtom,\n    currentTimeFieldAtom,\n    tableFieldsAtom,\n    tableTracesDataAtom,\n    searchValueAtom,\n    discoverLoadingAtom,\n} from 'store/discover';\nimport { get } from 'lodash-es';\nimport { Button as AntButton } from 'antd';\nimport SDCollapsibleTable from 'components/selectdb-ui/sd-collapsible-table';\nimport { ColumnStyleWrapper, HoverStyle } from './discover-content.style';\nimport { css } from '@emotion/css';\nimport { ContentTableActions } from './content-table-actions';\nimport { SELECTDB_THEME, SELECTDB_THEME_LIGHT } from './json-viewer.theme';\nimport { PanelRenderer, PanelRendererProps } from '@grafana/runtime';\nimport { LoadingState } from '@grafana/data';\nimport { ContentItem } from './content-item';\nimport SurroundingLogs from 'components/surrounding-logs';\nimport dayjs from 'dayjs';\nimport TraceDetail from 'components/trace-detail';\n\nexport default function DiscoverContent({ fetchNextPage, getTraceData }: { fetchNextPage: (page: number) => void; getTraceData: (traceId: string) => any }) {\n    const theme = useTheme2();\n    const [fields, setFields] = useState<any[]>([]);\n    const tableTotalCount = useAtomValue(tableTotalCountAtom);\n    const [tableData, setTableData] = useAtom(tableDataAtom);\n    const [selectedFields, setSelectedFields] = useAtom(selectedFieldsAtom);\n    const hasSelectedFields = selectedFields.length > 0;\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const [surroundingOpen, setSurroundingOpen] = useState(false);\n    const [selectedRow, setSelectedRow] = useAtom(selectedRowAtom);\n    const setSurroundingTableData = useSetAtom(surroundingTableDataAtom);\n    const setSurroundingDataFilter = useSetAtom(surroundingDataFilterAtom);\n    const setSelectedSurroundingFields = useSetAtom(surroundingSelectedFieldsAtom);\n    const setBeforeCount = useSetAtom(beforeCountAtom);\n    const setAfterCount = useSetAtom(afterCountAtom);\n    const [pageSize, setPageSize] = useAtom(pageSizeAtom);\n    const [tracesData, setTraceData] = useAtom(tableTracesDataAtom);\n    const [page, setPage] = useAtom(pageAtom);\n    const [drawerOpen, setDrawerOpen] = useState(false);\n    const [surroundingLogsOpen, setSurroundingLogsOpen] = useState(false);\n    const currentIndexes = useAtomValue(currentIndexAtom);\n    const tableFields = useAtomValue(tableFieldsAtom);\n    const [fieldKeyBg, setFieldKeyBg] = useState<string>('#3f3f4f');\n    const loading = useAtomValue(discoverLoadingAtom);\n\n    useEffect(() => {\n        if (theme.isDark) {\n            setFieldKeyBg('#3f3f4f');\n        } else {\n            setFieldKeyBg('rgb(191, 217, 253)');\n        }\n        console.log(theme.isDark);\n    }, [theme.isDark]);\n\n    const [state, updateState] = useState([\n        {\n            label: 'Table',\n            value: 'Table',\n            active: true,\n        },\n        {\n            label: 'JSON',\n            value: 'JSON',\n            active: false,\n        },\n    ]);\n    // 管理展开/收起状态\n    const [expandedRows, setExpandedRows] = useState<any>({});\n    const toggleRow = (index: number) => {\n        setExpandedRows((prev: any) => ({\n            ...prev,\n            [index]: !prev[index],\n        }));\n    };\n\n    function onClose() {\n        setSurroundingOpen(false);\n    }\n\n    useEffect(() => {\n        const data = tableData.map(item => {\n            return {\n                _original: item._original,\n                time: item._original?.[currentTimeField] || '',\n                _source: item._source,\n                _uid: item?._uid,\n            };\n        });\n        setFields(data);\n    }, [tableData, currentTimeField]);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const handleRemove = React.useCallback(\n        (field: any) => {\n            const index = selectedFields.findIndex((item: any) => item.Field === field.Field);\n            selectedFields.splice(index, 1);\n            setSelectedFields([...selectedFields]);\n        },\n        [selectedFields, setSelectedFields],\n    );\n\n    const renderSubComponent = ({ row }: { row: Row<any> }) => {\n        const subTableData = Object.keys(row.original._original).map(key => {\n            return {\n                field: key,\n                value: row.original._original[key],\n            };\n        });\n        return (\n            <div\n                className={css`\n                    position: relative;\n                `}\n            >\n                <TabsBar\n                    className={css`\n                        ${theme.isDark ? 'background-color: hsl(var(--n9) / 0.4);' : 'background-color: hsl(var(--b1) / 0.6);'}\n                    `}\n                >\n                    {state.map((tab, index) => {\n                        return (\n                            <Tab\n                                key={index}\n                                label={tab.label}\n                                active={tab.active}\n                                onChangeTab={() =>\n                                    updateState(\n                                        state.map((tab, idx) => ({\n                                            ...tab,\n                                            active: idx === index,\n                                        })),\n                                    )\n                                }\n                                counter={subTableData.length}\n                            />\n                        );\n                    })}\n                </TabsBar>\n\n                <TabContent>\n                    {state[0].active && (\n                        <table\n                            // className=\"bg-b1/20 pl-4 backdrop-blur-md dark:bg-n9/60\"\n                            className={css`\n                                padding-left: 16px;\n                                backdrop-filter: blur(12px);\n                                -webkit-backdrop-filter: blur(12px);\n                                width: 100%;\n                                ${theme.isDark ? 'background-color: hsl(var(--n9) / 0.6);' : 'background-color: hsl(var(--b1) / 0.2)'}\n                            `}\n                        >\n                            <tbody>\n                                {subTableData.map((item: any) => {\n                                    let fieldValue = item.value;\n                                    const fieldName = item.field;\n                                    if (typeof fieldValue === 'object') {\n                                        fieldValue = JSON.stringify(fieldValue);\n                                    }\n                                    const tableRowStyle = css`\n                                        &:hover {\n                                            .filter-table-content {\n                                                visibility: visible;\n                                            }\n                                        }\n                                    `;\n                                    return (\n                                        <tr className={`${tableRowStyle}`} key={fieldName}>\n                                            <td\n                                                className={css`\n                                                    height: 32px;\n                                                    width: 70px;\n                                                `}\n                                            >\n                                                <div\n                                                    className={`filter-table-content ${css`\n                                                        visibility: hidden;\n                                                    `}`}\n                                                >\n                                                    <ContentTableActions fieldName={fieldName} fieldValue={fieldValue} />\n                                                </div>\n                                            </td>\n                                            <td\n                                                className={css`\n                                                    height: 32px;\n                                                    font-size: 12px;\n                                                `}\n                                            >\n                                                {fieldName || '-'}\n                                            </td>\n                                            <td\n                                                className={css`\n                                                    height: 32px;\n                                                    font-size: 12px;\n                                                    white-space: normal;\n                                                `}\n                                            >\n                                                <div\n                                                    className={css`\n                                                        width: 100%;\n                                                        word-break: break-all;\n                                                    `}\n                                                >\n                                                    {fieldValue || '-'}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    )}\n                    {state[1].active && (\n                        <div>\n                            <JsonView\n                                value={row.original._original}\n                                className={`-mt-2 pl-11 !leading-6 ${css`\n                                    .w-rjv-wrap {\n                                        border-left: none !important;\n                                    }\n                                `}`}\n                                shortenTextAfterLength={0}\n                                indentWidth={36}\n                                displayDataTypes={false}\n                                enableClipboard={false}\n                                style={theme.isDark ? SELECTDB_THEME : SELECTDB_THEME_LIGHT}\n                            />\n                        </div>\n                    )}\n                </TabContent>\n                <a\n                    onClick={() => {\n                        console.log('row', row);\n                        setSurroundingLogsOpen(true);\n                        setSelectedRow(row.original);\n                    }}\n                    className={css`\n                        position: absolute;\n                        right: 1rem;\n                        top: 0;\n                        cursor: pointer;\n                        padding-top: 0.5rem;\n                        &:hover {\n                            color: rgb(43, 102, 253);\n                        }\n                    `}\n                >\n                    Surrounding Logs\n                </a>\n            </div>\n        );\n    };\n\n    const openTraceDrawer = (traceId: string) => {\n        // request\n        setDrawerOpen(true);\n        getTraceData(traceId);\n    };\n\n    const columns = useMemo<Array<ColumnDef<any>>>(() => {\n        let dynamicColumns: Array<ColumnDef<any>> = [\n            {\n                accessorKey: 'collapse',\n                header: ``,\n                cell: ({ row, getValue }) => {\n                    return (\n                        row.getCanExpand() && (\n                            <div className=\"flex items-center\">\n                                {row.getIsExpanded() ? (\n                                    <IconButton onClick={row.getToggleExpandedHandler()} name=\"arrow-down\" tooltip=\"收起\" />\n                                ) : (\n                                    <IconButton onClick={row.getToggleExpandedHandler()} name=\"arrow-right\" tooltip=\"展开\" />\n                                )}\n                                <div className=\"ml-1\">{getValue<string>()}</div>\n                            </div>\n                        )\n                    );\n                },\n            },\n            {\n                header: 'Time',\n                accessorKey: 'time',\n                cell: ({ row, getValue }) => {\n                    const fieldValue = getValue<string>();\n                    const fieldName = currentTimeField;\n                    const fieldType = 'DATE';\n                    const timeField = fieldValue;\n                    return (\n                        <div\n                            className={`${css`\n                                width: 240px;\n                            `} ${HoverStyle}`}\n                        >\n                            <div\n                                className={css`\n                                    display: flex;\n                                    align-items: center;\n                                `}\n                            >\n                                {timeField}\n                                <div\n                                    className={`filter-content ${css`\n                                        visibility: hidden;\n                                    `}`}\n                                >\n                                    <ContentItem fieldName={fieldName} fieldValue={fieldValue} fieldType={fieldType} />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                },\n            },\n        ];\n        if (!hasSelectedFields) {\n            dynamicColumns.push({\n                accessorKey: '_source',\n                header: '_source',\n                cell: ({ row, getValue }) => {\n                    function createMarkup() {\n                        return { __html: getValue<string>() };\n                    }\n                    return (\n                        <div\n                            className={css`\n                                padding-top: 0.5rem;\n                                padding-bottom: 0.5rem;\n                                font-size: 0.875rem;\n                                line-height: 1.25rem;\n                            `}\n                        >\n                            <ColumnStyleWrapper\n                                className={css`\n                                    & .field-key {\n                                        background-color: ${theme.isDark ? '#3f3f4f' : 'rgb(191, 217, 253)'};\n                                    }\n                                `}\n                            >\n                                <div\n                                    dangerouslySetInnerHTML={createMarkup()}\n                                    className={css`\n                                        max-height: 12rem;\n                                        overflow: auto;\n                                        word-break: break-all;\n                                        white-space: pre-wrap;\n                                    `}\n                                />\n                            </ColumnStyleWrapper>\n                        </div>\n                    );\n                },\n            });\n        } else {\n            dynamicColumns = [\n                ...dynamicColumns,\n                ...selectedFields.map((field: any) => {\n                    return {\n                        accessorKey: field.Field,\n                        header: () => (\n                            <div\n                                className={css`\n                                    display: flex;\n                                    align-items: center;\n                                `}\n                            >\n                                <div>{field.Field}</div>\n                                <IconButton\n                                    name=\"times\"\n                                    tooltip=\"Remove\"\n                                    style={{\n                                        marginLeft: '8px',\n                                        cursor: 'pointer',\n                                        marginTop: '2px',\n                                    }}\n                                    onClick={e => {\n                                        handleRemove(field);\n                                        e.preventDefault();\n                                        e.stopPropagation();\n                                    }}\n                                />\n                            </div>\n                        ),\n                        cell: ({ row, getValue }: any) => {\n                            // let fieldValue = row.original._original[field.Field];\n                            let fieldValue = get(row.original._original, field.Field);\n                            const fieldName = field.Field;\n                            const fieldType = field.Type;\n                            if (typeof fieldValue === 'object') {\n                                fieldValue = JSON.stringify(fieldValue);\n                            }\n                            return (\n                                <div\n                                    className={`${HoverStyle} ${css`\n                                        display: flex;\n                                        align-items: center;\n                                        min-height: 48px;\n                                    `}`}\n                                >\n                                    <div\n                                        className={css`\n                                            max-height: 192px;\n                                            overflow: auto;\n                                        `}\n                                    >\n                                        <div\n                                            className={css`\n                                                display: flex;\n                                                align-items: center;\n                                                padding: 16px;\n                                                word-break: break-all;\n                                            `}\n                                        >\n                                            {field.value === 'trace_id' ? (\n                                                <AntButton onClick={() => openTraceDrawer(fieldValue)} type=\"link\">\n                                                    {fieldValue}\n                                                </AntButton>\n                                            ) : (\n                                                <span\n                                                    className={css`\n                                                        font-size: 12px;\n                                                    `}\n                                                >\n                                                    {fieldValue}\n                                                </span>\n                                            )}\n                                        </div>\n                                    </div>\n                                    <div\n                                        className={`filter-content ${css`\n                                            visibility: hidden;\n                                        `}`}\n                                    >\n                                        <ContentItem fieldName={fieldName} fieldValue={fieldValue} fieldType={fieldType} />\n                                    </div>\n                                </div>\n                            );\n                        },\n                    };\n                }),\n            ];\n        }\n        return dynamicColumns;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentTimeField, handleRemove, hasSelectedFields, selectedFields, theme.isDark]);\n\n    return (\n        <div\n            className={css`\n                overflow-x: scroll;\n            `}\n        >\n            {/* {\n                loading.getTableDataCharts && <LoadingBar width={100} />\n            } */}\n            <SDCollapsibleTable\n                className={css`\n                    width: 100%;\n                `}\n                data={fields}\n                columns={columns}\n                getRowCanExpand={() => true}\n                renderSubComponent={renderSubComponent}\n            />\n            <div\n                className={css`\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding: 0.5rem 1rem;\n                    padding-bottom: 20px;\n                `}\n            >\n                <div>Total {tableTotalCount} rows</div>\n                <Pagination\n                    currentPage={page}\n                    numberOfPages={Math.ceil(tableTotalCount / pageSize) || 1}\n                    onNavigate={toPage => {\n                        setPage(toPage);\n                    }}\n                />\n            </div>\n            <TraceDetail onClose={() => setDrawerOpen(false)} open={drawerOpen} traceId={selectedRow?.trace_id} />\n\n            {surroundingLogsOpen && (\n                <Drawer\n                    size=\"lg\"\n                    title=\"Surrounding Logs\"\n                    onClose={() => {\n                        setSurroundingTableData([]);\n                        setSurroundingDataFilter([]);\n                        setBeforeCount(0);\n                        setAfterCount(0);\n                        setSelectedSurroundingFields([]);\n                        setSurroundingLogsOpen(false);\n                    }}\n                >\n                    <SurroundingLogs />\n                </Drawer>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect } from 'react';\nimport { testIds } from '../components/testIds';\nimport { PluginPage } from '@grafana/runtime';\nimport DiscoverHeader from '../components/discover-header';\nimport '../styles/tailwind.css';\nimport DiscoverFilter from 'components/discover-filter';\nimport DiscoverSidebar from 'components/discover-sidebar';\nimport { css } from '@emotion/css';\nimport { DiscoverHistogram } from 'components/discover-histogram';\nimport { LoadingBar, useTheme2 } from '@grafana/ui';\nimport DiscoverContent from 'components/discover-content';\nimport { useAtom, useAtomValue, useSetAtom } from 'jotai';\nimport {\n    currentCatalogAtom,\n    // currentClusterAtom,\n    currentDatabaseAtom,\n    currentDateAtom,\n    currentIndexAtom,\n    currentTableAtom,\n    currentTimeFieldAtom,\n    dataFilterAtom,\n    discoverLoadingAtom,\n    // datasourcesAtom,\n    // discoverCurrentAtom,\n    // dorisInfoAtom,\n    intervalAtom,\n    pageAtom,\n    pageSizeAtom,\n    searchTypeAtom,\n    searchValueAtom,\n    selectedDatasourceAtom,\n    // selectedIndexesAtom,\n    tableDataAtom,\n    tableDataChartsAtom,\n    tableFieldsAtom,\n    tableTotalCountAtom,\n    tableTracesDataAtom,\n    topDataAtom,\n} from 'store/discover';\n// import { lastValueFrom } from 'rxjs';\nimport { getTableDataChartsService, getTableDataCountService, getTableDataService, getTableDataTraceService, getTopDataService } from 'services/discover';\nimport { FORMAT_DATE, getAutoInterval, IntervalEnum } from '../constants';\nimport { Dayjs } from 'dayjs';\nimport { getIndexesStatement, encodeBase64, getChartsData, convertColumnToRow, generateHighlightedResults, formatTracesResData, convertColumnToRowViaFieldsType } from 'utils/data';\nimport { generateTableDataUID } from 'utils/utils';\n\nexport default function PageDiscover() {\n    // const [getTableDataLoading] = React.useState(false);\n    const [page, setPage] = useAtom(pageAtom);\n    const pageSize = useAtomValue(pageSizeAtom);\n    const setTableData = useSetAtom(tableDataAtom);\n    const setTableDataCharts = useSetAtom(tableDataChartsAtom);\n    const selectdbDS = useAtomValue(selectedDatasourceAtom);\n    const currentTimeField = useAtomValue(currentTimeFieldAtom);\n    const interval = useAtomValue(intervalAtom);\n    const currentIndexes = useAtomValue(currentIndexAtom);\n    const tableFields = useAtomValue(tableFieldsAtom);\n    const searchType = useAtomValue(searchTypeAtom);\n    const dataFilter = useAtomValue(dataFilterAtom);\n    const searchValue = useAtomValue(searchValueAtom);\n    const setTopData = useSetAtom(topDataAtom);\n    // const currentCluster = useAtomValue(currentClusterAtom);\n    const currentTable = useAtomValue(currentTableAtom);\n    const currentCatalog = useAtomValue(currentCatalogAtom);\n    const currentDatabase = useAtomValue(currentDatabaseAtom);\n    const currentDate = useAtomValue(currentDateAtom);\n    const setTableTotalCount = useSetAtom(tableTotalCountAtom);\n    const setTraceData = useSetAtom(tableTracesDataAtom);\n    const [loading, setLoading] = useAtom(discoverLoadingAtom);\n\n    // const [appInfo, setAppInfo] = useAtomValue(dorisInfoAtom);\n\n    // const shouldUseClusterParam = () => enableCloudNative(appInfo?.version, appInfo?.supportComputeGroup);\n\n    // const discoverCurrent = useAtomValue(discoverCurrentAtom);\n\n    const theme = useTheme2();\n\n    useEffect(() => {\n        if (currentTimeField) {\n            getTableData();\n            getTopData();\n            getTableDataCharts();\n            getTableDataCount();\n        } else {\n            setTableDataCharts([]);\n            setTableTotalCount(NaN);\n            setTableData([]);\n            setTopData([]);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentTimeField, page]);\n    function getTableData() {\n        setLoading(prev => ({ ...prev, getTableData: true }));\n        const indexesStatement = getIndexesStatement(currentIndexes, tableFields, searchValue);\n        let payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n            sort: 'DESC',\n            search_type: searchType,\n            indexes: '',\n            page: page,\n            page_size: pageSize,\n        };\n        if (searchType === 'Search') {\n            payload.indexes_statement = indexesStatement;\n        }\n        if (dataFilter.length > 0) {\n            payload.data_filters = dataFilter;\n        } else {\n            payload.data_filters = [];\n        }\n        if (searchValue) {\n            payload.search_value = searchType === 'Search' ? encodeBase64(searchValue) : searchValue;\n        }\n\n        getTableDataService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: async ({ data, ok }: any) => {\n                setLoading(prev => ({ ...prev, getTableData: false }));\n                if (ok) {\n                    const rowsData = convertColumnToRow(data);\n\n                    const resData = generateHighlightedResults(\n                        {\n                            search_value: searchValue,\n                            indexes: currentIndexes || [],\n                        },\n                        rowsData,\n                    );\n\n                    const rowsDataWithUid = await generateTableDataUID(resData);\n\n                    setTableData(rowsDataWithUid);\n                }\n            },\n            error: (err: any) => {\n                setLoading(prev => ({ ...prev, getTableData: false }));\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    function getTableDataCharts() {\n        setLoading(prev => ({ ...prev, getTableDataCharts: true }));\n        const timeInterval = interval === IntervalEnum.Auto ? getAutoInterval(currentDate as any).interval_unit : interval;\n        const timeIntervalValue = interval === IntervalEnum.Auto ? getAutoInterval(currentDate as any).interval_value : 1;\n        const indexesStatement = getIndexesStatement(currentIndexes, tableFields, searchValue);\n        let payload: any = {\n            catalog: 'internal',\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n            // cluster: shouldUseClusterParam() ? currentCluster : '',\n            sort: 'DESC',\n            interval: timeInterval,\n            interval_value: timeIntervalValue,\n            search_type: searchType,\n            indexes: indexesStatement,\n        };\n        if (dataFilter.length > 0) {\n            payload.data_filters = dataFilter;\n        }\n        if (searchValue) {\n            payload.search_value = searchType === 'Search' ? encodeBase64(searchValue) : searchValue;\n        }\n        getTableDataChartsService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                setLoading(prev => ({ ...prev, getTableDataCharts: false }));\n                if (ok) {\n                    const value = data?.results[0]?.data?.values[0];\n                    if (!value || value.length === 0) {\n                        setTableDataCharts([]);\n                        return;\n                    }\n                    const tableDataCharts = data?.results[0]?.data?.values[0].map((item: any, index: number) => {\n                        return {\n                            TT: item,\n                            'sum(cnt)': data?.results[0]?.data?.values[1][index],\n                        };\n                    });\n                    const chartsData = getChartsData(tableDataCharts, currentDate as [Dayjs, Dayjs]);\n                    setTableDataCharts(chartsData);\n                }\n            },\n            error: (err: any) => {\n                setLoading(prev => ({ ...prev, getTableDataCharts: false }));\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    function getTopData() {\n        const indexesStatement = getIndexesStatement(currentIndexes, tableFields, searchValue);\n        let payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n            sort: 'DESC',\n            search_type: searchType,\n            indexes: '',\n            page: page,\n            page_size: 500,\n        };\n        if (searchType === 'Search') {\n            payload.indexes_statement = indexesStatement;\n        }\n        if (dataFilter.length > 0) {\n            payload.data_filters = dataFilter;\n        } else {\n            payload.data_filters = [];\n        }\n        if (searchValue) {\n            payload.search_value = searchType === 'Search' ? encodeBase64(searchValue) : searchValue;\n        }\n        getTopDataService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const rowsData = convertColumnToRowViaFieldsType(data, tableFields);\n                    console.log('rowsData', rowsData)\n                    setTopData(rowsData);\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n                setTopData([]);\n            },\n        });\n    }\n\n    function getTableDataCount() {\n        const timeInterval = interval === IntervalEnum.Auto ? getAutoInterval(currentDate as any).interval_unit : interval;\n        const timeIntervalValue = interval === IntervalEnum.Auto ? getAutoInterval(currentDate as any).interval_value : 1;\n        const indexesStatement = getIndexesStatement(currentIndexes, tableFields, searchValue);\n        let payload: any = {\n            catalog: 'internal',\n            database: currentDatabase,\n            table: currentTable,\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n            // cluster: shouldUseClusterParam() ? currentCluster : '',\n            sort: 'DESC',\n            interval: timeInterval,\n            interval_value: timeIntervalValue,\n            search_type: searchType,\n            indexes: indexesStatement,\n        };\n        if (dataFilter.length > 0) {\n            payload.data_filters = dataFilter;\n        }\n        if (searchValue) {\n            payload.search_value = searchType === 'Search' ? encodeBase64(searchValue) : searchValue;\n        }\n        getTableDataCountService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const total_count = data?.results[0]?.data?.values[0];\n                    if (!total_count) {\n                        setTableTotalCount(0);\n                        return;\n                    }\n                    setTableTotalCount(total_count);\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    function getTraceData(trace_id: string) {\n        const indexesStatement = getIndexesStatement(currentIndexes, tableFields, searchValue);\n        let payload: any = {\n            catalog: currentCatalog,\n            database: currentDatabase,\n            table: 'otel_traces', // 确定下是否可能命名错误\n            timeField: currentTimeField,\n            startDate: currentDate[0]?.format(FORMAT_DATE),\n            endDate: (currentDate[1] as Dayjs).format(FORMAT_DATE),\n            cluster: '',\n            sort: 'DESC',\n            search_type: searchType,\n            indexes: '',\n            page: page,\n            page_size: pageSize,\n            trace_id,\n        };\n        if (searchType === 'Search') {\n            payload.indexes_statement = indexesStatement;\n        }\n        if (dataFilter.length > 0) {\n            payload.data_filters = dataFilter;\n        } else {\n            payload.data_filters = [];\n        }\n        if (searchValue) {\n            payload.search_value = encodeBase64(searchValue);\n        }\n\n        getTableDataTraceService({\n            selectdbDS,\n            ...payload,\n        }).subscribe({\n            next: ({ data, ok }: any) => {\n                if (ok) {\n                    const formatedData = formatTracesResData(data);\n                    setTraceData(formatedData);\n                }\n            },\n            error: (err: any) => {\n                console.log('查询错误', err);\n            },\n        });\n    }\n\n    useEffect(() => {\n        setPage(1);\n        if (currentTimeField) {\n            getTableDataCharts();\n            getTableDataCount();\n            getTableData();\n            getTopData();\n        } else {\n            setTableDataCharts([]);\n            setTableTotalCount(NaN);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentDate, currentTimeField, dataFilter, interval]);\n\n    return (\n        <div\n            className={css`\n                & > div > div {\n                    background-color: ${theme.isDark ? '#111217' : '#F4F5F5'};\n                    padding: 0 1rem;\n                }\n            `}\n        >\n            <PluginPage pageNav={{ text: '' }}>\n                <div data-testid={testIds.pageTwo.container}>\n                    <DiscoverHeader\n                        onQuerying={() => {\n                            if (currentTimeField) {\n                                setPage(1);\n                                getTopData();\n                                getTableDataCharts();\n                                getTableDataCount();\n                                getTableData();\n                            }\n                        }}\n                        loading={loading.getTableData || loading.getTableDataCharts}\n                    />\n                    <DiscoverFilter />\n                </div>\n                <section\n                    className={css`\n                        display: grid;\n                        grid-template-columns: 2fr 8fr;\n                        grid-template-rows: 1fr;\n                        grid-template-areas: 'sidebar content';\n                        padding-top: 0.5rem;\n                        gap: 0.5rem;\n                    `}\n                >\n                    <div\n                        style={{\n                            height: 'calc(100vh - 210px)',\n                        }}\n                    >\n                        <DiscoverSidebar />\n                    </div>\n                    <div\n                        className={css`\n                            grid-area: content;\n                            display: flex;\n                            flex-direction: column;\n                            overflow: auto;\n                            height: calc(100vh - 210px);\n                            background-color: ${theme.isDark ? 'rgb(24, 27, 31)' : '#FFF'};\n                            position: relative;\n                            padding: 16px 0;\n                        `}\n                    >\n                        <div style={{ position: 'absolute', top: 0, width: '100%' }}>\n                            {loading.getTableDataCharts && <LoadingBar width={100} />}\n                        </div>\n                        <DiscoverHistogram />\n                        <div\n                            className={css`\n                                margin-top: 24px;\n                            `}\n                        >\n                            <DiscoverContent getTraceData={getTraceData} fetchNextPage={() => {}} />\n                        </div>\n                    </div>\n                </section>\n            </PluginPage>\n        </div>\n    );\n}\n"],"names":["testIds","appConfig","apiKey","apiUrl","submit","pageOne","container","navigateToFour","pageTwo","pageThree","pageFour","navigateBack","css","styled","DiscoverHeaderSearch","div","DiscoverHeaderTimeSelect","CascaderStyle","useTranslation","useAtom","useAtomValue","useSetAtom","React","currentIndexAtom","disabledOptionsAtom","indexesAtom","searchTypeAtom","searchValueAtom","selectedIndexesAtom","useTheme2","Icon","MultiSelect","RadioButtonGroup","Toggletip","SearchType","t","searchType","setSearchType","setSearchValue","disabledOptions","indexes","setSelectedIndexes","currentIndex","setCurrentIndex","searchMode","theme","options","label","value","disabled","length","tips","DropdownQueryType","className","onChange","val","filter","item","type","actionMeta","selectedIndexes","forEach","selectedValue","push","title","p","closeButton","content","placement","isDark","span","style","marginRight","name","searchFocusAtom","tableFieldsAtom","currentTimeFieldAtom","Input","getWordPosLR","str","currentPos","posR","posL","charAt","SQLSearch","onQuerying","setSearchFocus","tableFields","setTableFields","searchValue","currentTimeField","process","env","NODE_ENV","debugLabel","e","console","log","target","placeholder","useEffect","dayjs","DataSourcePicker","getDataSourceSrv","discoverCurrentAtom","locationAtom","currentClusterAtom","timeFieldsAtom","currentDateAtom","activeShortcutAtom","datasourcesAtom","selectedDatasourceAtom","timeRangeAtom","databasesAtom","tablesAtom","currentTableAtom","getLatestTime","isValidTimeFieldType","Select","Field","Button","TimeRangeInput","FORMAT_DATE","getDatabases","getFieldsService","getIndexesService","getTables","DiscoverHeader","props","catalog","setIndexes","discoverCurrent","setDiscoverCurrent","loc","setLoc","currentCluster","setCurrentCluster","timeFields","setTimeFields","currentDate","setCurrentDate","searchFocus","activeItem","setActiveItem","selectedDatasource","setSelectedDatasource","timeRange","setTimeRange","currentTable","setCurrentTable","databases","setDatabases","tables","setTables","datasources","setDataSource","setDisabledOptions","selectdbDS","getList","res","subscribe","next","data","ok","results","values","map","error","err","getFields","selectedTable","database","table","fieldTypes","index","Type","field","toUpperCase","timeField","getIndexes","columnNames","indexesTypes","tableIndexes","columnName","width","current","noDefault","ds","marginLeft","selectedDatabase","flex","selectdbTimeFiled","prev","searchParams","set","isReversed","start","from","toDate","end","to","format","onClick","latestTime","key","latestStartTime","latestEndTime","variant","icon","loading","DiscoverFilterWrapper","containerStyle","rowStyle","colStyle","footerStyle","nanoid","InlineField","InlineFieldRow","InlineSwitch","dataFilterAtom","tableFieldValuesAtom","OPERATORS","Controller","useForm","FilterContent","onHide","dataFilterValue","errors","dataFilter","setDataFilter","tableFieldValue","control","handleSubmit","watch","register","formState","defaultValues","fieldName","operator","minValue","Array","isArray","maxValue","showLabel","getValue","isNaN","onSubmit","formValues","find","f","id","newValue","newItem","updated","renderFiledComponent","currentOperator","invalid","message","required","list","datalist","idx","option","rules","render","isMulti","selected","s","includes","form","op","preventDefault","useRef","useState","getFilterSQL","Badge","IconButton","DiscoverFilter","open","setOpen","dataFilterOpen","setDataFilterOpen","discoverFilterRef","ref","toString","show","onOpen","onClose","text","data_filters","JSON","stringify","color","tooltip","FIELD_TYPES","complex","getFieldIcon","columnType","currentColumnType","some","toLocaleUpperCase","clsx","twMerge","cn","inputs","Progress","get","topDataAtom","tableTotalCountAtom","isComplexType","countValueDistribution","jsonArray","valueCountMap","Map","obj","undefined","result","times","valueStr","TopData","topData","tableTotalCount","canDisplayTopData","Object","entries","sort","a","b","count","small","toFixed","size","height","percent","status","showInfo","stopPropagation","FieldItem","children","colors","background","secondary","primary","onAdd","onRemove","searchableAtom","aggregatableAtom","fieldTypeAtom","AGGREGATABLE","SEARCHABLE","searchable","setSearchable","aggregatable","setAggregatable","fieldType","setFieldType","selectedFieldsAtom","AggregatableEnum","getFieldType","SearchableEnum","FieldTypeEnum","CollapsableSection","DiscoverSidebar","selectedFields","setSelectedFields","filteredFields","ANY","YES","NO","hasSelectedFields","availableFields","filed","handleAdd","handleRemove","findIndex","splice","isOpen","fill","fullWidth","ReactECharts","IntervalEnum","TIME_INTERVALS","getAutoInterval","translationDateIntervalType","tableDataChartsAtom","intervalAtom","pageSizeAtom","pageAtom","DiscoverHistogram","ReactEChartsInstance","tableDataCharts","interval_value","setInterval_value","interval","setInterval","pageSize","setPageSize","page","setPage","v","timeInterval","Auto","base","Date","oneDay","Math","random","i","now","round","subtext","left","top","grid","right","bottom","containLabel","xAxis","axisLabel","fontSize","fontStyle","fontWeight","axisLine","lineStyle","axisTick","toolbox","brush","xAxisIndex","yAxis","nameTextStyle","align","padding","splitLine","trigger","axisPointer","borderWidth","backgroundColor","formatter","params","html","series","barWidth","animation","chart","handler","areas","startIndex","endIndex","coordRange","interval_unit","chartsEndDate","add","date","raw","getEchartsInstance","dispatchAction","command","ele","brushOption","brushType","on","off","replace","selectdbInterval","Fragment","flexRender","getCoreRowModel","getExpandedRowModel","useReactTable","EmptySearchResult","SDCollapsibleTable","columns","renderSubComponent","getRowCanExpand","thead","getHeaderGroups","headerGroup","tr","headers","header","th","colSpan","isLight","isPlaceholder","column","columnDef","getContext","tbody","getRowModel","rows","row","original","getIsExpanded","getVisibleCells","cell","td","HoverStyle","ColumnStyleWrapper","ContentTableActions","fieldValue","hasField","filterValue","display","justifyContent","SELECTDB_THEME","SELECTDB_THEME_LIGHT","ContentItem","surroundingDataFilterAtom","SurroundingContentItem","surroundingDataFilter","setSurroundingDataFilter","SurroundingLogsActions","getSurroundingData","getSurroundingDataLoading","time","timeFieldPageSize","aria-label","SurroundingDiscoverFilter","generateUid","jsonString","keys","encoder","TextEncoder","encode","hashBuffer","crypto","subtle","digest","hashArray","Uint8Array","hashHex","padStart","join","generateTableDataUID","items","uid","_original","surroundingSelectedFieldsAtom","SurroundingContentTableActions","selectedSurroundingFields","setSelectedSurroundingFields","JsonView","useMemo","useRequest","LoadingBar","Tab","TabContent","TabsBar","selectedRowAtom","currentCatalogAtom","currentDatabaseAtom","surroundingTableDataAtom","afterCountAtom","afterTimeAtom","afterTimeFieldPageSizeAtom","beforeCountAtom","beforeTimeAtom","beforeTimeFieldPageSizeAtom","sortBy","getSurroundingDataService","lastValueFrom","convertColumnToRow","SurroundingLogs","selectedRow","fields","setFields","currentCatalog","currentDatabase","surroundingTableData","setSurroundingTableData","beforeCount","setBeforeCount","afterCount","setAfterCount","beforeTimeFieldPageSize","setBeforeTimeFieldPageSize","afterTimeFieldPageSize","setAfterTimeFieldPageSize","beforeTime","setBeforeTime","afterTime","setAfterTime","state","updateState","active","getAfterSurroundingDataLoading","run","getAfterSurroundingData","getQueryParams","manual","onSuccess","rowsData","generateSurroundingResult","cluster","getBeforeSurroundingDataLoading","getBeforeSurroundingData","unshift","scrollToSelectedRow","selectedElement","document","getElementById","scrollIntoView","block","behavior","initLoading","prevTimeParams","afterTimeParams","Promise","all","refreshDeps","rowsData1","rowsData2","result1","result2","selectedResult","rowsDataWithUid","setTimeout","onError","_source","_uid","renderBeforeLoadingBar","renderAfterLoadingBar","subTableData","tab","onChangeTab","counter","tableRowStyle","shortenTextAfterLength","indentWidth","displayDataTypes","enableClipboard","sortedResult","_sourceResult","itemSource","highlightValue","dynamicColumns","accessorKey","getCanExpand","getToggleExpandedHandler","createMarkup","__html","dangerouslySetInnerHTML","cursor","marginTop","position","setTimeFieldPageSize","overflow","Drawer","Pagination","tableDataAtom","tableTracesDataAtom","discoverLoadingAtom","AntButton","TraceDetail","DiscoverContent","fetchNextPage","getTraceData","tableData","setTableData","surroundingOpen","setSurroundingOpen","setSelectedRow","tracesData","setTraceData","drawerOpen","setDrawerOpen","surroundingLogsOpen","setSurroundingLogsOpen","currentIndexes","fieldKeyBg","setFieldKeyBg","expandedRows","setExpandedRows","toggleRow","useCallback","openTraceDrawer","traceId","currentPage","numberOfPages","ceil","onNavigate","toPage","trace_id","PluginPage","getTableDataChartsService","getTableDataCountService","getTableDataService","getTableDataTraceService","getTopDataService","getIndexesStatement","encodeBase64","getChartsData","generateHighlightedResults","formatTracesResData","convertColumnToRowViaFieldsType","PageDiscover","setTableDataCharts","setTopData","setTableTotalCount","setLoading","getTableData","getTopData","getTableDataCharts","getTableDataCount","NaN","indexesStatement","payload","startDate","endDate","search_type","page_size","indexes_statement","search_value","resData","timeIntervalValue","TT","chartsData","total_count","formatedData","pageNav","data-testid","section"],"sourceRoot":""}